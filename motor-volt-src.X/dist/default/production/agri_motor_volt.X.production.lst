

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Fri Mar 16 11:39:10 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 1.44
    44                           ; Generated 14/09/2017 GMT
    45                           ; 
    46                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F887 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  0088                     	;# 
   117  0089                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  008F                     	;# 
   122  0090                     	;# 
   123  0091                     	;# 
   124  0092                     	;# 
   125  0093                     	;# 
   126  0093                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0095                     	;# 
   130  0096                     	;# 
   131  0097                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009A                     	;# 
   135  009B                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  009F                     	;# 
   140  0105                     	;# 
   141  0107                     	;# 
   142  0108                     	;# 
   143  0109                     	;# 
   144  010C                     	;# 
   145  010C                     	;# 
   146  010D                     	;# 
   147  010E                     	;# 
   148  010F                     	;# 
   149  0185                     	;# 
   150  0187                     	;# 
   151  0188                     	;# 
   152  0189                     	;# 
   153  018C                     	;# 
   154  018D                     	;# 
   155  0000                     	;# 
   156  0001                     	;# 
   157  0002                     	;# 
   158  0003                     	;# 
   159  0004                     	;# 
   160  0005                     	;# 
   161  0006                     	;# 
   162  0007                     	;# 
   163  0008                     	;# 
   164  0009                     	;# 
   165  000A                     	;# 
   166  000B                     	;# 
   167  000C                     	;# 
   168  000D                     	;# 
   169  000E                     	;# 
   170  000E                     	;# 
   171  000F                     	;# 
   172  0010                     	;# 
   173  0011                     	;# 
   174  0012                     	;# 
   175  0013                     	;# 
   176  0014                     	;# 
   177  0015                     	;# 
   178  0015                     	;# 
   179  0016                     	;# 
   180  0017                     	;# 
   181  0018                     	;# 
   182  0019                     	;# 
   183  001A                     	;# 
   184  001B                     	;# 
   185  001B                     	;# 
   186  001C                     	;# 
   187  001D                     	;# 
   188  001E                     	;# 
   189  001F                     	;# 
   190  0081                     	;# 
   191  0085                     	;# 
   192  0086                     	;# 
   193  0087                     	;# 
   194  0088                     	;# 
   195  0089                     	;# 
   196  008C                     	;# 
   197  008D                     	;# 
   198  008E                     	;# 
   199  008F                     	;# 
   200  0090                     	;# 
   201  0091                     	;# 
   202  0092                     	;# 
   203  0093                     	;# 
   204  0093                     	;# 
   205  0093                     	;# 
   206  0094                     	;# 
   207  0095                     	;# 
   208  0096                     	;# 
   209  0097                     	;# 
   210  0098                     	;# 
   211  0099                     	;# 
   212  009A                     	;# 
   213  009B                     	;# 
   214  009C                     	;# 
   215  009D                     	;# 
   216  009E                     	;# 
   217  009F                     	;# 
   218  0105                     	;# 
   219  0107                     	;# 
   220  0108                     	;# 
   221  0109                     	;# 
   222  010C                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  010E                     	;# 
   226  010F                     	;# 
   227  0185                     	;# 
   228  0187                     	;# 
   229  0188                     	;# 
   230  0189                     	;# 
   231  018C                     	;# 
   232  018D                     	;# 
   233  0000                     	;# 
   234  0001                     	;# 
   235  0002                     	;# 
   236  0003                     	;# 
   237  0004                     	;# 
   238  0005                     	;# 
   239  0006                     	;# 
   240  0007                     	;# 
   241  0008                     	;# 
   242  0009                     	;# 
   243  000A                     	;# 
   244  000B                     	;# 
   245  000C                     	;# 
   246  000D                     	;# 
   247  000E                     	;# 
   248  000E                     	;# 
   249  000F                     	;# 
   250  0010                     	;# 
   251  0011                     	;# 
   252  0012                     	;# 
   253  0013                     	;# 
   254  0014                     	;# 
   255  0015                     	;# 
   256  0015                     	;# 
   257  0016                     	;# 
   258  0017                     	;# 
   259  0018                     	;# 
   260  0019                     	;# 
   261  001A                     	;# 
   262  001B                     	;# 
   263  001B                     	;# 
   264  001C                     	;# 
   265  001D                     	;# 
   266  001E                     	;# 
   267  001F                     	;# 
   268  0081                     	;# 
   269  0085                     	;# 
   270  0086                     	;# 
   271  0087                     	;# 
   272  0088                     	;# 
   273  0089                     	;# 
   274  008C                     	;# 
   275  008D                     	;# 
   276  008E                     	;# 
   277  008F                     	;# 
   278  0090                     	;# 
   279  0091                     	;# 
   280  0092                     	;# 
   281  0093                     	;# 
   282  0093                     	;# 
   283  0093                     	;# 
   284  0094                     	;# 
   285  0095                     	;# 
   286  0096                     	;# 
   287  0097                     	;# 
   288  0098                     	;# 
   289  0099                     	;# 
   290  009A                     	;# 
   291  009B                     	;# 
   292  009C                     	;# 
   293  009D                     	;# 
   294  009E                     	;# 
   295  009F                     	;# 
   296  0105                     	;# 
   297  0107                     	;# 
   298  0108                     	;# 
   299  0109                     	;# 
   300  010C                     	;# 
   301  010C                     	;# 
   302  010D                     	;# 
   303  010E                     	;# 
   304  010F                     	;# 
   305  0185                     	;# 
   306  0187                     	;# 
   307  0188                     	;# 
   308  0189                     	;# 
   309  018C                     	;# 
   310  018D                     	;# 
   311  0000                     	;# 
   312  0001                     	;# 
   313  0002                     	;# 
   314  0003                     	;# 
   315  0004                     	;# 
   316  0005                     	;# 
   317  0006                     	;# 
   318  0007                     	;# 
   319  0008                     	;# 
   320  0009                     	;# 
   321  000A                     	;# 
   322  000B                     	;# 
   323  000C                     	;# 
   324  000D                     	;# 
   325  000E                     	;# 
   326  000E                     	;# 
   327  000F                     	;# 
   328  0010                     	;# 
   329  0011                     	;# 
   330  0012                     	;# 
   331  0013                     	;# 
   332  0014                     	;# 
   333  0015                     	;# 
   334  0015                     	;# 
   335  0016                     	;# 
   336  0017                     	;# 
   337  0018                     	;# 
   338  0019                     	;# 
   339  001A                     	;# 
   340  001B                     	;# 
   341  001B                     	;# 
   342  001C                     	;# 
   343  001D                     	;# 
   344  001E                     	;# 
   345  001F                     	;# 
   346  0081                     	;# 
   347  0085                     	;# 
   348  0086                     	;# 
   349  0087                     	;# 
   350  0088                     	;# 
   351  0089                     	;# 
   352  008C                     	;# 
   353  008D                     	;# 
   354  008E                     	;# 
   355  008F                     	;# 
   356  0090                     	;# 
   357  0091                     	;# 
   358  0092                     	;# 
   359  0093                     	;# 
   360  0093                     	;# 
   361  0093                     	;# 
   362  0094                     	;# 
   363  0095                     	;# 
   364  0096                     	;# 
   365  0097                     	;# 
   366  0098                     	;# 
   367  0099                     	;# 
   368  009A                     	;# 
   369  009B                     	;# 
   370  009C                     	;# 
   371  009D                     	;# 
   372  009E                     	;# 
   373  009F                     	;# 
   374  0105                     	;# 
   375  0107                     	;# 
   376  0108                     	;# 
   377  0109                     	;# 
   378  010C                     	;# 
   379  010C                     	;# 
   380  010D                     	;# 
   381  010E                     	;# 
   382  010F                     	;# 
   383  0185                     	;# 
   384  0187                     	;# 
   385  0188                     	;# 
   386  0189                     	;# 
   387  018C                     	;# 
   388  018D                     	;# 
   389  0000                     	;# 
   390  0001                     	;# 
   391  0002                     	;# 
   392  0003                     	;# 
   393  0004                     	;# 
   394  0005                     	;# 
   395  0006                     	;# 
   396  0007                     	;# 
   397  0008                     	;# 
   398  0009                     	;# 
   399  000A                     	;# 
   400  000B                     	;# 
   401  000C                     	;# 
   402  000D                     	;# 
   403  000E                     	;# 
   404  000E                     	;# 
   405  000F                     	;# 
   406  0010                     	;# 
   407  0011                     	;# 
   408  0012                     	;# 
   409  0013                     	;# 
   410  0014                     	;# 
   411  0015                     	;# 
   412  0015                     	;# 
   413  0016                     	;# 
   414  0017                     	;# 
   415  0018                     	;# 
   416  0019                     	;# 
   417  001A                     	;# 
   418  001B                     	;# 
   419  001B                     	;# 
   420  001C                     	;# 
   421  001D                     	;# 
   422  001E                     	;# 
   423  001F                     	;# 
   424  0081                     	;# 
   425  0085                     	;# 
   426  0086                     	;# 
   427  0087                     	;# 
   428  0088                     	;# 
   429  0089                     	;# 
   430  008C                     	;# 
   431  008D                     	;# 
   432  008E                     	;# 
   433  008F                     	;# 
   434  0090                     	;# 
   435  0091                     	;# 
   436  0092                     	;# 
   437  0093                     	;# 
   438  0093                     	;# 
   439  0093                     	;# 
   440  0094                     	;# 
   441  0095                     	;# 
   442  0096                     	;# 
   443  0097                     	;# 
   444  0098                     	;# 
   445  0099                     	;# 
   446  009A                     	;# 
   447  009B                     	;# 
   448  009C                     	;# 
   449  009D                     	;# 
   450  009E                     	;# 
   451  009F                     	;# 
   452  0105                     	;# 
   453  0107                     	;# 
   454  0108                     	;# 
   455  0109                     	;# 
   456  010C                     	;# 
   457  010C                     	;# 
   458  010D                     	;# 
   459  010E                     	;# 
   460  010F                     	;# 
   461  0185                     	;# 
   462  0187                     	;# 
   463  0188                     	;# 
   464  0189                     	;# 
   465  018C                     	;# 
   466  018D                     	;# 
   467  0000                     	;# 
   468  0001                     	;# 
   469  0002                     	;# 
   470  0003                     	;# 
   471  0004                     	;# 
   472  0005                     	;# 
   473  0006                     	;# 
   474  0007                     	;# 
   475  0008                     	;# 
   476  0009                     	;# 
   477  000A                     	;# 
   478  000B                     	;# 
   479  000C                     	;# 
   480  000D                     	;# 
   481  000E                     	;# 
   482  000E                     	;# 
   483  000F                     	;# 
   484  0010                     	;# 
   485  0011                     	;# 
   486  0012                     	;# 
   487  0013                     	;# 
   488  0014                     	;# 
   489  0015                     	;# 
   490  0015                     	;# 
   491  0016                     	;# 
   492  0017                     	;# 
   493  0018                     	;# 
   494  0019                     	;# 
   495  001A                     	;# 
   496  001B                     	;# 
   497  001B                     	;# 
   498  001C                     	;# 
   499  001D                     	;# 
   500  001E                     	;# 
   501  001F                     	;# 
   502  0081                     	;# 
   503  0085                     	;# 
   504  0086                     	;# 
   505  0087                     	;# 
   506  0088                     	;# 
   507  0089                     	;# 
   508  008C                     	;# 
   509  008D                     	;# 
   510  008E                     	;# 
   511  008F                     	;# 
   512  0090                     	;# 
   513  0091                     	;# 
   514  0092                     	;# 
   515  0093                     	;# 
   516  0093                     	;# 
   517  0093                     	;# 
   518  0094                     	;# 
   519  0095                     	;# 
   520  0096                     	;# 
   521  0097                     	;# 
   522  0098                     	;# 
   523  0099                     	;# 
   524  009A                     	;# 
   525  009B                     	;# 
   526  009C                     	;# 
   527  009D                     	;# 
   528  009E                     	;# 
   529  009F                     	;# 
   530  0105                     	;# 
   531  0107                     	;# 
   532  0108                     	;# 
   533  0109                     	;# 
   534  010C                     	;# 
   535  010C                     	;# 
   536  010D                     	;# 
   537  010E                     	;# 
   538  010F                     	;# 
   539  0185                     	;# 
   540  0187                     	;# 
   541  0188                     	;# 
   542  0189                     	;# 
   543  018C                     	;# 
   544  018D                     	;# 
   545  0000                     	;# 
   546  0001                     	;# 
   547  0002                     	;# 
   548  0003                     	;# 
   549  0004                     	;# 
   550  0005                     	;# 
   551  0006                     	;# 
   552  0007                     	;# 
   553  0008                     	;# 
   554  0009                     	;# 
   555  000A                     	;# 
   556  000B                     	;# 
   557  000C                     	;# 
   558  000D                     	;# 
   559  000E                     	;# 
   560  000E                     	;# 
   561  000F                     	;# 
   562  0010                     	;# 
   563  0011                     	;# 
   564  0012                     	;# 
   565  0013                     	;# 
   566  0014                     	;# 
   567  0015                     	;# 
   568  0015                     	;# 
   569  0016                     	;# 
   570  0017                     	;# 
   571  0018                     	;# 
   572  0019                     	;# 
   573  001A                     	;# 
   574  001B                     	;# 
   575  001B                     	;# 
   576  001C                     	;# 
   577  001D                     	;# 
   578  001E                     	;# 
   579  001F                     	;# 
   580  0081                     	;# 
   581  0085                     	;# 
   582  0086                     	;# 
   583  0087                     	;# 
   584  0088                     	;# 
   585  0089                     	;# 
   586  008C                     	;# 
   587  008D                     	;# 
   588  008E                     	;# 
   589  008F                     	;# 
   590  0090                     	;# 
   591  0091                     	;# 
   592  0092                     	;# 
   593  0093                     	;# 
   594  0093                     	;# 
   595  0093                     	;# 
   596  0094                     	;# 
   597  0095                     	;# 
   598  0096                     	;# 
   599  0097                     	;# 
   600  0098                     	;# 
   601  0099                     	;# 
   602  009A                     	;# 
   603  009B                     	;# 
   604  009C                     	;# 
   605  009D                     	;# 
   606  009E                     	;# 
   607  009F                     	;# 
   608  0105                     	;# 
   609  0107                     	;# 
   610  0108                     	;# 
   611  0109                     	;# 
   612  010C                     	;# 
   613  010C                     	;# 
   614  010D                     	;# 
   615  010E                     	;# 
   616  010F                     	;# 
   617  0185                     	;# 
   618  0187                     	;# 
   619  0188                     	;# 
   620  0189                     	;# 
   621  018C                     	;# 
   622  018D                     	;# 
   623                           
   624                           	psect	idataCOMMON
   625  0845                     __pidataCOMMON:	
   626                           
   627                           ;initializer for _timer1_prescale
   628  0845  3401               	retlw	1
   629  0846  3400               	retlw	0
   630                           
   631                           ;initializer for _cur_disp_lcd_loc
   632  0847  3480               	retlw	128
   633  0848  3400               	retlw	0
   634                           
   635                           ;initializer for _lcd_avail_loc_within_limit
   636  0849  3479               	retlw	121
   637                           
   638                           	psect	idataBANK2
   639  07C4                     __pidataBANK2:	
   640                           
   641                           ;initializer for UART_Transmit_Num@F1845
   642  07C4  3430               	retlw	48
   643  07C5  3431               	retlw	49
   644  07C6  3432               	retlw	50
   645  07C7  3433               	retlw	51
   646  07C8  3434               	retlw	52
   647  07C9  3435               	retlw	53
   648  07CA  3436               	retlw	54
   649  07CB  3437               	retlw	55
   650  07CC  3438               	retlw	56
   651  07CD  3439               	retlw	57
   652  07CE  3441               	retlw	65
   653  07CF  3442               	retlw	66
   654  07D0  3443               	retlw	67
   655  07D1  3444               	retlw	68
   656  07D2  3445               	retlw	69
   657  07D3  3446               	retlw	70
   658                           
   659                           ;initializer for LCD_Disp_Num@F1881
   660  07D4  3430               	retlw	48
   661  07D5  3431               	retlw	49
   662  07D6  3432               	retlw	50
   663  07D7  3433               	retlw	51
   664  07D8  3434               	retlw	52
   665  07D9  3435               	retlw	53
   666  07DA  3436               	retlw	54
   667  07DB  3437               	retlw	55
   668  07DC  3438               	retlw	56
   669  07DD  3439               	retlw	57
   670  07DE  3441               	retlw	65
   671  07DF  3442               	retlw	66
   672  07E0  3443               	retlw	67
   673  07E1  3444               	retlw	68
   674  07E2  3445               	retlw	69
   675  07E3  3446               	retlw	70
   676                           
   677                           ;initializer for UART_Transmit_Num@F1843
   678  07E4  3430               	retlw	48
   679  07E5  3431               	retlw	49
   680  07E6  3432               	retlw	50
   681  07E7  3433               	retlw	51
   682  07E8  3434               	retlw	52
   683  07E9  3435               	retlw	53
   684  07EA  3436               	retlw	54
   685  07EB  3437               	retlw	55
   686  07EC  3438               	retlw	56
   687  07ED  3439               	retlw	57
   688                           
   689                           	psect	idataBANK3
   690  0864                     __pidataBANK3:	
   691                           
   692                           ;initializer for LCD_Disp_Num@F1879
   693  0864  3430               	retlw	48
   694  0865  3431               	retlw	49
   695  0866  3432               	retlw	50
   696  0867  3433               	retlw	51
   697  0868  3434               	retlw	52
   698  0869  3435               	retlw	53
   699  086A  3436               	retlw	54
   700  086B  3437               	retlw	55
   701  086C  3438               	retlw	56
   702  086D  3439               	retlw	57
   703                           
   704                           ;initializer for _timer2_prescale
   705  086E  3401               	retlw	1
   706  086F  3400               	retlw	0
   707                           
   708                           ;initializer for _cur_input_lcd_loc
   709  0870  34C0               	retlw	192
   710  0871  3400               	retlw	0
   711                           
   712                           	psect	stringtext
   713  1000                     __pstringtext:	
   714  1000                     stringtab:	
   715  1000                     __stringtab:	
   716                           
   717                           ;	String table - string pointers are 2 bytes each
   718  1000  1BFF               	btfsc	btemp+1,7
   719  1001  280A               	ljmp	stringcode
   720  1002  1383               	bcf	3,7
   721  1003  187F               	btfsc	btemp+1,0
   722  1004  1783               	bsf	3,7
   723  1005  0800               	movf	0,w
   724  1006  0A84               	incf	4,f
   725  1007  1903               	skipnz
   726  1008  0AFF               	incf	btemp+1,f
   727  1009  0008               	return
   728  100A                     stringcode:	
   729  100A  087F               	movf	btemp+1,w
   730  100B  397F               	andlw	127
   731  100C  008A               	movwf	10
   732  100D  0804               	movf	4,w
   733  100E  0A84               	incf	4,f
   734  100F  1903               	skipnz
   735  1010  0AFF               	incf	btemp+1,f
   736  1011  0082               	movwf	2
   737  1012                     __stringbase:	
   738  1012                     __end_of__stringtab:	
   739  1012                     UART_Receive_Char@overrun_error_msg_disp:	
   740  1012  344F               	retlw	79
   741  1013  3445               	retlw	69
   742  1014  3452               	retlw	82
   743  1015  3452               	retlw	82
   744  1016  3400               	retlw	0
   745  1017                     __end_ofUART_Receive_Char@overrun_error_msg_disp:	
   746  1017                     UART_Receive_Char@framing_error_msg_disp:	
   747  1017  3446               	retlw	70
   748  1018  3445               	retlw	69
   749  1019  3452               	retlw	82
   750  101A  3452               	retlw	82
   751  101B  3400               	retlw	0
   752  101C                     __end_ofUART_Receive_Char@framing_error_msg_disp:	
   753  000E                     _TMR1	set	14
   754  0012                     _T2CONbits	set	18
   755  0012                     _T2CON	set	18
   756  0011                     _TMR2	set	17
   757  0010                     _T1CONbits	set	16
   758  0010                     _T1CON	set	16
   759  000E                     _TMR1L	set	14
   760  000F                     _TMR1H	set	15
   761  001A                     _RCREG	set	26
   762  0019                     _TXREG	set	25
   763  0008                     _PORTD	set	8
   764  001E                     _ADRESH	set	30
   765  000B                     _INTCONbits	set	11
   766  001F                     _ADCON0bits	set	31
   767  001F                     _ADCON0	set	31
   768  0090                     _T2CKPS0	set	144
   769  0091                     _T2CKPS1	set	145
   770  0061                     _TMR2IF	set	97
   771  0085                     _T1CKPS1	set	133
   772  0084                     _T1CKPS0	set	132
   773  0060                     _TMR1IF	set	96
   774  0059                     _INTF	set	89
   775  005C                     _INTE	set	92
   776  00C2                     _FERR	set	194
   777  0065                     _RCIF	set	101
   778  00C1                     _OERR	set	193
   779  00C6                     _RX9	set	198
   780  00C5                     _SREN	set	197
   781  00C4                     _CREN	set	196
   782  00C7                     _SPEN	set	199
   783  0031                     _RB1	set	49
   784  0033                     _RB3	set	51
   785  0032                     _RB2	set	50
   786  004A                     _RE2	set	74
   787  0048                     _RE0	set	72
   788  0049                     _RE1	set	73
   789  00F9                     _GO	set	249
   790  0066                     _ADIF	set	102
   791  0099                     _SPBRG	set	153
   792  0086                     _TRISBbits	set	134
   793  0088                     _TRISD	set	136
   794  0088                     _TRISDbits	set	136
   795  0089                     _TRISEbits	set	137
   796  009E                     _ADRESL	set	158
   797  008C                     _PIE1bits	set	140
   798  009F                     _ADCON1	set	159
   799  04C1                     _TRMT	set	1217
   800  04C6                     _TX9	set	1222
   801  0465                     _RCIE	set	1125
   802  0464                     _TXIE	set	1124
   803  04C5                     _TXEN	set	1221
   804  04C4                     _SYNC	set	1220
   805  04C2                     _BRGH	set	1218
   806  04FF                     _ADFM	set	1279
   807  0189                     _ANSELH	set	393
   808  0188                     _ANSEL	set	392
   809  0C3B                     _BRG16	set	3131
   810  101C                     STR_14:	
   811  101C  3445               	retlw	69	;'E'
   812  101D  3452               	retlw	82	;'R'
   813  101E  3452               	retlw	82	;'R'
   814  101F  343A               	retlw	58	;':'
   815  1020  3420               	retlw	32	;' '
   816  1021  3474               	retlw	116	;'t'
   817  1022  346D               	retlw	109	;'m'
   818  1023  3472               	retlw	114	;'r'
   819  1024  3431               	retlw	49	;'1'
   820  1025  3420               	retlw	32	;' '
   821  1026  3469               	retlw	105	;'i'
   822  1027  3473               	retlw	115	;'s'
   823  1028  3420               	retlw	32	;' '
   824  1029  3463               	retlw	99	;'c'
   825  102A  346F               	retlw	111	;'o'
   826  102B  3475               	retlw	117	;'u'
   827  102C  346E               	retlw	110	;'n'
   828  102D  3474               	retlw	116	;'t'
   829  102E  3465               	retlw	101	;'e'
   830  102F  3472               	retlw	114	;'r'
   831  1030  3420               	retlw	32	;' '
   832  1031  3462               	retlw	98	;'b'
   833  1032  3475               	retlw	117	;'u'
   834  1033  3474               	retlw	116	;'t'
   835  1034  3420               	retlw	32	;' '
   836  1035  3463               	retlw	99	;'c'
   837  1036  346C               	retlw	108	;'l'
   838  1037  346B               	retlw	107	;'k'
   839  1038  3420               	retlw	32	;' '
   840  1039  3473               	retlw	115	;'s'
   841  103A  346F               	retlw	111	;'o'
   842  103B  3475               	retlw	117	;'u'
   843  103C  3472               	retlw	114	;'r'
   844  103D  3463               	retlw	99	;'c'
   845  103E  3465               	retlw	101	;'e'
   846  103F  3420               	retlw	32	;' '
   847  1040  3469               	retlw	105	;'i'
   848  1041  3473               	retlw	115	;'s'
   849  1042  3420               	retlw	32	;' '
   850  1043  346E               	retlw	110	;'n'
   851  1044  346F               	retlw	111	;'o'
   852  1045  3474               	retlw	116	;'t'
   853  1046  3420               	retlw	32	;' '
   854  1047  3465               	retlw	101	;'e'
   855  1048  3478               	retlw	120	;'x'
   856  1049  3474               	retlw	116	;'t'
   857  104A  3465               	retlw	101	;'e'
   858  104B  3472               	retlw	114	;'r'
   859  104C  346E               	retlw	110	;'n'
   860  104D  3461               	retlw	97	;'a'
   861  104E  346C               	retlw	108	;'l'
   862  104F  3420               	retlw	32	;' '
   863  1050  340D               	retlw	13
   864  1051  3400               	retlw	0
   865  1052                     STR_12:	
   866  1052  3445               	retlw	69	;'E'
   867  1053  3452               	retlw	82	;'R'
   868  1054  3452               	retlw	82	;'R'
   869  1055  343A               	retlw	58	;':'
   870  1056  3420               	retlw	32	;' '
   871  1057  3474               	retlw	116	;'t'
   872  1058  346D               	retlw	109	;'m'
   873  1059  3472               	retlw	114	;'r'
   874  105A  3431               	retlw	49	;'1'
   875  105B  3420               	retlw	32	;' '
   876  105C  3469               	retlw	105	;'i'
   877  105D  3473               	retlw	115	;'s'
   878  105E  3420               	retlw	32	;' '
   879  105F  3474               	retlw	116	;'t'
   880  1060  3469               	retlw	105	;'i'
   881  1061  346D               	retlw	109	;'m'
   882  1062  3465               	retlw	101	;'e'
   883  1063  3472               	retlw	114	;'r'
   884  1064  3420               	retlw	32	;' '
   885  1065  3462               	retlw	98	;'b'
   886  1066  3475               	retlw	117	;'u'
   887  1067  3474               	retlw	116	;'t'
   888  1068  3420               	retlw	32	;' '
   889  1069  3463               	retlw	99	;'c'
   890  106A  346C               	retlw	108	;'l'
   891  106B  346B               	retlw	107	;'k'
   892  106C  3420               	retlw	32	;' '
   893  106D  3473               	retlw	115	;'s'
   894  106E  346F               	retlw	111	;'o'
   895  106F  3475               	retlw	117	;'u'
   896  1070  3472               	retlw	114	;'r'
   897  1071  3463               	retlw	99	;'c'
   898  1072  3465               	retlw	101	;'e'
   899  1073  3420               	retlw	32	;' '
   900  1074  3469               	retlw	105	;'i'
   901  1075  3473               	retlw	115	;'s'
   902  1076  3420               	retlw	32	;' '
   903  1077  346E               	retlw	110	;'n'
   904  1078  346F               	retlw	111	;'o'
   905  1079  3474               	retlw	116	;'t'
   906  107A  3420               	retlw	32	;' '
   907  107B  3469               	retlw	105	;'i'
   908  107C  346E               	retlw	110	;'n'
   909  107D  3474               	retlw	116	;'t'
   910  107E  3465               	retlw	101	;'e'
   911  107F  3472               	retlw	114	;'r'
   912  1080  346E               	retlw	110	;'n'
   913  1081  3461               	retlw	97	;'a'
   914  1082  346C               	retlw	108	;'l'
   915  1083  3420               	retlw	32	;' '
   916  1084  340D               	retlw	13
   917  1085  3400               	retlw	0
   918  1086                     STR_3:	
   919  1086  3445               	retlw	69	;'E'
   920  1087  3452               	retlw	82	;'R'
   921  1088  3452               	retlw	82	;'R'
   922  1089  343A               	retlw	58	;':'
   923  108A  3420               	retlw	32	;' '
   924  108B  3474               	retlw	116	;'t'
   925  108C  3472               	retlw	114	;'r'
   926  108D  3479               	retlw	121	;'y'
   927  108E  3420               	retlw	32	;' '
   928  108F  3474               	retlw	116	;'t'
   929  1090  346F               	retlw	111	;'o'
   930  1091  3420               	retlw	32	;' '
   931  1092  3464               	retlw	100	;'d'
   932  1093  3469               	retlw	105	;'i'
   933  1094  3473               	retlw	115	;'s'
   934  1095  3461               	retlw	97	;'a'
   935  1096  3462               	retlw	98	;'b'
   936  1097  346C               	retlw	108	;'l'
   937  1098  3465               	retlw	101	;'e'
   938  1099  3420               	retlw	32	;' '
   939  109A  3441               	retlw	65	;'A'
   940  109B  3444               	retlw	68	;'D'
   941  109C  3443               	retlw	67	;'C'
   942  109D  3420               	retlw	32	;' '
   943  109E  3477               	retlw	119	;'w'
   944  109F  3468               	retlw	104	;'h'
   945  10A0  3469               	retlw	105	;'i'
   946  10A1  346C               	retlw	108	;'l'
   947  10A2  3465               	retlw	101	;'e'
   948  10A3  3420               	retlw	32	;' '
   949  10A4  3441               	retlw	65	;'A'
   950  10A5  3444               	retlw	68	;'D'
   951  10A6  3443               	retlw	67	;'C'
   952  10A7  3420               	retlw	32	;' '
   953  10A8  3443               	retlw	67	;'C'
   954  10A9  346F               	retlw	111	;'o'
   955  10AA  346E               	retlw	110	;'n'
   956  10AB  3476               	retlw	118	;'v'
   957  10AC  3465               	retlw	101	;'e'
   958  10AD  3472               	retlw	114	;'r'
   959  10AE  3474               	retlw	116	;'t'
   960  10AF  3469               	retlw	105	;'i'
   961  10B0  346E               	retlw	110	;'n'
   962  10B1  3467               	retlw	103	;'g'
   963  10B2  3420               	retlw	32	;' '
   964  10B3  340D               	retlw	13
   965  10B4  3400               	retlw	0
   966  10B5                     STR_13:	
   967  10B5  3445               	retlw	69	;'E'
   968  10B6  3452               	retlw	82	;'R'
   969  10B7  3452               	retlw	82	;'R'
   970  10B8  343A               	retlw	58	;':'
   971  10B9  3420               	retlw	32	;' '
   972  10BA  3474               	retlw	116	;'t'
   973  10BB  346D               	retlw	109	;'m'
   974  10BC  3472               	retlw	114	;'r'
   975  10BD  3431               	retlw	49	;'1'
   976  10BE  3420               	retlw	32	;' '
   977  10BF  3469               	retlw	105	;'i'
   978  10C0  3473               	retlw	115	;'s'
   979  10C1  3420               	retlw	32	;' '
   980  10C2  3463               	retlw	99	;'c'
   981  10C3  346F               	retlw	111	;'o'
   982  10C4  3475               	retlw	117	;'u'
   983  10C5  346E               	retlw	110	;'n'
   984  10C6  3474               	retlw	116	;'t'
   985  10C7  3465               	retlw	101	;'e'
   986  10C8  3472               	retlw	114	;'r'
   987  10C9  3420               	retlw	32	;' '
   988  10CA  3462               	retlw	98	;'b'
   989  10CB  3475               	retlw	117	;'u'
   990  10CC  3474               	retlw	116	;'t'
   991  10CD  3420               	retlw	32	;' '
   992  10CE  344C               	retlw	76	;'L'
   993  10CF  3450               	retlw	80	;'P'
   994  10D0  3420               	retlw	32	;' '
   995  10D1  346F               	retlw	111	;'o'
   996  10D2  3473               	retlw	115	;'s'
   997  10D3  3463               	retlw	99	;'c'
   998  10D4  3420               	retlw	32	;' '
   999  10D5  3469               	retlw	105	;'i'
  1000  10D6  3473               	retlw	115	;'s'
  1001  10D7  3420               	retlw	32	;' '
  1002  10D8  3464               	retlw	100	;'d'
  1003  10D9  3469               	retlw	105	;'i'
  1004  10DA  3473               	retlw	115	;'s'
  1005  10DB  3461               	retlw	97	;'a'
  1006  10DC  3462               	retlw	98	;'b'
  1007  10DD  346C               	retlw	108	;'l'
  1008  10DE  3465               	retlw	101	;'e'
  1009  10DF  3464               	retlw	100	;'d'
  1010  10E0  3420               	retlw	32	;' '
  1011  10E1  340D               	retlw	13
  1012  10E2  3400               	retlw	0
  1013  10E3                     STR_2:	
  1014  10E3  3445               	retlw	69	;'E'
  1015  10E4  3452               	retlw	82	;'R'
  1016  10E5  3452               	retlw	82	;'R'
  1017  10E6  343A               	retlw	58	;':'
  1018  10E7  3420               	retlw	32	;' '
  1019  10E8  3474               	retlw	116	;'t'
  1020  10E9  3472               	retlw	114	;'r'
  1021  10EA  3479               	retlw	121	;'y'
  1022  10EB  3420               	retlw	32	;' '
  1023  10EC  3474               	retlw	116	;'t'
  1024  10ED  346F               	retlw	111	;'o'
  1025  10EE  3420               	retlw	32	;' '
  1026  10EF  3473               	retlw	115	;'s'
  1027  10F0  3474               	retlw	116	;'t'
  1028  10F1  3461               	retlw	97	;'a'
  1029  10F2  3472               	retlw	114	;'r'
  1030  10F3  3474               	retlw	116	;'t'
  1031  10F4  3420               	retlw	32	;' '
  1032  10F5  3441               	retlw	65	;'A'
  1033  10F6  3444               	retlw	68	;'D'
  1034  10F7  3443               	retlw	67	;'C'
  1035  10F8  3420               	retlw	32	;' '
  1036  10F9  3477               	retlw	119	;'w'
  1037  10FA  3468               	retlw	104	;'h'
  1038  10FB  3469               	retlw	105	;'i'
  1039  10FC  346C               	retlw	108	;'l'
  1040  10FD  3465               	retlw	101	;'e'
  1041  10FE  3420               	retlw	32	;' '
  1042  10FF  3441               	retlw	65	;'A'
  1043  1100  3444               	retlw	68	;'D'
  1044  1101  3443               	retlw	67	;'C'
  1045  1102  3420               	retlw	32	;' '
  1046  1103  3443               	retlw	67	;'C'
  1047  1104  346F               	retlw	111	;'o'
  1048  1105  346E               	retlw	110	;'n'
  1049  1106  3476               	retlw	118	;'v'
  1050  1107  3465               	retlw	101	;'e'
  1051  1108  3472               	retlw	114	;'r'
  1052  1109  3474               	retlw	116	;'t'
  1053  110A  3469               	retlw	105	;'i'
  1054  110B  346E               	retlw	110	;'n'
  1055  110C  3467               	retlw	103	;'g'
  1056  110D  3420               	retlw	32	;' '
  1057  110E  340D               	retlw	13
  1058  110F  3400               	retlw	0
  1059  1110                     STR_1:	
  1060  1110  3445               	retlw	69	;'E'
  1061  1111  3452               	retlw	82	;'R'
  1062  1112  3452               	retlw	82	;'R'
  1063  1113  343A               	retlw	58	;':'
  1064  1114  3420               	retlw	32	;' '
  1065  1115  3469               	retlw	105	;'i'
  1066  1116  346E               	retlw	110	;'n'
  1067  1117  3476               	retlw	118	;'v'
  1068  1118  3461               	retlw	97	;'a'
  1069  1119  346C               	retlw	108	;'l'
  1070  111A  3469               	retlw	105	;'i'
  1071  111B  3464               	retlw	100	;'d'
  1072  111C  3420               	retlw	32	;' '
  1073  111D  3441               	retlw	65	;'A'
  1074  111E  3444               	retlw	68	;'D'
  1075  111F  3443               	retlw	67	;'C'
  1076  1120  3420               	retlw	32	;' '
  1077  1121  3463               	retlw	99	;'c'
  1078  1122  3468               	retlw	104	;'h'
  1079  1123  3461               	retlw	97	;'a'
  1080  1124  346E               	retlw	110	;'n'
  1081  1125  346E               	retlw	110	;'n'
  1082  1126  3465               	retlw	101	;'e'
  1083  1127  346C               	retlw	108	;'l'
  1084  1128  3420               	retlw	32	;' '
  1085  1129  3473               	retlw	115	;'s'
  1086  112A  3465               	retlw	101	;'e'
  1087  112B  346C               	retlw	108	;'l'
  1088  112C  3465               	retlw	101	;'e'
  1089  112D  3463               	retlw	99	;'c'
  1090  112E  3474               	retlw	116	;'t'
  1091  112F  3420               	retlw	32	;' '
  1092  1130  343A               	retlw	58	;':'
  1093  1131  3420               	retlw	32	;' '
  1094  1132  3400               	retlw	0
  1095  1133                     STR_7:	
  1096  1133  3445               	retlw	69	;'E'
  1097  1134  3452               	retlw	82	;'R'
  1098  1135  3452               	retlw	82	;'R'
  1099  1136  343A               	retlw	58	;':'
  1100  1137  3420               	retlw	32	;' '
  1101  1138  3452               	retlw	82	;'R'
  1102  1139  3420               	retlw	32	;' '
  1103  113A  3452               	retlw	82	;'R'
  1104  113B  344D               	retlw	77	;'M'
  1105  113C  3453               	retlw	83	;'S'
  1106  113D  3420               	retlw	32	;' '
  1107  113E  343C               	retlw	60	;'<'
  1108  113F  3420               	retlw	32	;' '
  1109  1140  344D               	retlw	77	;'M'
  1110  1141  3449               	retlw	73	;'I'
  1111  1142  344E               	retlw	78	;'N'
  1112  1143  3420               	retlw	32	;' '
  1113  1144  344C               	retlw	76	;'L'
  1114  1145  3449               	retlw	73	;'I'
  1115  1146  344D               	retlw	77	;'M'
  1116  1147  3449               	retlw	73	;'I'
  1117  1148  3454               	retlw	84	;'T'
  1118  1149  3420               	retlw	32	;' '
  1119  114A  340D               	retlw	13
  1120  114B  3400               	retlw	0
  1121  114C                     STR_8:	
  1122  114C  3445               	retlw	69	;'E'
  1123  114D  3452               	retlw	82	;'R'
  1124  114E  3452               	retlw	82	;'R'
  1125  114F  343A               	retlw	58	;':'
  1126  1150  3420               	retlw	32	;' '
  1127  1151  3452               	retlw	82	;'R'
  1128  1152  3420               	retlw	32	;' '
  1129  1153  3452               	retlw	82	;'R'
  1130  1154  344D               	retlw	77	;'M'
  1131  1155  3453               	retlw	83	;'S'
  1132  1156  3420               	retlw	32	;' '
  1133  1157  343E               	retlw	62	;'>'
  1134  1158  3420               	retlw	32	;' '
  1135  1159  344D               	retlw	77	;'M'
  1136  115A  3441               	retlw	65	;'A'
  1137  115B  3458               	retlw	88	;'X'
  1138  115C  3420               	retlw	32	;' '
  1139  115D  344C               	retlw	76	;'L'
  1140  115E  3449               	retlw	73	;'I'
  1141  115F  344D               	retlw	77	;'M'
  1142  1160  3449               	retlw	73	;'I'
  1143  1161  3454               	retlw	84	;'T'
  1144  1162  3420               	retlw	32	;' '
  1145  1163  340D               	retlw	13
  1146  1164  3400               	retlw	0
  1147  1165                     STR_9:	
  1148  1165  3452               	retlw	82	;'R'
  1149  1166  3420               	retlw	32	;' '
  1150  1167  3452               	retlw	82	;'R'
  1151  1168  344D               	retlw	77	;'M'
  1152  1169  3453               	retlw	83	;'S'
  1153  116A  3420               	retlw	32	;' '
  1154  116B  3477               	retlw	119	;'w'
  1155  116C  3469               	retlw	105	;'i'
  1156  116D  3474               	retlw	116	;'t'
  1157  116E  3468               	retlw	104	;'h'
  1158  116F  3469               	retlw	105	;'i'
  1159  1170  346E               	retlw	110	;'n'
  1160  1171  3420               	retlw	32	;' '
  1161  1172  344C               	retlw	76	;'L'
  1162  1173  3449               	retlw	73	;'I'
  1163  1174  344D               	retlw	77	;'M'
  1164  1175  3449               	retlw	73	;'I'
  1165  1176  3454               	retlw	84	;'T'
  1166  1177  3420               	retlw	32	;' '
  1167  1178  340D               	retlw	13
  1168  1179  3400               	retlw	0
  1169  117A                     STR_11:	
  1170  117A  340D               	retlw	13
  1171  117B  3445               	retlw	69	;'E'
  1172  117C  3452               	retlw	82	;'R'
  1173  117D  3452               	retlw	82	;'R'
  1174  117E  343A               	retlw	58	;':'
  1175  117F  3420               	retlw	32	;' '
  1176  1180  3446               	retlw	70	;'F'
  1177  1181  3445               	retlw	69	;'E'
  1178  1182  3452               	retlw	82	;'R'
  1179  1183  3452               	retlw	82	;'R'
  1180  1184  340D               	retlw	13
  1181  1185  3420               	retlw	32	;' '
  1182  1186  3400               	retlw	0
  1183  1187                     STR_10:	
  1184  1187  340D               	retlw	13
  1185  1188  3445               	retlw	69	;'E'
  1186  1189  3452               	retlw	82	;'R'
  1187  118A  3452               	retlw	82	;'R'
  1188  118B  343A               	retlw	58	;':'
  1189  118C  3420               	retlw	32	;' '
  1190  118D  344F               	retlw	79	;'O'
  1191  118E  3445               	retlw	69	;'E'
  1192  118F  3452               	retlw	82	;'R'
  1193  1190  3452               	retlw	82	;'R'
  1194  1191  340D               	retlw	13
  1195  1192  3420               	retlw	32	;' '
  1196  1193  3400               	retlw	0
  1197  1194                     STR_4:	
  1198  1194  3420               	retlw	32	;' '
  1199  1195  3420               	retlw	32	;' '
  1200  1196  3400               	retlw	0
  1201  1194                     
  1202                           ; #config settings
  1203  0000                     
  1204                           	psect	cinit
  1205  0015                     start_initialization:	
  1206  0015                     __initialization:	
  1207                           
  1208                           ; Initialize objects allocated to BANK3
  1209  0015  1783               	bsf	3,7	;select IRP bank2
  1210  0016  30E9               	movlw	low (__pdataBANK3+14)
  1211  0017  00FD               	movwf	btemp+-1
  1212  0018  3008               	movlw	high __pidataBANK3
  1213  0019  00FE               	movwf	btemp
  1214  001A  3064               	movlw	low __pidataBANK3
  1215  001B  00FF               	movwf	btemp+1
  1216  001C  30DB               	movlw	low __pdataBANK3
  1217  001D  0084               	movwf	4
  1218  001E  120A  118A  27F2  120A  118A  	fcall	init_ram0
  1219                           
  1220                           ; Initialize objects allocated to BANK2
  1221  0023  303A               	movlw	low (__pdataBANK2+42)
  1222  0024  00FD               	movwf	btemp+-1
  1223  0025  3007               	movlw	high __pidataBANK2
  1224  0026  00FE               	movwf	btemp
  1225  0027  30C4               	movlw	low __pidataBANK2
  1226  0028  00FF               	movwf	btemp+1
  1227  0029  3010               	movlw	low __pdataBANK2
  1228  002A  0084               	movwf	4
  1229  002B  120A  118A  27F2  120A  118A  	fcall	init_ram0
  1230                           
  1231                           ; Initialize objects allocated to COMMON
  1232  0030  120A  158A  2045  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
  1233  0035  00F8               	movwf	__pdataCOMMON& (0+127)
  1234  0036  120A  158A  2046  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
  1235  003B  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
  1236  003C  120A  158A  2047  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
  1237  0041  00FA               	movwf	(__pdataCOMMON+2)& (0+127)
  1238  0042  120A  158A  2048  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
  1239  0047  00FB               	movwf	(__pdataCOMMON+3)& (0+127)
  1240  0048  120A  158A  2049  120A  118A  	fcall	__pidataCOMMON+4	;fetch initializer
  1241  004D  00FC               	movwf	(__pdataCOMMON+4)& (0+127)
  1242                           
  1243                           ; Clear objects allocated to BANK3
  1244  004E  3090               	movlw	low __pbssBANK3
  1245  004F  0084               	movwf	4
  1246  0050  30DB               	movlw	low (__pbssBANK3+75)
  1247  0051  120A  158A  2052  120A  118A  	fcall	clear_ram0
  1248                           
  1249                           ; Clear objects allocated to BANK0
  1250  0056  1383               	bcf	3,7	;select IRP bank0
  1251  0057  3050               	movlw	low __pbssBANK0
  1252  0058  0084               	movwf	4
  1253  0059  3060               	movlw	low (__pbssBANK0+16)
  1254  005A  120A  158A  2052   	fcall	clear_ram0
  1255                           
  1256                           ; Clear objects allocated to COMMON
  1257  005D  01FD               	clrf	__pbssCOMMON& (0+127)
  1258  005E                     end_of_initialization:	
  1259                           ;End of C runtime variable initialization code
  1260                           
  1261  005E                     __end_of__initialization:	
  1262  005E  0183               	clrf	3
  1263  005F  120A  118A  2862   	ljmp	_main	;jump to C main() function
  1264                           
  1265                           	psect	bssCOMMON
  1266  007D                     __pbssCOMMON:	
  1267  007D                     _timer2_cur_service_type:	
  1268  007D                     	ds	1
  1269                           
  1270                           	psect	dataCOMMON
  1271  0078                     __pdataCOMMON:	
  1272  0078                     _timer1_prescale:	
  1273  0078                     	ds	2
  1274  007A                     _cur_disp_lcd_loc:	
  1275  007A                     	ds	2
  1276  007C                     _lcd_avail_loc_within_limit:	
  1277  007C                     	ds	1
  1278                           
  1279                           	psect	bssBANK0
  1280  0050                     __pbssBANK0:	
  1281  0050                     _lcd_unit:	
  1282  0050                     	ds	6
  1283  0056                     _timer1_init_val:	
  1284  0056                     	ds	4
  1285  005A                     _timer2_last_run_state_before_stop:	
  1286  005A                     	ds	1
  1287  005B                     _timer2_cur_run_state:	
  1288  005B                     	ds	1
  1289  005C                     _timer1_cur_service_type:	
  1290  005C                     	ds	1
  1291  005D                     _timer1_last_run_state_before_stop:	
  1292  005D                     	ds	1
  1293  005E                     _timer1_cur_run_state:	
  1294  005E                     	ds	1
  1295  005F                     _adc_cur_channel:	
  1296  005F                     	ds	1
  1297                           
  1298                           	psect	bssBANK3
  1299  0190                     __pbssBANK3:	
  1300  0190                     _timer2_req_time_delay_in_milli_sec:	
  1301  0190                     	ds	4
  1302  0194                     _timer2_req_time_max_update:	
  1303  0194                     	ds	4
  1304  0198                     _timer2_max_num_overflow:	
  1305  0198                     	ds	4
  1306  019C                     _timer2_1_update:	
  1307  019C                     	ds	4
  1308  01A0                     _timer2_elapsed_num_overflow_1_update:	
  1309  01A0                     	ds	4
  1310  01A4                     _timer2_init_val:	
  1311  01A4                     	ds	4
  1312  01A8                     _measure_pulse_upper_count:	
  1313  01A8                     	ds	4
  1314  01AC                     _measure_pulse_lower_count:	
  1315  01AC                     	ds	4
  1316  01B0                     _timer1_req_time_delay_in_milli_sec:	
  1317  01B0                     	ds	4
  1318  01B4                     _timer1_max_num_overflow:	
  1319  01B4                     	ds	4
  1320  01B8                     _timer1_req_time_max_update:	
  1321  01B8                     	ds	4
  1322  01BC                     _timer1_1_update:	
  1323  01BC                     	ds	4
  1324  01C0                     _timer1_elapsed_num_overflow_1_update:	
  1325  01C0                     	ds	4
  1326  01C4                     _analog_val_in_digital_ch:	
  1327  01C4                     	ds	4
  1328  01C8                     _to_disp:	
  1329  01C8                     	ds	4
  1330  01CC                     _timer2_elapsed_num_update:	
  1331  01CC                     	ds	2
  1332  01CE                     _timer2_prescale_shift:	
  1333  01CE                     	ds	2
  1334  01D0                     _timer1_prescale_shift:	
  1335  01D0                     	ds	2
  1336  01D2                     _timer1_elapsed_num_update:	
  1337  01D2                     	ds	2
  1338  01D4                     _lcd_read_command:	
  1339  01D4                     	ds	2
  1340  01D6                     _adc_cur_parameters:	
  1341  01D6                     	ds	5
  1342                           
  1343                           	psect	dataBANK3
  1344  01DB                     __pdataBANK3:	
  1345  01DB                     LCD_Disp_Num@F1879:	
  1346  01DB                     	ds	10
  1347  01E5                     _timer2_prescale:	
  1348  01E5                     	ds	2
  1349  01E7                     _cur_input_lcd_loc:	
  1350  01E7                     	ds	2
  1351                           
  1352                           	psect	dataBANK2
  1353  0110                     __pdataBANK2:	
  1354  0110                     UART_Transmit_Num@F1845:	
  1355  0110                     	ds	16
  1356  0120                     LCD_Disp_Num@F1881:	
  1357  0120                     	ds	16
  1358  0130                     UART_Transmit_Num@F1843:	
  1359  0130                     	ds	10
  1360                           
  1361                           	psect	inittext
  1362  07EE                     init_fetch0:	
  1363                           ;	Called with low address in FSR and high address in W
  1364                           
  1365  07EE  087E               	movf	126,w
  1366  07EF  008A               	movwf	10
  1367  07F0  087F               	movf	127,w
  1368  07F1  0082               	movwf	2
  1369  07F2                     init_ram0:	
  1370                           ;Called with:
  1371                           ;	high address of idata address in btemp 
  1372                           ;	low address of idata address in btemp+1 
  1373                           ;	low address of data in FSR
  1374                           ;	high address + 1 of data in btemp-1
  1375                           
  1376  07F2  27EE  120A  118A   	fcall	init_fetch0
  1377  07F5  0080               	movwf	0
  1378  07F6  0A84               	incf	4,f
  1379  07F7  0804               	movf	4,w
  1380  07F8  067D               	xorwf	125,w
  1381  07F9  1903               	btfsc	3,2
  1382  07FA  3400               	retlw	0
  1383  07FB  0AFF               	incf	127,f
  1384  07FC  1903               	btfsc	3,2
  1385  07FD  0AFE               	incf	126,f
  1386  07FE  2FF2               	goto	init_ram0
  1387                           
  1388                           	psect	clrtext
  1389  0852                     clear_ram0:	
  1390                           ;	Called with FSR containing the base address, and
  1391                           ;	W with the last address+1
  1392                           
  1393  0852  0064               	clrwdt	;clear the watchdog before getting into this loop
  1394  0853                     clrloop0:	
  1395  0853  0180               	clrf	0	;clear RAM location pointed to by FSR
  1396  0854  0A84               	incf	4,f	;increment pointer
  1397  0855  0604               	xorwf	4,w	;XOR with final address
  1398  0856  1903               	btfsc	3,2	;have we reached the end yet?
  1399  0857  3400               	retlw	0	;all done for this memory range, return
  1400  0858  0604               	xorwf	4,w	;XOR again to restore value
  1401  0859  2853               	goto	clrloop0	;do the next byte
  1402                           
  1403                           	psect	cstackBANK2
  1404  013A                     __pcstackBANK2:	
  1405  013A                     main@fault_occured_flag:	
  1406                           
  1407                           ; 1 bytes @ 0x0
  1408  013A                     	ds	1
  1409  013B                     main@temp:	
  1410                           
  1411                           ; 4 bytes @ 0x1
  1412  013B                     	ds	4
  1413  013F                     main@r_at_ch_encoded_val:	
  1414                           
  1415                           ; 4 bytes @ 0x5
  1416  013F                     	ds	4
  1417  0143                     main@i:	
  1418                           
  1419                           ; 4 bytes @ 0x9
  1420  0143                     	ds	4
  1421  0147                     main@calc_r_source_rms_volt:	
  1422                           
  1423                           ; 2 bytes @ 0xD
  1424  0147                     	ds	2
  1425  0149                     main@temp_int:	
  1426                           
  1427                           ; 4 bytes @ 0xF
  1428  0149                     	ds	4
  1429  014D                     main@temp_frac:	
  1430                           
  1431                           ; 4 bytes @ 0x13
  1432  014D                     	ds	4
  1433  0151                     main@max_r_at_ch_encoded_value:	
  1434                           
  1435                           ; 4 bytes @ 0x17
  1436  0151                     	ds	4
  1437  0155                     main@r_at_ch_peak_volt_int:	
  1438                           
  1439                           ; 4 bytes @ 0x1B
  1440  0155                     	ds	4
  1441  0159                     main@r_at_ch_peak_volt_frac:	
  1442                           
  1443                           ; 4 bytes @ 0x1F
  1444  0159                     	ds	4
  1445                           
  1446                           	psect	cstackBANK1
  1447  00A0                     __pcstackBANK1:	
  1448  00A0                     ?_Encoded_To_Actual_Analog_Val_Calc:	
  1449  00A0                     Encoded_To_Actual_Analog_Val_Calc@adc_value:	
  1450                           ; 1 bytes @ 0x0
  1451                           
  1452  00A0                     UART_Transmit_Num@hex_data:	
  1453                           ; 4 bytes @ 0x0
  1454                           
  1455                           
  1456                           ; 16 bytes @ 0x0
  1457  00A0                     	ds	4
  1458  00A4                     Encoded_To_Actual_Analog_Val_Calc@full_scale_analog_val:	
  1459                           
  1460                           ; 4 bytes @ 0x4
  1461  00A4                     	ds	4
  1462  00A8                     Encoded_To_Actual_Analog_Val_Calc@min_analog_val:	
  1463                           
  1464                           ; 4 bytes @ 0x8
  1465  00A8                     	ds	4
  1466  00AC                     Encoded_To_Actual_Analog_Val_Calc@analog_val_in_digital_int:	
  1467                           
  1468                           ; 1 bytes @ 0xC
  1469  00AC                     	ds	1
  1470  00AD                     Encoded_To_Actual_Analog_Val_Calc@analog_val_in_digital_frac:	
  1471                           
  1472                           ; 1 bytes @ 0xD
  1473  00AD                     	ds	1
  1474  00AE                     Encoded_To_Actual_Analog_Val_Calc@temp_val_1:	
  1475                           
  1476                           ; 4 bytes @ 0xE
  1477  00AE                     	ds	2
  1478  00B0                     UART_Transmit_Num@num_data:	
  1479                           
  1480                           ; 10 bytes @ 0x10
  1481  00B0                     	ds	2
  1482  00B2                     Encoded_To_Actual_Analog_Val_Calc@temp_remainder_val:	
  1483                           
  1484                           ; 4 bytes @ 0x12
  1485  00B2                     	ds	4
  1486  00B6                     Encoded_To_Actual_Analog_Val_Calc@remainder_val_1:	
  1487                           
  1488                           ; 4 bytes @ 0x16
  1489  00B6                     	ds	4
  1490  00BA                     UART_Transmit_Num@tens_thousand_digit:	
  1491  00BA                     Encoded_To_Actual_Analog_Val_Calc@remainder_val_10:	
  1492                           ; 2 bytes @ 0x1A
  1493                           
  1494                           
  1495                           ; 4 bytes @ 0x1A
  1496  00BA                     	ds	2
  1497  00BC                     UART_Transmit_Num@uart_datanum_disp_format:	
  1498                           
  1499                           ; 1 bytes @ 0x1C
  1500  00BC                     	ds	1
  1501  00BD                     UART_Transmit_Num@thousands_digit:	
  1502                           
  1503                           ; 2 bytes @ 0x1D
  1504  00BD                     	ds	1
  1505  00BE                     Encoded_To_Actual_Analog_Val_Calc@remainder_val:	
  1506                           
  1507                           ; 4 bytes @ 0x1E
  1508  00BE                     	ds	1
  1509  00BF                     UART_Transmit_Num@hundreds_digit:	
  1510                           
  1511                           ; 2 bytes @ 0x1F
  1512  00BF                     	ds	2
  1513  00C1                     UART_Transmit_Num@tens_digit:	
  1514                           
  1515                           ; 2 bytes @ 0x21
  1516  00C1                     	ds	2
  1517  00C3                     UART_Transmit_Num@unit_digit:	
  1518                           
  1519                           ; 2 bytes @ 0x23
  1520  00C3                     	ds	2
  1521  00C5                     UART_Transmit_Num@num:	
  1522                           
  1523                           ; 4 bytes @ 0x25
  1524  00C5                     	ds	4
  1525  00C9                     UART_Transmit_Num@disp_num:	
  1526                           
  1527                           ; 4 bytes @ 0x29
  1528  00C9                     	ds	4
  1529  00CD                     ??_ADC_Start_Conv:	
  1530                           
  1531                           ; 1 bytes @ 0x2D
  1532  00CD                     	ds	6
  1533  00D3                     ADC_Start_Conv@rcvd_status:	
  1534                           
  1535                           ; 1 bytes @ 0x33
  1536  00D3                     	ds	1
  1537  00D4                     ADC_Start_Conv@adc_value_least_byte:	
  1538                           
  1539                           ; 2 bytes @ 0x34
  1540  00D4                     	ds	2
  1541  00D6                     ADC_Start_Conv@adc_value_most_byte:	
  1542                           
  1543                           ; 2 bytes @ 0x36
  1544  00D6                     	ds	2
  1545  00D8                     ADC_Start_Conv@set_adc_parameters:	
  1546                           
  1547                           ; 1 bytes @ 0x38
  1548  00D8                     	ds	1
  1549  00D9                     ??_main:	
  1550                           
  1551                           ; 1 bytes @ 0x39
  1552  00D9                     	ds	4
  1553                           
  1554                           	psect	cstackCOMMON
  1555  0070                     __pcstackCOMMON:	
  1556  0070                     ?_Is_ADC_Converting:	
  1557  0070                     ?_UART_Transmit_Char:	
  1558                           ; 1 bytes @ 0x0
  1559                           
  1560  0070                     ?_UART_Init:	
  1561                           ; 1 bytes @ 0x0
  1562                           
  1563  0070                     ?_Timer1_Stop:	
  1564                           ; 1 bytes @ 0x0
  1565                           
  1566  0070                     ??_Timer1_Stop:	
  1567                           ; 1 bytes @ 0x0
  1568                           
  1569  0070                     ?_ADC_Conf_Channel:	
  1570                           ; 1 bytes @ 0x0
  1571                           
  1572  0070                     ?_ADC_Start_Conv:	
  1573                           ; 1 bytes @ 0x0
  1574                           
  1575  0070                     ?_main:	
  1576                           ; 1 bytes @ 0x0
  1577                           
  1578  0070                     ?_External_Interrupt_Occured_Appl_Proc:	
  1579                           ; 1 bytes @ 0x0
  1580                           
  1581  0070                     ??_External_Interrupt_Occured_Appl_Proc:	
  1582                           ; 1 bytes @ 0x0
  1583                           
  1584  0070                     ?_Timer1_Req_Time_Expiry_Appl_Proc:	
  1585                           ; 1 bytes @ 0x0
  1586                           
  1587  0070                     ??_Timer1_Req_Time_Expiry_Appl_Proc:	
  1588                           ; 1 bytes @ 0x0
  1589                           
  1590  0070                     ?_ADC_Conv_Over_Appl_Proc:	
  1591                           ; 1 bytes @ 0x0
  1592                           
  1593  0070                     ??_ADC_Conv_Over_Appl_Proc:	
  1594                           ; 1 bytes @ 0x0
  1595                           
  1596  0070                     ?_Interrupt_ISR:	
  1597                           ; 1 bytes @ 0x0
  1598                           
  1599  0070                     ?i1___bmul:	
  1600                           ; 1 bytes @ 0x0
  1601                           
  1602  0070                     ADC_Conv_Over_Appl_Proc@adc_cur_channel:	
  1603                           ; 1 bytes @ 0x0
  1604                           
  1605  0070                     i1___bmul@multiplicand:	
  1606                           ; 1 bytes @ 0x0
  1607                           
  1608                           
  1609                           ; 1 bytes @ 0x0
  1610  0070                     	ds	1
  1611  0071                     ??i1___bmul:	
  1612                           
  1613                           ; 1 bytes @ 0x1
  1614  0071                     	ds	1
  1615  0072                     i1___bmul@multiplier:	
  1616                           
  1617                           ; 1 bytes @ 0x2
  1618  0072                     	ds	1
  1619  0073                     i1___bmul@product:	
  1620                           
  1621                           ; 1 bytes @ 0x3
  1622  0073                     	ds	1
  1623  0074                     Interrupt_ISR@adc_value_least_byte:	
  1624                           
  1625                           ; 2 bytes @ 0x4
  1626  0074                     	ds	2
  1627  0076                     Interrupt_ISR@adc_value_most_byte:	
  1628                           
  1629                           ; 2 bytes @ 0x6
  1630  0076                     	ds	2
  1631                           
  1632                           	psect	cstackBANK0
  1633  0020                     __pcstackBANK0:	
  1634  0020                     ??_Interrupt_ISR:	
  1635                           
  1636                           ; 1 bytes @ 0x0
  1637  0020                     	ds	13
  1638  002D                     ??_Is_ADC_Converting:	
  1639  002D                     ??_UART_Transmit_Char:	
  1640                           ; 1 bytes @ 0xD
  1641                           
  1642  002D                     ??_UART_Init:	
  1643                           ; 1 bytes @ 0xD
  1644                           
  1645  002D                     ?___bmul:	
  1646                           ; 1 bytes @ 0xD
  1647                           
  1648  002D                     ?___lmul:	
  1649                           ; 1 bytes @ 0xD
  1650                           
  1651  002D                     UART_Transmit_Char@transmit_char:	
  1652                           ; 4 bytes @ 0xD
  1653                           
  1654  002D                     ___bmul@multiplicand:	
  1655                           ; 1 bytes @ 0xD
  1656                           
  1657  002D                     ___lmul@multiplier:	
  1658                           ; 1 bytes @ 0xD
  1659                           
  1660                           
  1661                           ; 4 bytes @ 0xD
  1662  002D                     	ds	1
  1663  002E                     ?_UART_Transmit_Str:	
  1664  002E                     ??___bmul:	
  1665                           ; 1 bytes @ 0xE
  1666                           
  1667  002E                     UART_Transmit_Str@transmit_str:	
  1668                           ; 1 bytes @ 0xE
  1669                           
  1670                           
  1671                           ; 2 bytes @ 0xE
  1672  002E                     	ds	1
  1673  002F                     ___bmul@product:	
  1674                           
  1675                           ; 1 bytes @ 0xF
  1676  002F                     	ds	1
  1677  0030                     ??_UART_Transmit_Str:	
  1678  0030                     ___bmul@multiplier:	
  1679                           ; 1 bytes @ 0x10
  1680                           
  1681                           
  1682                           ; 1 bytes @ 0x10
  1683  0030                     	ds	1
  1684  0031                     ??_ADC_Conf_Channel:	
  1685  0031                     ___lmul@multiplicand:	
  1686                           ; 1 bytes @ 0x11
  1687                           
  1688                           
  1689                           ; 4 bytes @ 0x11
  1690  0031                     	ds	1
  1691  0032                     ADC_Conf_Channel@set_adc_cur_channel:	
  1692                           
  1693                           ; 1 bytes @ 0x12
  1694  0032                     	ds	3
  1695  0035                     ??___lmul:	
  1696                           
  1697                           ; 1 bytes @ 0x15
  1698  0035                     	ds	1
  1699  0036                     ___lmul@product:	
  1700                           
  1701                           ; 4 bytes @ 0x16
  1702  0036                     	ds	4
  1703  003A                     ?___lldiv:	
  1704  003A                     ?___llmod:	
  1705                           ; 4 bytes @ 0x1A
  1706                           
  1707  003A                     ___lldiv@divisor:	
  1708                           ; 4 bytes @ 0x1A
  1709                           
  1710  003A                     ___llmod@divisor:	
  1711                           ; 4 bytes @ 0x1A
  1712                           
  1713                           
  1714                           ; 4 bytes @ 0x1A
  1715  003A                     	ds	4
  1716  003E                     ___lldiv@dividend:	
  1717  003E                     ___llmod@dividend:	
  1718                           ; 4 bytes @ 0x1E
  1719                           
  1720                           
  1721                           ; 4 bytes @ 0x1E
  1722  003E                     	ds	4
  1723  0042                     ??___lldiv:	
  1724  0042                     ??___llmod:	
  1725                           ; 1 bytes @ 0x22
  1726                           
  1727                           
  1728                           ; 1 bytes @ 0x22
  1729  0042                     	ds	1
  1730  0043                     ___llmod@counter:	
  1731  0043                     ___lldiv@quotient:	
  1732                           ; 1 bytes @ 0x23
  1733                           
  1734                           
  1735                           ; 4 bytes @ 0x23
  1736  0043                     	ds	4
  1737  0047                     ___lldiv@counter:	
  1738                           
  1739                           ; 1 bytes @ 0x27
  1740  0047                     	ds	1
  1741  0048                     ?_UART_Transmit_Num:	
  1742  0048                     ??_Encoded_To_Actual_Analog_Val_Calc:	
  1743                           ; 1 bytes @ 0x28
  1744                           
  1745  0048                     UART_Transmit_Num@uart_disp_data_int:	
  1746                           ; 1 bytes @ 0x28
  1747                           
  1748                           
  1749                           ; 4 bytes @ 0x28
  1750  0048                     	ds	4
  1751  004C                     ??_UART_Transmit_Num:	
  1752                           
  1753                           ; 1 bytes @ 0x2C
  1754  004C                     	ds	4
  1755                           
  1756                           	psect	maintext
  1757  0062                     __pmaintext:	
  1758 ;;
  1759 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1760 ;;
  1761 ;; *************** function _main *****************
  1762 ;; Defined at:
  1763 ;;		line 68 in file "main.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;		None
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;  r_at_ch_peak    4   31[BANK2 ] unsigned long 
  1768 ;;  r_at_ch_peak    4   27[BANK2 ] unsigned long 
  1769 ;;  max_r_at_ch_    4   23[BANK2 ] unsigned long 
  1770 ;;  temp_frac       4   19[BANK2 ] unsigned long 
  1771 ;;  temp_int        4   15[BANK2 ] unsigned long 
  1772 ;;  i               4    9[BANK2 ] unsigned long 
  1773 ;;  r_at_ch_enco    4    5[BANK2 ] unsigned long 
  1774 ;;  temp            4    1[BANK2 ] unsigned long 
  1775 ;;  calc_r_sourc    2   13[BANK2 ] unsigned int 
  1776 ;;  actual_r_sou    2    0        unsigned int 
  1777 ;;  fault_occure    1    0[BANK2 ] unsigned char 
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  1    wreg      void 
  1780 ;; Registers used:
  1781 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1782 ;; Tracked objects:
  1783 ;;		On entry : B00/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1787 ;;      Params:         0       0       0       0       0
  1788 ;;      Locals:         0       0       0       0      35
  1789 ;;      Temps:          0       0       4       0       0
  1790 ;;      Totals:         0       0       4       0      35
  1791 ;;Total ram usage:       39 bytes
  1792 ;; Hardware stack levels required when called:    5
  1793 ;; This function calls:
  1794 ;;		_ADC_Conf_Channel
  1795 ;;		_ADC_Start_Conv
  1796 ;;		_Encoded_To_Actual_Analog_Val_Calc
  1797 ;;		_UART_Init
  1798 ;;		_UART_Transmit_Char
  1799 ;;		_UART_Transmit_Num
  1800 ;;		_UART_Transmit_Str
  1801 ;;		___bmul
  1802 ;;		___lldiv
  1803 ;;		___lmul
  1804 ;; This function is called by:
  1805 ;;		Startup code after reset
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           
  1810                           ;psect for function _main
  1811  0062                     _main:	
  1812                           
  1813                           ;main.c: 70: unsigned long r_at_ch_encoded_val, r_at_ch_peak_volt_int, r_at_ch_peak_volt
      +                          _frac, max_r_at_ch_encoded_value = 0, temp_int, temp_frac, i, temp;
  1814                           
  1815                           ;incstack = 0
  1816                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1817  0062  3000               	movlw	0
  1818  0063  1283               	bcf	3,5	;RP0=0, select bank2
  1819  0064  1703               	bsf	3,6	;RP1=1, select bank2
  1820  0065  00D4               	movwf	(main@max_r_at_ch_encoded_value+3)^(0+256)
  1821  0066  3000               	movlw	0
  1822  0067  00D3               	movwf	(main@max_r_at_ch_encoded_value+2)^(0+256)
  1823  0068  3000               	movlw	0
  1824  0069  00D2               	movwf	(main@max_r_at_ch_encoded_value+1)^(0+256)
  1825  006A  3000               	movlw	0
  1826  006B  00D1               	movwf	main@max_r_at_ch_encoded_value^(0+256)
  1827                           
  1828                           ;main.c: 71: unsigned int calc_r_source_rms_volt, actual_r_source_rms_volt;
  1829                           ;main.c: 72: char fault_occured_flag = ('n');
  1830  006C  306E               	movlw	110
  1831  006D  1683               	bsf	3,5	;RP0=1, select bank1
  1832  006E  1303               	bcf	3,6	;RP1=0, select bank1
  1833  006F  00D9               	movwf	??_main^(0+128)
  1834  0070  0859               	movf	??_main^(0+128),w
  1835  0071  1283               	bcf	3,5	;RP0=0, select bank2
  1836  0072  1703               	bsf	3,6	;RP1=1, select bank2
  1837  0073  00BA               	movwf	main@fault_occured_flag^(0+256)
  1838                           
  1839                           ;main.c: 74: TRISBbits.TRISB1 = 0;
  1840  0074  1683               	bsf	3,5	;RP0=1, select bank1
  1841  0075  1303               	bcf	3,6	;RP1=0, select bank1
  1842  0076  1086               	bcf	6,1	;volatile
  1843                           
  1844                           ;main.c: 75: TRISBbits.TRISB2 = 0;
  1845  0077  1106               	bcf	6,2	;volatile
  1846                           
  1847                           ;main.c: 76: TRISBbits.TRISB3 = 0;
  1848  0078  1186               	bcf	6,3	;volatile
  1849                           
  1850                           ;main.c: 78: ANSEL = 0x01;
  1851  0079  3001               	movlw	1
  1852  007A  1683               	bsf	3,5	;RP0=1, select bank3
  1853  007B  1703               	bsf	3,6	;RP1=1, select bank3
  1854  007C  0088               	movwf	8	;volatile
  1855                           
  1856                           ;main.c: 79: ANSELH = 0x00;
  1857  007D  0189               	clrf	9	;volatile
  1858                           
  1859                           ;main.c: 80: UART_Init();
  1860  007E  120A  158A  20A5  120A  118A  	fcall	_UART_Init
  1861  0083                     l3539:	
  1862                           ;main.c: 84: while(1)
  1863                           
  1864                           
  1865                           ;main.c: 85: {
  1866                           ;main.c: 87: {
  1867                           ;main.c: 88: max_r_at_ch_encoded_value = 0;
  1868  0083  3000               	movlw	0
  1869  0084  1283               	bcf	3,5	;RP0=0, select bank2
  1870  0085  1703               	bsf	3,6	;RP1=1, select bank2
  1871  0086  00D4               	movwf	(main@max_r_at_ch_encoded_value+3)^(0+256)
  1872  0087  3000               	movlw	0
  1873  0088  00D3               	movwf	(main@max_r_at_ch_encoded_value+2)^(0+256)
  1874  0089  3000               	movlw	0
  1875  008A  00D2               	movwf	(main@max_r_at_ch_encoded_value+1)^(0+256)
  1876  008B  3000               	movlw	0
  1877  008C  00D1               	movwf	main@max_r_at_ch_encoded_value^(0+256)
  1878                           
  1879                           ;main.c: 89: for(i = 0; i < 400ul; ++i )
  1880  008D  3000               	movlw	0
  1881  008E  00C6               	movwf	(main@i+3)^(0+256)
  1882  008F  3000               	movlw	0
  1883  0090  00C5               	movwf	(main@i+2)^(0+256)
  1884  0091  3000               	movlw	0
  1885  0092  00C4               	movwf	(main@i+1)^(0+256)
  1886  0093  3000               	movlw	0
  1887  0094  00C3               	movwf	main@i^(0+256)
  1888  0095  0846               	movf	(main@i+3)^(0+256),w
  1889  0096  1D03               	btfss	3,2
  1890  0097  2905               	goto	l3559
  1891  0098  0845               	movf	(main@i+2)^(0+256),w
  1892  0099  1D03               	btfss	3,2
  1893  009A  2905               	goto	l3559
  1894  009B  3001               	movlw	1
  1895  009C  0244               	subwf	(main@i+1)^(0+256),w
  1896  009D  1D03               	skipz
  1897  009E  28A3               	goto	u3363
  1898  009F  3090               	movlw	144
  1899  00A0  0243               	subwf	main@i^(0+256),w
  1900  00A1  1D03               	skipz
  1901  00A2  28A3               	goto	u3363
  1902  00A3                     u3363:	
  1903  00A3  1803               	btfsc	3,0
  1904  00A4  2905               	goto	l3559
  1905  00A5                     l3547:	
  1906                           
  1907                           ;main.c: 90: {
  1908                           ;main.c: 91: ADC_Conf_Channel(ADC_CH_00);
  1909  00A5  3000               	movlw	0
  1910  00A6  120A  158A  21DC  120A  118A  	fcall	_ADC_Conf_Channel
  1911                           
  1912                           ;main.c: 92: ADC_Start_Conv(&adc_cur_parameters[ADC_CH_00]);
  1913  00AB  30D6               	movlw	(low (_adc_cur_parameters| (0+256)))& (0+255)
  1914  00AC  120A  158A  23BD  120A  118A  	fcall	_ADC_Start_Conv
  1915                           
  1916                           ;main.c: 94: r_at_ch_encoded_val = adc_cur_parameters[adc_cur_channel].adc_value_channel
      +                          ;
  1917  00B1  3005               	movlw	5
  1918  00B2  1683               	bsf	3,5	;RP0=1, select bank1
  1919  00B3  1303               	bcf	3,6	;RP1=0, select bank1
  1920  00B4  00D9               	movwf	??_main^(0+128)
  1921  00B5  0859               	movf	??_main^(0+128),w
  1922  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  1923  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  1924  00B8  00AD               	movwf	___bmul@multiplicand
  1925  00B9  085F               	movf	_adc_cur_channel,w
  1926  00BA  120A  158A  2092  120A  118A  	fcall	___bmul
  1927  00BF  3ED6               	addlw	(low (_adc_cur_parameters| (0+256)))& (0+255)
  1928  00C0  0084               	movwf	4
  1929  00C1  1783               	bsf	3,7	;select IRP bank3
  1930  00C2  0800               	movf	0,w
  1931  00C3  1283               	bcf	3,5	;RP0=0, select bank2
  1932  00C4  1703               	bsf	3,6	;RP1=1, select bank2
  1933  00C5  00BF               	movwf	main@r_at_ch_encoded_val^(0+256)
  1934  00C6  0A84               	incf	4,f
  1935  00C7  0800               	movf	0,w
  1936  00C8  00C0               	movwf	(main@r_at_ch_encoded_val+1)^(0+256)
  1937  00C9  0A84               	incf	4,f
  1938  00CA  0800               	movf	0,w
  1939  00CB  00C1               	movwf	(main@r_at_ch_encoded_val+2)^(0+256)
  1940  00CC  0A84               	incf	4,f
  1941  00CD  0800               	movf	0,w
  1942  00CE  00C2               	movwf	(main@r_at_ch_encoded_val+3)^(0+256)
  1943                           
  1944                           ;main.c: 95: if(r_at_ch_encoded_val > max_r_at_ch_encoded_value )
  1945  00CF  0842               	movf	(main@r_at_ch_encoded_val+3)^(0+256),w
  1946  00D0  0254               	subwf	(main@max_r_at_ch_encoded_value+3)^(0+256),w
  1947  00D1  1D03               	skipz
  1948  00D2  28DD               	goto	u3375
  1949  00D3  0841               	movf	(main@r_at_ch_encoded_val+2)^(0+256),w
  1950  00D4  0253               	subwf	(main@max_r_at_ch_encoded_value+2)^(0+256),w
  1951  00D5  1D03               	skipz
  1952  00D6  28DD               	goto	u3375
  1953  00D7  0840               	movf	(main@r_at_ch_encoded_val+1)^(0+256),w
  1954  00D8  0252               	subwf	(main@max_r_at_ch_encoded_value+1)^(0+256),w
  1955  00D9  1D03               	skipz
  1956  00DA  28DD               	goto	u3375
  1957  00DB  083F               	movf	main@r_at_ch_encoded_val^(0+256),w
  1958  00DC  0251               	subwf	main@max_r_at_ch_encoded_value^(0+256),w
  1959  00DD                     u3375:	
  1960  00DD  1803               	skipnc
  1961  00DE  28E7               	goto	l296
  1962                           
  1963                           ;main.c: 96: {
  1964                           ;main.c: 97: max_r_at_ch_encoded_value = r_at_ch_encoded_val;
  1965  00DF  0842               	movf	(main@r_at_ch_encoded_val+3)^(0+256),w
  1966  00E0  00D4               	movwf	(main@max_r_at_ch_encoded_value+3)^(0+256)
  1967  00E1  0841               	movf	(main@r_at_ch_encoded_val+2)^(0+256),w
  1968  00E2  00D3               	movwf	(main@max_r_at_ch_encoded_value+2)^(0+256)
  1969  00E3  0840               	movf	(main@r_at_ch_encoded_val+1)^(0+256),w
  1970  00E4  00D2               	movwf	(main@max_r_at_ch_encoded_value+1)^(0+256)
  1971  00E5  083F               	movf	main@r_at_ch_encoded_val^(0+256),w
  1972  00E6  00D1               	movwf	main@max_r_at_ch_encoded_value^(0+256)
  1973  00E7                     l296:	
  1974  00E7  3001               	movlw	1
  1975  00E8  07C3               	addwf	main@i^(0+256),f
  1976  00E9  3000               	movlw	0
  1977  00EA  1803               	skipnc
  1978  00EB  3001               	movlw	1
  1979  00EC  07C4               	addwf	(main@i+1)^(0+256),f
  1980  00ED  3000               	movlw	0
  1981  00EE  1803               	skipnc
  1982  00EF  3001               	movlw	1
  1983  00F0  07C5               	addwf	(main@i+2)^(0+256),f
  1984  00F1  3000               	movlw	0
  1985  00F2  1803               	skipnc
  1986  00F3  3001               	movlw	1
  1987  00F4  07C6               	addwf	(main@i+3)^(0+256),f
  1988  00F5  0846               	movf	(main@i+3)^(0+256),w
  1989  00F6  1D03               	btfss	3,2
  1990  00F7  2905               	goto	l3559
  1991  00F8  0845               	movf	(main@i+2)^(0+256),w
  1992  00F9  1D03               	btfss	3,2
  1993  00FA  2905               	goto	l3559
  1994  00FB  3001               	movlw	1
  1995  00FC  0244               	subwf	(main@i+1)^(0+256),w
  1996  00FD  1D03               	skipz
  1997  00FE  2903               	goto	u3383
  1998  00FF  3090               	movlw	144
  1999  0100  0243               	subwf	main@i^(0+256),w
  2000  0101  1D03               	skipz
  2001  0102  2903               	goto	u3383
  2002  0103                     u3383:	
  2003  0103  1C03               	btfss	3,0
  2004  0104  28A5               	goto	l3547
  2005  0105                     l3559:	
  2006                           
  2007                           ;main.c: 98: }
  2008                           ;main.c: 99: }
  2009                           ;main.c: 100: Encoded_To_Actual_Analog_Val_Calc(max_r_at_ch_encoded_value, ((5U) - (0U))
      +                          , (0U), &r_at_ch_peak_volt_int, &r_at_ch_peak_volt_frac );
  2010  0105  0854               	movf	(main@max_r_at_ch_encoded_value+3)^(0+256),w
  2011  0106  1683               	bsf	3,5	;RP0=1, select bank1
  2012  0107  1303               	bcf	3,6	;RP1=0, select bank1
  2013  0108  00A3               	movwf	(Encoded_To_Actual_Analog_Val_Calc@adc_value+3)^(0+128)
  2014  0109  1283               	bcf	3,5	;RP0=0, select bank2
  2015  010A  1703               	bsf	3,6	;RP1=1, select bank2
  2016  010B  0853               	movf	(main@max_r_at_ch_encoded_value+2)^(0+256),w
  2017  010C  1683               	bsf	3,5	;RP0=1, select bank1
  2018  010D  1303               	bcf	3,6	;RP1=0, select bank1
  2019  010E  00A2               	movwf	(Encoded_To_Actual_Analog_Val_Calc@adc_value+2)^(0+128)
  2020  010F  1283               	bcf	3,5	;RP0=0, select bank2
  2021  0110  1703               	bsf	3,6	;RP1=1, select bank2
  2022  0111  0852               	movf	(main@max_r_at_ch_encoded_value+1)^(0+256),w
  2023  0112  1683               	bsf	3,5	;RP0=1, select bank1
  2024  0113  1303               	bcf	3,6	;RP1=0, select bank1
  2025  0114  00A1               	movwf	(Encoded_To_Actual_Analog_Val_Calc@adc_value+1)^(0+128)
  2026  0115  1283               	bcf	3,5	;RP0=0, select bank2
  2027  0116  1703               	bsf	3,6	;RP1=1, select bank2
  2028  0117  0851               	movf	main@max_r_at_ch_encoded_value^(0+256),w
  2029  0118  1683               	bsf	3,5	;RP0=1, select bank1
  2030  0119  1303               	bcf	3,6	;RP1=0, select bank1
  2031  011A  00A0               	movwf	Encoded_To_Actual_Analog_Val_Calc@adc_value^(0+128)
  2032  011B  3000               	movlw	0
  2033  011C  00A7               	movwf	(Encoded_To_Actual_Analog_Val_Calc@full_scale_analog_val+3)^(0+128)
  2034  011D  3000               	movlw	0
  2035  011E  00A6               	movwf	(Encoded_To_Actual_Analog_Val_Calc@full_scale_analog_val+2)^(0+128)
  2036  011F  3000               	movlw	0
  2037  0120  00A5               	movwf	(Encoded_To_Actual_Analog_Val_Calc@full_scale_analog_val+1)^(0+128)
  2038  0121  3005               	movlw	5
  2039  0122  00A4               	movwf	Encoded_To_Actual_Analog_Val_Calc@full_scale_analog_val^(0+128)
  2040  0123  3000               	movlw	0
  2041  0124  00AB               	movwf	(Encoded_To_Actual_Analog_Val_Calc@min_analog_val+3)^(0+128)
  2042  0125  3000               	movlw	0
  2043  0126  00AA               	movwf	(Encoded_To_Actual_Analog_Val_Calc@min_analog_val+2)^(0+128)
  2044  0127  3000               	movlw	0
  2045  0128  00A9               	movwf	(Encoded_To_Actual_Analog_Val_Calc@min_analog_val+1)^(0+128)
  2046  0129  3000               	movlw	0
  2047  012A  00A8               	movwf	Encoded_To_Actual_Analog_Val_Calc@min_analog_val^(0+128)
  2048  012B  3055               	movlw	(low (main@r_at_ch_peak_volt_int| (0+256)))& (0+255)
  2049  012C  00D9               	movwf	??_main^(0+128)
  2050  012D  0859               	movf	??_main^(0+128),w
  2051  012E  00AC               	movwf	Encoded_To_Actual_Analog_Val_Calc@analog_val_in_digital_int^(0+128)
  2052  012F  3059               	movlw	(low (main@r_at_ch_peak_volt_frac| (0+256)))& (0+255)
  2053  0130  00DA               	movwf	(??_main+1)^(0+128)
  2054  0131  085A               	movf	(??_main+1)^(0+128),w
  2055  0132  00AD               	movwf	Encoded_To_Actual_Analog_Val_Calc@analog_val_in_digital_frac^(0+128)
  2056  0133  120A  158A  254D  120A  118A  	fcall	_Encoded_To_Actual_Analog_Val_Calc
  2057                           
  2058                           ;main.c: 102: to_disp.unsigned_val.value_long = max_r_at_ch_encoded_value;
  2059  0138  1283               	bcf	3,5	;RP0=0, select bank2
  2060  0139  1703               	bsf	3,6	;RP1=1, select bank2
  2061  013A  0854               	movf	(main@max_r_at_ch_encoded_value+3)^(0+256),w
  2062  013B  1683               	bsf	3,5	;RP0=1, select bank3
  2063  013C  1703               	bsf	3,6	;RP1=1, select bank3
  2064  013D  00CB               	movwf	(_to_disp+3)^(0+384)
  2065  013E  1283               	bcf	3,5	;RP0=0, select bank2
  2066  013F  1703               	bsf	3,6	;RP1=1, select bank2
  2067  0140  0853               	movf	(main@max_r_at_ch_encoded_value+2)^(0+256),w
  2068  0141  1683               	bsf	3,5	;RP0=1, select bank3
  2069  0142  1703               	bsf	3,6	;RP1=1, select bank3
  2070  0143  00CA               	movwf	(_to_disp+2)^(0+384)
  2071  0144  1283               	bcf	3,5	;RP0=0, select bank2
  2072  0145  1703               	bsf	3,6	;RP1=1, select bank2
  2073  0146  0852               	movf	(main@max_r_at_ch_encoded_value+1)^(0+256),w
  2074  0147  1683               	bsf	3,5	;RP0=1, select bank3
  2075  0148  1703               	bsf	3,6	;RP1=1, select bank3
  2076  0149  00C9               	movwf	(_to_disp+1)^(0+384)
  2077  014A  1283               	bcf	3,5	;RP0=0, select bank2
  2078  014B  1703               	bsf	3,6	;RP1=1, select bank2
  2079  014C  0851               	movf	main@max_r_at_ch_encoded_value^(0+256),w
  2080  014D  1683               	bsf	3,5	;RP0=1, select bank3
  2081  014E  1703               	bsf	3,6	;RP1=1, select bank3
  2082  014F  00C8               	movwf	_to_disp^(0+384)
  2083                           
  2084                           ;main.c: 103: UART_Transmit_Num(DISP_UNSIGN_NUM_DIGIT4, to_disp );
  2085  0150  084B               	movf	(_to_disp+3)^(0+384),w
  2086  0151  1283               	bcf	3,5	;RP0=0, select bank0
  2087  0152  1303               	bcf	3,6	;RP1=0, select bank0
  2088  0153  00CB               	movwf	UART_Transmit_Num@uart_disp_data_int+3
  2089  0154  1683               	bsf	3,5	;RP0=1, select bank3
  2090  0155  1703               	bsf	3,6	;RP1=1, select bank3
  2091  0156  084A               	movf	(_to_disp+2)^(0+384),w
  2092  0157  1283               	bcf	3,5	;RP0=0, select bank0
  2093  0158  1303               	bcf	3,6	;RP1=0, select bank0
  2094  0159  00CA               	movwf	UART_Transmit_Num@uart_disp_data_int+2
  2095  015A  1683               	bsf	3,5	;RP0=1, select bank3
  2096  015B  1703               	bsf	3,6	;RP1=1, select bank3
  2097  015C  0849               	movf	(_to_disp+1)^(0+384),w
  2098  015D  1283               	bcf	3,5	;RP0=0, select bank0
  2099  015E  1303               	bcf	3,6	;RP1=0, select bank0
  2100  015F  00C9               	movwf	UART_Transmit_Num@uart_disp_data_int+1
  2101  0160  1683               	bsf	3,5	;RP0=1, select bank3
  2102  0161  1703               	bsf	3,6	;RP1=1, select bank3
  2103  0162  0848               	movf	_to_disp^(0+384),w
  2104  0163  1283               	bcf	3,5	;RP0=0, select bank0
  2105  0164  1303               	bcf	3,6	;RP1=0, select bank0
  2106  0165  00C8               	movwf	UART_Transmit_Num@uart_disp_data_int
  2107  0166  3004               	movlw	4
  2108  0167  120A  118A  2452  120A  118A  	fcall	_UART_Transmit_Num
  2109                           
  2110                           ;main.c: 104: UART_Transmit_Str("  ");
  2111  016C  3094               	movlw	low (STR_4| (0+32768))
  2112  016D  1283               	bcf	3,5	;RP0=0, select bank0
  2113  016E  1303               	bcf	3,6	;RP1=0, select bank0
  2114  016F  00AE               	movwf	UART_Transmit_Str@transmit_str
  2115  0170  3091               	movlw	high (STR_4| (0+32768))
  2116  0171  00AF               	movwf	UART_Transmit_Str@transmit_str+1
  2117  0172  120A  158A  20C8  120A  118A  	fcall	_UART_Transmit_Str
  2118                           
  2119                           ;main.c: 106: to_disp.signed_val.val_in_bytes.value_byte[0] = r_at_ch_peak_volt_int;
  2120  0177  1283               	bcf	3,5	;RP0=0, select bank2
  2121  0178  1703               	bsf	3,6	;RP1=1, select bank2
  2122  0179  0856               	movf	(main@r_at_ch_peak_volt_int+1)^(0+256),w
  2123  017A  1683               	bsf	3,5	;RP0=1, select bank3
  2124  017B  1703               	bsf	3,6	;RP1=1, select bank3
  2125  017C  00C9               	movwf	(_to_disp+1)^(0+384)
  2126  017D  1283               	bcf	3,5	;RP0=0, select bank2
  2127  017E  1703               	bsf	3,6	;RP1=1, select bank2
  2128  017F  0855               	movf	main@r_at_ch_peak_volt_int^(0+256),w
  2129  0180  1683               	bsf	3,5	;RP0=1, select bank3
  2130  0181  1703               	bsf	3,6	;RP1=1, select bank3
  2131  0182  00C8               	movwf	_to_disp^(0+384)
  2132                           
  2133                           ;main.c: 107: UART_Transmit_Num(DISP_SIGN_NUM_DIGIT3, to_disp );
  2134  0183  084B               	movf	(_to_disp+3)^(0+384),w
  2135  0184  1283               	bcf	3,5	;RP0=0, select bank0
  2136  0185  1303               	bcf	3,6	;RP1=0, select bank0
  2137  0186  00CB               	movwf	UART_Transmit_Num@uart_disp_data_int+3
  2138  0187  1683               	bsf	3,5	;RP0=1, select bank3
  2139  0188  1703               	bsf	3,6	;RP1=1, select bank3
  2140  0189  084A               	movf	(_to_disp+2)^(0+384),w
  2141  018A  1283               	bcf	3,5	;RP0=0, select bank0
  2142  018B  1303               	bcf	3,6	;RP1=0, select bank0
  2143  018C  00CA               	movwf	UART_Transmit_Num@uart_disp_data_int+2
  2144  018D  1683               	bsf	3,5	;RP0=1, select bank3
  2145  018E  1703               	bsf	3,6	;RP1=1, select bank3
  2146  018F  0849               	movf	(_to_disp+1)^(0+384),w
  2147  0190  1283               	bcf	3,5	;RP0=0, select bank0
  2148  0191  1303               	bcf	3,6	;RP1=0, select bank0
  2149  0192  00C9               	movwf	UART_Transmit_Num@uart_disp_data_int+1
  2150  0193  1683               	bsf	3,5	;RP0=1, select bank3
  2151  0194  1703               	bsf	3,6	;RP1=1, select bank3
  2152  0195  0848               	movf	_to_disp^(0+384),w
  2153  0196  1283               	bcf	3,5	;RP0=0, select bank0
  2154  0197  1303               	bcf	3,6	;RP1=0, select bank0
  2155  0198  00C8               	movwf	UART_Transmit_Num@uart_disp_data_int
  2156  0199  3013               	movlw	19
  2157  019A  120A  118A  2452  120A  118A  	fcall	_UART_Transmit_Num
  2158                           
  2159                           ;main.c: 108: UART_Transmit_Str("  ");
  2160  019F  3094               	movlw	low (STR_4| (0+32768))
  2161  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  2162  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  2163  01A2  00AE               	movwf	UART_Transmit_Str@transmit_str
  2164  01A3  3091               	movlw	high (STR_4| (0+32768))
  2165  01A4  00AF               	movwf	UART_Transmit_Str@transmit_str+1
  2166  01A5  120A  158A  20C8  120A  118A  	fcall	_UART_Transmit_Str
  2167                           
  2168                           ;main.c: 110: to_disp.signed_val.val_in_bytes.value_byte[0] = r_at_ch_peak_volt_frac ;
  2169  01AA  1283               	bcf	3,5	;RP0=0, select bank2
  2170  01AB  1703               	bsf	3,6	;RP1=1, select bank2
  2171  01AC  085A               	movf	(main@r_at_ch_peak_volt_frac+1)^(0+256),w
  2172  01AD  1683               	bsf	3,5	;RP0=1, select bank3
  2173  01AE  1703               	bsf	3,6	;RP1=1, select bank3
  2174  01AF  00C9               	movwf	(_to_disp+1)^(0+384)
  2175  01B0  1283               	bcf	3,5	;RP0=0, select bank2
  2176  01B1  1703               	bsf	3,6	;RP1=1, select bank2
  2177  01B2  0859               	movf	main@r_at_ch_peak_volt_frac^(0+256),w
  2178  01B3  1683               	bsf	3,5	;RP0=1, select bank3
  2179  01B4  1703               	bsf	3,6	;RP1=1, select bank3
  2180  01B5  00C8               	movwf	_to_disp^(0+384)
  2181                           
  2182                           ;main.c: 111: UART_Transmit_Num(DISP_SIGN_NUM_DIGIT3, to_disp );
  2183  01B6  084B               	movf	(_to_disp+3)^(0+384),w
  2184  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  2185  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  2186  01B9  00CB               	movwf	UART_Transmit_Num@uart_disp_data_int+3
  2187  01BA  1683               	bsf	3,5	;RP0=1, select bank3
  2188  01BB  1703               	bsf	3,6	;RP1=1, select bank3
  2189  01BC  084A               	movf	(_to_disp+2)^(0+384),w
  2190  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  2191  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  2192  01BF  00CA               	movwf	UART_Transmit_Num@uart_disp_data_int+2
  2193  01C0  1683               	bsf	3,5	;RP0=1, select bank3
  2194  01C1  1703               	bsf	3,6	;RP1=1, select bank3
  2195  01C2  0849               	movf	(_to_disp+1)^(0+384),w
  2196  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2197  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  2198  01C5  00C9               	movwf	UART_Transmit_Num@uart_disp_data_int+1
  2199  01C6  1683               	bsf	3,5	;RP0=1, select bank3
  2200  01C7  1703               	bsf	3,6	;RP1=1, select bank3
  2201  01C8  0848               	movf	_to_disp^(0+384),w
  2202  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  2203  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  2204  01CB  00C8               	movwf	UART_Transmit_Num@uart_disp_data_int
  2205  01CC  3013               	movlw	19
  2206  01CD  120A  118A  2452  120A  118A  	fcall	_UART_Transmit_Num
  2207                           
  2208                           ;main.c: 112: UART_Transmit_Str("  ");
  2209  01D2  3094               	movlw	low (STR_4| (0+32768))
  2210  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  2211  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  2212  01D5  00AE               	movwf	UART_Transmit_Str@transmit_str
  2213  01D6  3091               	movlw	high (STR_4| (0+32768))
  2214  01D7  00AF               	movwf	UART_Transmit_Str@transmit_str+1
  2215  01D8  120A  158A  20C8  120A  118A  	fcall	_UART_Transmit_Str
  2216                           
  2217                           ;main.c: 114: temp_int = r_at_ch_peak_volt_int * 8;
  2218  01DD  1283               	bcf	3,5	;RP0=0, select bank2
  2219  01DE  1703               	bsf	3,6	;RP1=1, select bank2
  2220  01DF  0855               	movf	main@r_at_ch_peak_volt_int^(0+256),w
  2221  01E0  1683               	bsf	3,5	;RP0=1, select bank1
  2222  01E1  1303               	bcf	3,6	;RP1=0, select bank1
  2223  01E2  00D9               	movwf	??_main^(0+128)
  2224  01E3  1283               	bcf	3,5	;RP0=0, select bank2
  2225  01E4  1703               	bsf	3,6	;RP1=1, select bank2
  2226  01E5  0856               	movf	(main@r_at_ch_peak_volt_int+1)^(0+256),w
  2227  01E6  1683               	bsf	3,5	;RP0=1, select bank1
  2228  01E7  1303               	bcf	3,6	;RP1=0, select bank1
  2229  01E8  00DA               	movwf	(??_main^(0+128)+1)
  2230  01E9  1283               	bcf	3,5	;RP0=0, select bank2
  2231  01EA  1703               	bsf	3,6	;RP1=1, select bank2
  2232  01EB  0857               	movf	(main@r_at_ch_peak_volt_int+2)^(0+256),w
  2233  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  2234  01ED  1303               	bcf	3,6	;RP1=0, select bank1
  2235  01EE  00DB               	movwf	(??_main^(0+128)+2)
  2236  01EF  1283               	bcf	3,5	;RP0=0, select bank2
  2237  01F0  1703               	bsf	3,6	;RP1=1, select bank2
  2238  01F1  0858               	movf	(main@r_at_ch_peak_volt_int+3)^(0+256),w
  2239  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  2240  01F3  1303               	bcf	3,6	;RP1=0, select bank1
  2241  01F4  00DC               	movwf	(??_main^(0+128)+3)
  2242  01F5  3003               	movlw	3
  2243  01F6                     u3395:	
  2244  01F6  1003               	clrc
  2245  01F7  0DD9               	rlf	??_main^(0+128),f
  2246  01F8  0DDA               	rlf	(??_main^(0+128)+1),f
  2247  01F9  0DDB               	rlf	(??_main^(0+128)+2),f
  2248  01FA  0DDC               	rlf	(??_main^(0+128)+3),f
  2249  01FB  3EFF               	addlw	-1
  2250  01FC  1D03               	skipz
  2251  01FD  29F6               	goto	u3395
  2252  01FE  085C               	movf	(??_main+3)^(0+128),w
  2253  01FF  1283               	bcf	3,5	;RP0=0, select bank2
  2254  0200  1703               	bsf	3,6	;RP1=1, select bank2
  2255  0201  00CC               	movwf	(main@temp_int+3)^(0+256)
  2256  0202  1683               	bsf	3,5	;RP0=1, select bank1
  2257  0203  1303               	bcf	3,6	;RP1=0, select bank1
  2258  0204  085B               	movf	(??_main+2)^(0+128),w
  2259  0205  1283               	bcf	3,5	;RP0=0, select bank2
  2260  0206  1703               	bsf	3,6	;RP1=1, select bank2
  2261  0207  00CB               	movwf	(main@temp_int+2)^(0+256)
  2262  0208  1683               	bsf	3,5	;RP0=1, select bank1
  2263  0209  1303               	bcf	3,6	;RP1=0, select bank1
  2264  020A  085A               	movf	(??_main+1)^(0+128),w
  2265  020B  1283               	bcf	3,5	;RP0=0, select bank2
  2266  020C  1703               	bsf	3,6	;RP1=1, select bank2
  2267  020D  00CA               	movwf	(main@temp_int+1)^(0+256)
  2268  020E  1683               	bsf	3,5	;RP0=1, select bank1
  2269  020F  1303               	bcf	3,6	;RP1=0, select bank1
  2270  0210  0859               	movf	??_main^(0+128),w
  2271  0211  1283               	bcf	3,5	;RP0=0, select bank2
  2272  0212  1703               	bsf	3,6	;RP1=1, select bank2
  2273  0213  00C9               	movwf	main@temp_int^(0+256)
  2274                           
  2275                           ;main.c: 115: temp_frac = (r_at_ch_peak_volt_frac /10) * 8;
  2276  0214  3000               	movlw	0
  2277  0215  1283               	bcf	3,5	;RP0=0, select bank0
  2278  0216  1303               	bcf	3,6	;RP1=0, select bank0
  2279  0217  00BD               	movwf	___lldiv@divisor+3
  2280  0218  3000               	movlw	0
  2281  0219  00BC               	movwf	___lldiv@divisor+2
  2282  021A  3000               	movlw	0
  2283  021B  00BB               	movwf	___lldiv@divisor+1
  2284  021C  300A               	movlw	10
  2285  021D  00BA               	movwf	___lldiv@divisor
  2286  021E  1283               	bcf	3,5	;RP0=0, select bank2
  2287  021F  1703               	bsf	3,6	;RP1=1, select bank2
  2288  0220  085C               	movf	(main@r_at_ch_peak_volt_frac+3)^(0+256),w
  2289  0221  1283               	bcf	3,5	;RP0=0, select bank0
  2290  0222  1303               	bcf	3,6	;RP1=0, select bank0
  2291  0223  00C1               	movwf	___lldiv@dividend+3
  2292  0224  1283               	bcf	3,5	;RP0=0, select bank2
  2293  0225  1703               	bsf	3,6	;RP1=1, select bank2
  2294  0226  085B               	movf	(main@r_at_ch_peak_volt_frac+2)^(0+256),w
  2295  0227  1283               	bcf	3,5	;RP0=0, select bank0
  2296  0228  1303               	bcf	3,6	;RP1=0, select bank0
  2297  0229  00C0               	movwf	___lldiv@dividend+2
  2298  022A  1283               	bcf	3,5	;RP0=0, select bank2
  2299  022B  1703               	bsf	3,6	;RP1=1, select bank2
  2300  022C  085A               	movf	(main@r_at_ch_peak_volt_frac+1)^(0+256),w
  2301  022D  1283               	bcf	3,5	;RP0=0, select bank0
  2302  022E  1303               	bcf	3,6	;RP1=0, select bank0
  2303  022F  00BF               	movwf	___lldiv@dividend+1
  2304  0230  1283               	bcf	3,5	;RP0=0, select bank2
  2305  0231  1703               	bsf	3,6	;RP1=1, select bank2
  2306  0232  0859               	movf	main@r_at_ch_peak_volt_frac^(0+256),w
  2307  0233  1283               	bcf	3,5	;RP0=0, select bank0
  2308  0234  1303               	bcf	3,6	;RP1=0, select bank0
  2309  0235  00BE               	movwf	___lldiv@dividend
  2310  0236  120A  158A  217C  120A  118A  	fcall	___lldiv
  2311  023B  1283               	bcf	3,5	;RP0=0, select bank0
  2312  023C  1303               	bcf	3,6	;RP1=0, select bank0
  2313  023D  083A               	movf	?___lldiv,w
  2314  023E  1683               	bsf	3,5	;RP0=1, select bank1
  2315  023F  1303               	bcf	3,6	;RP1=0, select bank1
  2316  0240  00D9               	movwf	??_main^(0+128)
  2317  0241  1283               	bcf	3,5	;RP0=0, select bank0
  2318  0242  1303               	bcf	3,6	;RP1=0, select bank0
  2319  0243  083B               	movf	?___lldiv+1,w
  2320  0244  1683               	bsf	3,5	;RP0=1, select bank1
  2321  0245  1303               	bcf	3,6	;RP1=0, select bank1
  2322  0246  00DA               	movwf	(??_main^(0+128)+1)
  2323  0247  1283               	bcf	3,5	;RP0=0, select bank0
  2324  0248  1303               	bcf	3,6	;RP1=0, select bank0
  2325  0249  083C               	movf	?___lldiv+2,w
  2326  024A  1683               	bsf	3,5	;RP0=1, select bank1
  2327  024B  1303               	bcf	3,6	;RP1=0, select bank1
  2328  024C  00DB               	movwf	(??_main^(0+128)+2)
  2329  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2330  024E  1303               	bcf	3,6	;RP1=0, select bank0
  2331  024F  083D               	movf	?___lldiv+3,w
  2332  0250  1683               	bsf	3,5	;RP0=1, select bank1
  2333  0251  1303               	bcf	3,6	;RP1=0, select bank1
  2334  0252  00DC               	movwf	(??_main^(0+128)+3)
  2335  0253  3003               	movlw	3
  2336  0254                     u3405:	
  2337  0254  1003               	clrc
  2338  0255  0DD9               	rlf	??_main^(0+128),f
  2339  0256  0DDA               	rlf	(??_main^(0+128)+1),f
  2340  0257  0DDB               	rlf	(??_main^(0+128)+2),f
  2341  0258  0DDC               	rlf	(??_main^(0+128)+3),f
  2342  0259  3EFF               	addlw	-1
  2343  025A  1D03               	skipz
  2344  025B  2A54               	goto	u3405
  2345  025C  085C               	movf	(??_main+3)^(0+128),w
  2346  025D  1283               	bcf	3,5	;RP0=0, select bank2
  2347  025E  1703               	bsf	3,6	;RP1=1, select bank2
  2348  025F  00D0               	movwf	(main@temp_frac+3)^(0+256)
  2349  0260  1683               	bsf	3,5	;RP0=1, select bank1
  2350  0261  1303               	bcf	3,6	;RP1=0, select bank1
  2351  0262  085B               	movf	(??_main+2)^(0+128),w
  2352  0263  1283               	bcf	3,5	;RP0=0, select bank2
  2353  0264  1703               	bsf	3,6	;RP1=1, select bank2
  2354  0265  00CF               	movwf	(main@temp_frac+2)^(0+256)
  2355  0266  1683               	bsf	3,5	;RP0=1, select bank1
  2356  0267  1303               	bcf	3,6	;RP1=0, select bank1
  2357  0268  085A               	movf	(??_main+1)^(0+128),w
  2358  0269  1283               	bcf	3,5	;RP0=0, select bank2
  2359  026A  1703               	bsf	3,6	;RP1=1, select bank2
  2360  026B  00CE               	movwf	(main@temp_frac+1)^(0+256)
  2361  026C  1683               	bsf	3,5	;RP0=1, select bank1
  2362  026D  1303               	bcf	3,6	;RP1=0, select bank1
  2363  026E  0859               	movf	??_main^(0+128),w
  2364  026F  1283               	bcf	3,5	;RP0=0, select bank2
  2365  0270  1703               	bsf	3,6	;RP1=1, select bank2
  2366  0271  00CD               	movwf	main@temp_frac^(0+256)
  2367                           
  2368                           ;main.c: 116: temp = temp_int + (temp_frac/100);
  2369  0272  3000               	movlw	0
  2370  0273  1283               	bcf	3,5	;RP0=0, select bank0
  2371  0274  1303               	bcf	3,6	;RP1=0, select bank0
  2372  0275  00BD               	movwf	___lldiv@divisor+3
  2373  0276  3000               	movlw	0
  2374  0277  00BC               	movwf	___lldiv@divisor+2
  2375  0278  3000               	movlw	0
  2376  0279  00BB               	movwf	___lldiv@divisor+1
  2377  027A  3064               	movlw	100
  2378  027B  00BA               	movwf	___lldiv@divisor
  2379  027C  1283               	bcf	3,5	;RP0=0, select bank2
  2380  027D  1703               	bsf	3,6	;RP1=1, select bank2
  2381  027E  0850               	movf	(main@temp_frac+3)^(0+256),w
  2382  027F  1283               	bcf	3,5	;RP0=0, select bank0
  2383  0280  1303               	bcf	3,6	;RP1=0, select bank0
  2384  0281  00C1               	movwf	___lldiv@dividend+3
  2385  0282  1283               	bcf	3,5	;RP0=0, select bank2
  2386  0283  1703               	bsf	3,6	;RP1=1, select bank2
  2387  0284  084F               	movf	(main@temp_frac+2)^(0+256),w
  2388  0285  1283               	bcf	3,5	;RP0=0, select bank0
  2389  0286  1303               	bcf	3,6	;RP1=0, select bank0
  2390  0287  00C0               	movwf	___lldiv@dividend+2
  2391  0288  1283               	bcf	3,5	;RP0=0, select bank2
  2392  0289  1703               	bsf	3,6	;RP1=1, select bank2
  2393  028A  084E               	movf	(main@temp_frac+1)^(0+256),w
  2394  028B  1283               	bcf	3,5	;RP0=0, select bank0
  2395  028C  1303               	bcf	3,6	;RP1=0, select bank0
  2396  028D  00BF               	movwf	___lldiv@dividend+1
  2397  028E  1283               	bcf	3,5	;RP0=0, select bank2
  2398  028F  1703               	bsf	3,6	;RP1=1, select bank2
  2399  0290  084D               	movf	main@temp_frac^(0+256),w
  2400  0291  1283               	bcf	3,5	;RP0=0, select bank0
  2401  0292  1303               	bcf	3,6	;RP1=0, select bank0
  2402  0293  00BE               	movwf	___lldiv@dividend
  2403  0294  120A  158A  217C  120A  118A  	fcall	___lldiv
  2404  0299  1283               	bcf	3,5	;RP0=0, select bank0
  2405  029A  1303               	bcf	3,6	;RP1=0, select bank0
  2406  029B  083A               	movf	?___lldiv,w
  2407  029C  1283               	bcf	3,5	;RP0=0, select bank2
  2408  029D  1703               	bsf	3,6	;RP1=1, select bank2
  2409  029E  0749               	addwf	main@temp_int^(0+256),w
  2410  029F  1683               	bsf	3,5	;RP0=1, select bank1
  2411  02A0  1303               	bcf	3,6	;RP1=0, select bank1
  2412  02A1  00D9               	movwf	??_main^(0+128)
  2413  02A2  3000               	movlw	0
  2414  02A3  1803               	skipnc
  2415  02A4  3001               	movlw	1
  2416  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  2417  02A6  1303               	bcf	3,6	;RP1=0, select bank0
  2418  02A7  073B               	addwf	?___lldiv+1,w
  2419  02A8  1683               	bsf	3,5	;RP0=1, select bank1
  2420  02A9  1303               	bcf	3,6	;RP1=0, select bank1
  2421  02AA  01DB               	clrf	(??_main^(0+128)+2)
  2422  02AB  1803               	skipnc
  2423  02AC  0ADB               	incf	(??_main^(0+128)+2),f
  2424  02AD  1283               	bcf	3,5	;RP0=0, select bank2
  2425  02AE  1703               	bsf	3,6	;RP1=1, select bank2
  2426  02AF  074A               	addwf	(main@temp_int+1)^(0+256),w
  2427  02B0  1683               	bsf	3,5	;RP0=1, select bank1
  2428  02B1  1303               	bcf	3,6	;RP1=0, select bank1
  2429  02B2  00DA               	movwf	(??_main^(0+128)+1)
  2430  02B3  1803               	skipnc
  2431  02B4  0ADB               	incf	(??_main^(0+128)+2),f
  2432  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  2433  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  2434  02B7  083C               	movf	?___lldiv+2,w
  2435  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  2436  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  2437  02BA  075B               	addwf	(??_main^(0+128)+2),w
  2438  02BB  01DC               	clrf	(??_main^(0+128)+3)
  2439  02BC  1803               	skipnc
  2440  02BD  0ADC               	incf	(??_main^(0+128)+3),f
  2441  02BE  1283               	bcf	3,5	;RP0=0, select bank2
  2442  02BF  1703               	bsf	3,6	;RP1=1, select bank2
  2443  02C0  074B               	addwf	(main@temp_int+2)^(0+256),w
  2444  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  2445  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  2446  02C3  00DB               	movwf	(??_main^(0+128)+2)
  2447  02C4  1803               	skipnc
  2448  02C5  0ADC               	incf	(??_main^(0+128)+3),f
  2449  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  2450  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  2451  02C8  083D               	movf	?___lldiv+3,w
  2452  02C9  1683               	bsf	3,5	;RP0=1, select bank1
  2453  02CA  1303               	bcf	3,6	;RP1=0, select bank1
  2454  02CB  075C               	addwf	(??_main^(0+128)+3),w
  2455  02CC  1283               	bcf	3,5	;RP0=0, select bank2
  2456  02CD  1703               	bsf	3,6	;RP1=1, select bank2
  2457  02CE  074C               	addwf	(main@temp_int+3)^(0+256),w
  2458  02CF  1683               	bsf	3,5	;RP0=1, select bank1
  2459  02D0  1303               	bcf	3,6	;RP1=0, select bank1
  2460  02D1  00DC               	movwf	(??_main^(0+128)+3)
  2461  02D2  085C               	movf	(??_main+3)^(0+128),w
  2462  02D3  1283               	bcf	3,5	;RP0=0, select bank2
  2463  02D4  1703               	bsf	3,6	;RP1=1, select bank2
  2464  02D5  00BE               	movwf	(main@temp+3)^(0+256)
  2465  02D6  1683               	bsf	3,5	;RP0=1, select bank1
  2466  02D7  1303               	bcf	3,6	;RP1=0, select bank1
  2467  02D8  085B               	movf	(??_main+2)^(0+128),w
  2468  02D9  1283               	bcf	3,5	;RP0=0, select bank2
  2469  02DA  1703               	bsf	3,6	;RP1=1, select bank2
  2470  02DB  00BD               	movwf	(main@temp+2)^(0+256)
  2471  02DC  1683               	bsf	3,5	;RP0=1, select bank1
  2472  02DD  1303               	bcf	3,6	;RP1=0, select bank1
  2473  02DE  085A               	movf	(??_main+1)^(0+128),w
  2474  02DF  1283               	bcf	3,5	;RP0=0, select bank2
  2475  02E0  1703               	bsf	3,6	;RP1=1, select bank2
  2476  02E1  00BC               	movwf	(main@temp+1)^(0+256)
  2477  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  2478  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  2479  02E4  0859               	movf	??_main^(0+128),w
  2480  02E5  1283               	bcf	3,5	;RP0=0, select bank2
  2481  02E6  1703               	bsf	3,6	;RP1=1, select bank2
  2482  02E7  00BB               	movwf	main@temp^(0+256)
  2483                           
  2484                           ;main.c: 117: if(temp >= 1)
  2485  02E8  083E               	movf	(main@temp+3)^(0+256),w
  2486  02E9  043D               	iorwf	(main@temp+2)^(0+256),w
  2487  02EA  043C               	iorwf	(main@temp+1)^(0+256),w
  2488  02EB  043B               	iorwf	main@temp^(0+256),w
  2489  02EC  1903               	skipnz
  2490  02ED  2B1E               	goto	l3589
  2491                           
  2492                           ;main.c: 118: {
  2493                           ;main.c: 119: temp -= 1;
  2494  02EE  3001               	movlw	1
  2495  02EF  1683               	bsf	3,5	;RP0=1, select bank1
  2496  02F0  1303               	bcf	3,6	;RP1=0, select bank1
  2497  02F1  00D9               	movwf	??_main^(0+128)
  2498  02F2  3000               	movlw	0
  2499  02F3  00DA               	movwf	(??_main^(0+128)+1)
  2500  02F4  3000               	movlw	0
  2501  02F5  00DB               	movwf	(??_main^(0+128)+2)
  2502  02F6  3000               	movlw	0
  2503  02F7  00DC               	movwf	(??_main^(0+128)+3)
  2504  02F8  0859               	movf	??_main^(0+128),w
  2505  02F9  1283               	bcf	3,5	;RP0=0, select bank2
  2506  02FA  1703               	bsf	3,6	;RP1=1, select bank2
  2507  02FB  02BB               	subwf	main@temp^(0+256),f
  2508  02FC  1683               	bsf	3,5	;RP0=1, select bank1
  2509  02FD  1303               	bcf	3,6	;RP1=0, select bank1
  2510  02FE  085A               	movf	(??_main+1)^(0+128),w
  2511  02FF  1C03               	skipc
  2512  0300  0F5A               	incfsz	(??_main+1)^(0+128),w
  2513  0301  2B03               	goto	u3425
  2514  0302  2B06               	goto	u3426
  2515  0303                     u3425:	
  2516  0303  1283               	bcf	3,5	;RP0=0, select bank2
  2517  0304  1703               	bsf	3,6	;RP1=1, select bank2
  2518  0305  02BC               	subwf	(main@temp+1)^(0+256),f
  2519  0306                     u3426:	
  2520  0306  1683               	bsf	3,5	;RP0=1, select bank1
  2521  0307  1303               	bcf	3,6	;RP1=0, select bank1
  2522  0308  085B               	movf	(??_main+2)^(0+128),w
  2523  0309  1C03               	skipc
  2524  030A  0F5B               	incfsz	(??_main+2)^(0+128),w
  2525  030B  2B0D               	goto	u3427
  2526  030C  2B10               	goto	u3428
  2527  030D                     u3427:	
  2528  030D  1283               	bcf	3,5	;RP0=0, select bank2
  2529  030E  1703               	bsf	3,6	;RP1=1, select bank2
  2530  030F  02BD               	subwf	(main@temp+2)^(0+256),f
  2531  0310                     u3428:	
  2532  0310  1683               	bsf	3,5	;RP0=1, select bank1
  2533  0311  1303               	bcf	3,6	;RP1=0, select bank1
  2534  0312  085C               	movf	(??_main+3)^(0+128),w
  2535  0313  1C03               	skipc
  2536  0314  0F5C               	incfsz	(??_main+3)^(0+128),w
  2537  0315  2B17               	goto	u3429
  2538  0316  2B1A               	goto	u3420
  2539  0317                     u3429:	
  2540  0317  1283               	bcf	3,5	;RP0=0, select bank2
  2541  0318  1703               	bsf	3,6	;RP1=1, select bank2
  2542  0319  02BE               	subwf	(main@temp+3)^(0+256),f
  2543  031A                     u3420:	
  2544  031A  1683               	bsf	3,5	;RP0=1, select bank1
  2545  031B  1303               	bcf	3,6	;RP1=0, select bank1
  2546  031C  1283               	bcf	3,5	;RP0=0, select bank2
  2547  031D  1703               	bsf	3,6	;RP1=1, select bank2
  2548  031E                     l3589:	
  2549                           
  2550                           ;main.c: 121: }
  2551                           ;main.c: 122: temp_int *= 14;
  2552  031E  3000               	movlw	0
  2553  031F  1283               	bcf	3,5	;RP0=0, select bank0
  2554  0320  1303               	bcf	3,6	;RP1=0, select bank0
  2555  0321  00B0               	movwf	___lmul@multiplier+3
  2556  0322  3000               	movlw	0
  2557  0323  00AF               	movwf	___lmul@multiplier+2
  2558  0324  3000               	movlw	0
  2559  0325  00AE               	movwf	___lmul@multiplier+1
  2560  0326  300E               	movlw	14
  2561  0327  00AD               	movwf	___lmul@multiplier
  2562  0328  1283               	bcf	3,5	;RP0=0, select bank2
  2563  0329  1703               	bsf	3,6	;RP1=1, select bank2
  2564  032A  084C               	movf	(main@temp_int+3)^(0+256),w
  2565  032B  1283               	bcf	3,5	;RP0=0, select bank0
  2566  032C  1303               	bcf	3,6	;RP1=0, select bank0
  2567  032D  00B4               	movwf	___lmul@multiplicand+3
  2568  032E  1283               	bcf	3,5	;RP0=0, select bank2
  2569  032F  1703               	bsf	3,6	;RP1=1, select bank2
  2570  0330  084B               	movf	(main@temp_int+2)^(0+256),w
  2571  0331  1283               	bcf	3,5	;RP0=0, select bank0
  2572  0332  1303               	bcf	3,6	;RP1=0, select bank0
  2573  0333  00B3               	movwf	___lmul@multiplicand+2
  2574  0334  1283               	bcf	3,5	;RP0=0, select bank2
  2575  0335  1703               	bsf	3,6	;RP1=1, select bank2
  2576  0336  084A               	movf	(main@temp_int+1)^(0+256),w
  2577  0337  1283               	bcf	3,5	;RP0=0, select bank0
  2578  0338  1303               	bcf	3,6	;RP1=0, select bank0
  2579  0339  00B2               	movwf	___lmul@multiplicand+1
  2580  033A  1283               	bcf	3,5	;RP0=0, select bank2
  2581  033B  1703               	bsf	3,6	;RP1=1, select bank2
  2582  033C  0849               	movf	main@temp_int^(0+256),w
  2583  033D  1283               	bcf	3,5	;RP0=0, select bank0
  2584  033E  1303               	bcf	3,6	;RP1=0, select bank0
  2585  033F  00B1               	movwf	___lmul@multiplicand
  2586  0340  120A  158A  20ED  120A  118A  	fcall	___lmul
  2587  0345  1283               	bcf	3,5	;RP0=0, select bank0
  2588  0346  1303               	bcf	3,6	;RP1=0, select bank0
  2589  0347  0830               	movf	?___lmul+3,w
  2590  0348  1283               	bcf	3,5	;RP0=0, select bank2
  2591  0349  1703               	bsf	3,6	;RP1=1, select bank2
  2592  034A  00CC               	movwf	(main@temp_int+3)^(0+256)
  2593  034B  1283               	bcf	3,5	;RP0=0, select bank0
  2594  034C  1303               	bcf	3,6	;RP1=0, select bank0
  2595  034D  082F               	movf	?___lmul+2,w
  2596  034E  1283               	bcf	3,5	;RP0=0, select bank2
  2597  034F  1703               	bsf	3,6	;RP1=1, select bank2
  2598  0350  00CB               	movwf	(main@temp_int+2)^(0+256)
  2599  0351  1283               	bcf	3,5	;RP0=0, select bank0
  2600  0352  1303               	bcf	3,6	;RP1=0, select bank0
  2601  0353  082E               	movf	?___lmul+1,w
  2602  0354  1283               	bcf	3,5	;RP0=0, select bank2
  2603  0355  1703               	bsf	3,6	;RP1=1, select bank2
  2604  0356  00CA               	movwf	(main@temp_int+1)^(0+256)
  2605  0357  1283               	bcf	3,5	;RP0=0, select bank0
  2606  0358  1303               	bcf	3,6	;RP1=0, select bank0
  2607  0359  082D               	movf	?___lmul,w
  2608  035A  1283               	bcf	3,5	;RP0=0, select bank2
  2609  035B  1703               	bsf	3,6	;RP1=1, select bank2
  2610  035C  00C9               	movwf	main@temp_int^(0+256)
  2611                           
  2612                           ;main.c: 124: temp_frac *= 14;
  2613  035D  3000               	movlw	0
  2614  035E  1283               	bcf	3,5	;RP0=0, select bank0
  2615  035F  1303               	bcf	3,6	;RP1=0, select bank0
  2616  0360  00B0               	movwf	___lmul@multiplier+3
  2617  0361  3000               	movlw	0
  2618  0362  00AF               	movwf	___lmul@multiplier+2
  2619  0363  3000               	movlw	0
  2620  0364  00AE               	movwf	___lmul@multiplier+1
  2621  0365  300E               	movlw	14
  2622  0366  00AD               	movwf	___lmul@multiplier
  2623  0367  1283               	bcf	3,5	;RP0=0, select bank2
  2624  0368  1703               	bsf	3,6	;RP1=1, select bank2
  2625  0369  0850               	movf	(main@temp_frac+3)^(0+256),w
  2626  036A  1283               	bcf	3,5	;RP0=0, select bank0
  2627  036B  1303               	bcf	3,6	;RP1=0, select bank0
  2628  036C  00B4               	movwf	___lmul@multiplicand+3
  2629  036D  1283               	bcf	3,5	;RP0=0, select bank2
  2630  036E  1703               	bsf	3,6	;RP1=1, select bank2
  2631  036F  084F               	movf	(main@temp_frac+2)^(0+256),w
  2632  0370  1283               	bcf	3,5	;RP0=0, select bank0
  2633  0371  1303               	bcf	3,6	;RP1=0, select bank0
  2634  0372  00B3               	movwf	___lmul@multiplicand+2
  2635  0373  1283               	bcf	3,5	;RP0=0, select bank2
  2636  0374  1703               	bsf	3,6	;RP1=1, select bank2
  2637  0375  084E               	movf	(main@temp_frac+1)^(0+256),w
  2638  0376  1283               	bcf	3,5	;RP0=0, select bank0
  2639  0377  1303               	bcf	3,6	;RP1=0, select bank0
  2640  0378  00B2               	movwf	___lmul@multiplicand+1
  2641  0379  1283               	bcf	3,5	;RP0=0, select bank2
  2642  037A  1703               	bsf	3,6	;RP1=1, select bank2
  2643  037B  084D               	movf	main@temp_frac^(0+256),w
  2644  037C  1283               	bcf	3,5	;RP0=0, select bank0
  2645  037D  1303               	bcf	3,6	;RP1=0, select bank0
  2646  037E  00B1               	movwf	___lmul@multiplicand
  2647  037F  120A  158A  20ED  120A  118A  	fcall	___lmul
  2648  0384  1283               	bcf	3,5	;RP0=0, select bank0
  2649  0385  1303               	bcf	3,6	;RP1=0, select bank0
  2650  0386  0830               	movf	?___lmul+3,w
  2651  0387  1283               	bcf	3,5	;RP0=0, select bank2
  2652  0388  1703               	bsf	3,6	;RP1=1, select bank2
  2653  0389  00D0               	movwf	(main@temp_frac+3)^(0+256)
  2654  038A  1283               	bcf	3,5	;RP0=0, select bank0
  2655  038B  1303               	bcf	3,6	;RP1=0, select bank0
  2656  038C  082F               	movf	?___lmul+2,w
  2657  038D  1283               	bcf	3,5	;RP0=0, select bank2
  2658  038E  1703               	bsf	3,6	;RP1=1, select bank2
  2659  038F  00CF               	movwf	(main@temp_frac+2)^(0+256)
  2660  0390  1283               	bcf	3,5	;RP0=0, select bank0
  2661  0391  1303               	bcf	3,6	;RP1=0, select bank0
  2662  0392  082E               	movf	?___lmul+1,w
  2663  0393  1283               	bcf	3,5	;RP0=0, select bank2
  2664  0394  1703               	bsf	3,6	;RP1=1, select bank2
  2665  0395  00CE               	movwf	(main@temp_frac+1)^(0+256)
  2666  0396  1283               	bcf	3,5	;RP0=0, select bank0
  2667  0397  1303               	bcf	3,6	;RP1=0, select bank0
  2668  0398  082D               	movf	?___lmul,w
  2669  0399  1283               	bcf	3,5	;RP0=0, select bank2
  2670  039A  1703               	bsf	3,6	;RP1=1, select bank2
  2671  039B  00CD               	movwf	main@temp_frac^(0+256)
  2672                           
  2673                           ;main.c: 125: calc_r_source_rms_volt = temp_int + (temp_frac/100);
  2674  039C  3000               	movlw	0
  2675  039D  1283               	bcf	3,5	;RP0=0, select bank0
  2676  039E  1303               	bcf	3,6	;RP1=0, select bank0
  2677  039F  00BD               	movwf	___lldiv@divisor+3
  2678  03A0  3000               	movlw	0
  2679  03A1  00BC               	movwf	___lldiv@divisor+2
  2680  03A2  3000               	movlw	0
  2681  03A3  00BB               	movwf	___lldiv@divisor+1
  2682  03A4  3064               	movlw	100
  2683  03A5  00BA               	movwf	___lldiv@divisor
  2684  03A6  1283               	bcf	3,5	;RP0=0, select bank2
  2685  03A7  1703               	bsf	3,6	;RP1=1, select bank2
  2686  03A8  0850               	movf	(main@temp_frac+3)^(0+256),w
  2687  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  2688  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  2689  03AB  00C1               	movwf	___lldiv@dividend+3
  2690  03AC  1283               	bcf	3,5	;RP0=0, select bank2
  2691  03AD  1703               	bsf	3,6	;RP1=1, select bank2
  2692  03AE  084F               	movf	(main@temp_frac+2)^(0+256),w
  2693  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  2694  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  2695  03B1  00C0               	movwf	___lldiv@dividend+2
  2696  03B2  1283               	bcf	3,5	;RP0=0, select bank2
  2697  03B3  1703               	bsf	3,6	;RP1=1, select bank2
  2698  03B4  084E               	movf	(main@temp_frac+1)^(0+256),w
  2699  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  2700  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  2701  03B7  00BF               	movwf	___lldiv@dividend+1
  2702  03B8  1283               	bcf	3,5	;RP0=0, select bank2
  2703  03B9  1703               	bsf	3,6	;RP1=1, select bank2
  2704  03BA  084D               	movf	main@temp_frac^(0+256),w
  2705  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  2706  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  2707  03BD  00BE               	movwf	___lldiv@dividend
  2708  03BE  120A  158A  217C  120A  118A  	fcall	___lldiv
  2709  03C3  1283               	bcf	3,5	;RP0=0, select bank2
  2710  03C4  1703               	bsf	3,6	;RP1=1, select bank2
  2711  03C5  0849               	movf	main@temp_int^(0+256),w
  2712  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  2713  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  2714  03C8  073A               	addwf	?___lldiv,w
  2715  03C9  1283               	bcf	3,5	;RP0=0, select bank2
  2716  03CA  1703               	bsf	3,6	;RP1=1, select bank2
  2717  03CB  00C7               	movwf	main@calc_r_source_rms_volt^(0+256)
  2718  03CC  084A               	movf	(main@temp_int+1)^(0+256),w
  2719  03CD  1803               	skipnc
  2720  03CE  0A4A               	incf	(main@temp_int+1)^(0+256),w
  2721  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  2722  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  2723  03D1  073B               	addwf	?___lldiv+1,w
  2724  03D2  1283               	bcf	3,5	;RP0=0, select bank2
  2725  03D3  1703               	bsf	3,6	;RP1=1, select bank2
  2726  03D4  00C8               	movwf	(main@calc_r_source_rms_volt+1)^(0+256)
  2727                           
  2728                           ;main.c: 127: to_disp.signed_val.val_in_bytes.value_byte[0] = calc_r_source_rms_volt;
  2729  03D5  0848               	movf	(main@calc_r_source_rms_volt+1)^(0+256),w
  2730  03D6  1683               	bsf	3,5	;RP0=1, select bank3
  2731  03D7  1703               	bsf	3,6	;RP1=1, select bank3
  2732  03D8  00C9               	movwf	(_to_disp+1)^(0+384)
  2733  03D9  1283               	bcf	3,5	;RP0=0, select bank2
  2734  03DA  1703               	bsf	3,6	;RP1=1, select bank2
  2735  03DB  0847               	movf	main@calc_r_source_rms_volt^(0+256),w
  2736  03DC  1683               	bsf	3,5	;RP0=1, select bank3
  2737  03DD  1703               	bsf	3,6	;RP1=1, select bank3
  2738  03DE  00C8               	movwf	_to_disp^(0+384)
  2739                           
  2740                           ;main.c: 128: UART_Transmit_Num(DISP_SIGN_NUM_DIGIT3, to_disp );
  2741  03DF  084B               	movf	(_to_disp+3)^(0+384),w
  2742  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  2743  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  2744  03E2  00CB               	movwf	UART_Transmit_Num@uart_disp_data_int+3
  2745  03E3  1683               	bsf	3,5	;RP0=1, select bank3
  2746  03E4  1703               	bsf	3,6	;RP1=1, select bank3
  2747  03E5  084A               	movf	(_to_disp+2)^(0+384),w
  2748  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  2749  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  2750  03E8  00CA               	movwf	UART_Transmit_Num@uart_disp_data_int+2
  2751  03E9  1683               	bsf	3,5	;RP0=1, select bank3
  2752  03EA  1703               	bsf	3,6	;RP1=1, select bank3
  2753  03EB  0849               	movf	(_to_disp+1)^(0+384),w
  2754  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  2755  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  2756  03EE  00C9               	movwf	UART_Transmit_Num@uart_disp_data_int+1
  2757  03EF  1683               	bsf	3,5	;RP0=1, select bank3
  2758  03F0  1703               	bsf	3,6	;RP1=1, select bank3
  2759  03F1  0848               	movf	_to_disp^(0+384),w
  2760  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2761  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  2762  03F4  00C8               	movwf	UART_Transmit_Num@uart_disp_data_int
  2763  03F5  3013               	movlw	19
  2764  03F6  120A  118A  2452  120A  118A  	fcall	_UART_Transmit_Num
  2765                           
  2766                           ;main.c: 129: UART_Transmit_Char(('\r'));
  2767  03FB  300D               	movlw	13
  2768  03FC  120A  158A  205A  120A  118A  	fcall	_UART_Transmit_Char
  2769                           
  2770                           ;main.c: 132: if(calc_r_source_rms_volt < 269)
  2771  0401  3001               	movlw	1
  2772  0402  1283               	bcf	3,5	;RP0=0, select bank2
  2773  0403  1703               	bsf	3,6	;RP1=1, select bank2
  2774  0404  0248               	subwf	(main@calc_r_source_rms_volt+1)^(0+256),w
  2775  0405  300D               	movlw	13
  2776  0406  1903               	skipnz
  2777  0407  0247               	subwf	main@calc_r_source_rms_volt^(0+256),w
  2778  0408  1803               	skipnc
  2779  0409  2C22               	goto	l3609
  2780                           
  2781                           ;main.c: 133: {
  2782                           ;main.c: 134: RB2 = (1);
  2783  040A  1283               	bcf	3,5	;RP0=0, select bank0
  2784  040B  1303               	bcf	3,6	;RP1=0, select bank0
  2785  040C  1506               	bsf	6,2	;volatile
  2786                           
  2787                           ;main.c: 135: RB3 = (0);
  2788  040D  1186               	bcf	6,3	;volatile
  2789                           
  2790                           ;main.c: 136: fault_occured_flag = ('y');
  2791  040E  3079               	movlw	121
  2792  040F  1683               	bsf	3,5	;RP0=1, select bank1
  2793  0410  1303               	bcf	3,6	;RP1=0, select bank1
  2794  0411  00D9               	movwf	??_main^(0+128)
  2795  0412  0859               	movf	??_main^(0+128),w
  2796  0413  1283               	bcf	3,5	;RP0=0, select bank2
  2797  0414  1703               	bsf	3,6	;RP1=1, select bank2
  2798  0415  00BA               	movwf	main@fault_occured_flag^(0+256)
  2799                           
  2800                           ;main.c: 137: UART_Transmit_Str("ERR: R RMS < MIN LIMIT \r");
  2801  0416  3033               	movlw	low (STR_7| (0+32768))
  2802  0417  1283               	bcf	3,5	;RP0=0, select bank0
  2803  0418  1303               	bcf	3,6	;RP1=0, select bank0
  2804  0419  00AE               	movwf	UART_Transmit_Str@transmit_str
  2805  041A  3091               	movlw	high (STR_7| (0+32768))
  2806  041B  00AF               	movwf	UART_Transmit_Str@transmit_str+1
  2807  041C  120A  158A  20C8  120A  118A  	fcall	_UART_Transmit_Str
  2808                           
  2809                           ;main.c: 138: }
  2810  0421  2883               	goto	l3539
  2811  0422                     l3609:	
  2812                           
  2813                           ;main.c: 139: else
  2814                           ;main.c: 140: {
  2815                           ;main.c: 143: if(calc_r_source_rms_volt > 325)
  2816  0422  3001               	movlw	1
  2817  0423  1283               	bcf	3,5	;RP0=0, select bank2
  2818  0424  1703               	bsf	3,6	;RP1=1, select bank2
  2819  0425  0248               	subwf	(main@calc_r_source_rms_volt+1)^(0+256),w
  2820  0426  3046               	movlw	70
  2821  0427  1903               	skipnz
  2822  0428  0247               	subwf	main@calc_r_source_rms_volt^(0+256),w
  2823  0429  1C03               	skipc
  2824  042A  2C43               	goto	l300
  2825                           
  2826                           ;main.c: 144: {
  2827                           ;main.c: 145: RB1 = (1);
  2828  042B  1283               	bcf	3,5	;RP0=0, select bank0
  2829  042C  1303               	bcf	3,6	;RP1=0, select bank0
  2830  042D  1486               	bsf	6,1	;volatile
  2831                           
  2832                           ;main.c: 146: RB3 = (0);
  2833  042E  1186               	bcf	6,3	;volatile
  2834                           
  2835                           ;main.c: 147: fault_occured_flag = ('y');
  2836  042F  3079               	movlw	121
  2837  0430  1683               	bsf	3,5	;RP0=1, select bank1
  2838  0431  1303               	bcf	3,6	;RP1=0, select bank1
  2839  0432  00D9               	movwf	??_main^(0+128)
  2840  0433  0859               	movf	??_main^(0+128),w
  2841  0434  1283               	bcf	3,5	;RP0=0, select bank2
  2842  0435  1703               	bsf	3,6	;RP1=1, select bank2
  2843  0436  00BA               	movwf	main@fault_occured_flag^(0+256)
  2844                           
  2845                           ;main.c: 148: UART_Transmit_Str("ERR: R RMS > MAX LIMIT \r");
  2846  0437  304C               	movlw	low (STR_8| (0+32768))
  2847  0438  1283               	bcf	3,5	;RP0=0, select bank0
  2848  0439  1303               	bcf	3,6	;RP1=0, select bank0
  2849  043A  00AE               	movwf	UART_Transmit_Str@transmit_str
  2850  043B  3091               	movlw	high (STR_8| (0+32768))
  2851  043C  00AF               	movwf	UART_Transmit_Str@transmit_str+1
  2852  043D  120A  158A  20C8  120A  118A  	fcall	_UART_Transmit_Str
  2853                           
  2854                           ;main.c: 149: }
  2855  0442  2883               	goto	l3539
  2856  0443                     l300:	
  2857                           
  2858                           ;main.c: 150: else
  2859                           ;main.c: 151: {
  2860                           ;main.c: 152: RB2 = (0);
  2861  0443  1283               	bcf	3,5	;RP0=0, select bank0
  2862  0444  1303               	bcf	3,6	;RP1=0, select bank0
  2863  0445  1106               	bcf	6,2	;volatile
  2864                           
  2865                           ;main.c: 153: RB1 = (0);
  2866  0446  1086               	bcf	6,1	;volatile
  2867                           
  2868                           ;main.c: 154: RB3 = (1);
  2869  0447  1586               	bsf	6,3	;volatile
  2870                           
  2871                           ;main.c: 155: UART_Transmit_Str("R RMS within LIMIT \r");
  2872  0448  3065               	movlw	low (STR_9| (0+32768))
  2873  0449  00AE               	movwf	UART_Transmit_Str@transmit_str
  2874  044A  3091               	movlw	high (STR_9| (0+32768))
  2875  044B  00AF               	movwf	UART_Transmit_Str@transmit_str+1
  2876  044C  120A  158A  20C8  120A  118A  	fcall	_UART_Transmit_Str
  2877  0451  2883               	goto	l3539
  2878  0452                     __end_of_main:	
  2879                           
  2880                           	psect	text1
  2881  08A5                     __ptext1:	
  2882 ;; *************** function _UART_Init *****************
  2883 ;; Defined at:
  2884 ;;		line 33 in file "uart.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;		None
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;		None
  2889 ;; Return value:  Size  Location     Type
  2890 ;;                  1    wreg      void 
  2891 ;; Registers used:
  2892 ;;		wreg
  2893 ;; Tracked objects:
  2894 ;;		On entry : 0/0
  2895 ;;		On exit  : 0/0
  2896 ;;		Unchanged: 0/0
  2897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2898 ;;      Params:         0       0       0       0       0
  2899 ;;      Locals:         0       0       0       0       0
  2900 ;;      Temps:          0       0       0       0       0
  2901 ;;      Totals:         0       0       0       0       0
  2902 ;;Total ram usage:        0 bytes
  2903 ;; Hardware stack levels used:    1
  2904 ;; Hardware stack levels required when called:    2
  2905 ;; This function calls:
  2906 ;;		Nothing
  2907 ;; This function is called by:
  2908 ;;		_main
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912                           
  2913                           ;psect for function _UART_Init
  2914  08A5                     _UART_Init:	
  2915                           
  2916                           ;uart.c: 36: SPBRG = 32;
  2917                           
  2918                           ;incstack = 0
  2919                           ; Regs used in _UART_Init: [wreg]
  2920  08A5  3020               	movlw	32
  2921  08A6  1683               	bsf	3,5	;RP0=1, select bank1
  2922  08A7  1303               	bcf	3,6	;RP1=0, select bank1
  2923  08A8  0099               	movwf	25	;volatile
  2924                           
  2925                           ;uart.c: 37: BRG16 = 0 ;
  2926  08A9  1683               	bsf	3,5	;RP0=1, select bank3
  2927  08AA  1703               	bsf	3,6	;RP1=1, select bank3
  2928  08AB  1187               	bcf	7,3	;volatile
  2929                           
  2930                           ;uart.c: 38: BRGH = 0;
  2931  08AC  1683               	bsf	3,5	;RP0=1, select bank1
  2932  08AD  1303               	bcf	3,6	;RP1=0, select bank1
  2933  08AE  1118               	bcf	24,2	;volatile
  2934                           
  2935                           ;uart.c: 39: SPEN = 1;
  2936  08AF  1283               	bcf	3,5	;RP0=0, select bank0
  2937  08B0  1303               	bcf	3,6	;RP1=0, select bank0
  2938  08B1  1798               	bsf	24,7	;volatile
  2939                           
  2940                           ;uart.c: 40: SYNC = 0;
  2941  08B2  1683               	bsf	3,5	;RP0=1, select bank1
  2942  08B3  1303               	bcf	3,6	;RP1=0, select bank1
  2943  08B4  1218               	bcf	24,4	;volatile
  2944                           
  2945                           ;uart.c: 41: CREN = 1;
  2946  08B5  1283               	bcf	3,5	;RP0=0, select bank0
  2947  08B6  1303               	bcf	3,6	;RP1=0, select bank0
  2948  08B7  1618               	bsf	24,4	;volatile
  2949                           
  2950                           ;uart.c: 42: TXEN = 0;
  2951  08B8  1683               	bsf	3,5	;RP0=1, select bank1
  2952  08B9  1303               	bcf	3,6	;RP1=0, select bank1
  2953  08BA  1298               	bcf	24,5	;volatile
  2954                           
  2955                           ;uart.c: 43: TXEN = 1;
  2956  08BB  1698               	bsf	24,5	;volatile
  2957                           
  2958                           ;uart.c: 45: SREN = 0;
  2959  08BC  1283               	bcf	3,5	;RP0=0, select bank0
  2960  08BD  1303               	bcf	3,6	;RP1=0, select bank0
  2961  08BE  1298               	bcf	24,5	;volatile
  2962                           
  2963                           ;uart.c: 46: TXIE = 0;
  2964  08BF  1683               	bsf	3,5	;RP0=1, select bank1
  2965  08C0  1303               	bcf	3,6	;RP1=0, select bank1
  2966  08C1  120C               	bcf	12,4	;volatile
  2967                           
  2968                           ;uart.c: 47: RCIE = 1;
  2969  08C2  168C               	bsf	12,5	;volatile
  2970                           
  2971                           ;uart.c: 48: TX9 = 0;
  2972  08C3  1318               	bcf	24,6	;volatile
  2973                           
  2974                           ;uart.c: 49: RX9 = 0;
  2975  08C4  1283               	bcf	3,5	;RP0=0, select bank0
  2976  08C5  1303               	bcf	3,6	;RP1=0, select bank0
  2977  08C6  1318               	bcf	24,6	;volatile
  2978  08C7  0008               	return
  2979  08C8                     __end_of_UART_Init:	
  2980                           
  2981                           	psect	text2
  2982  0D4D                     __ptext2:	
  2983 ;; *************** function _Encoded_To_Actual_Analog_Val_Calc *****************
  2984 ;; Defined at:
  2985 ;;		line 251 in file "adc.c"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;  adc_value       4    0[BANK1 ] unsigned long 
  2988 ;;  full_scale_a    4    4[BANK1 ] unsigned long 
  2989 ;;  min_analog_v    4    8[BANK1 ] unsigned long 
  2990 ;;  analog_val_i    1   12[BANK1 ] const PTR unsigned long 
  2991 ;;		 -> main@r_at_ch_peak_volt_int(4), 
  2992 ;;  analog_val_i    1   13[BANK1 ] const PTR unsigned long 
  2993 ;;		 -> main@r_at_ch_peak_volt_frac(4), 
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;  remainder_va    4   30[BANK1 ] unsigned long 
  2996 ;;  remainder_va    4   26[BANK1 ] unsigned long 
  2997 ;;  remainder_va    4   22[BANK1 ] unsigned long 
  2998 ;;  temp_remaind    4   18[BANK1 ] unsigned long 
  2999 ;;  temp_val_1      4   14[BANK1 ] unsigned long 
  3000 ;;  temp_val_100    4    0        unsigned long 
  3001 ;;  temp_val_100    4    0        unsigned long 
  3002 ;;  temp_val_10     4    0        unsigned long 
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  1    wreg      void 
  3005 ;; Registers used:
  3006 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3012 ;;      Params:         0       0      14       0       0
  3013 ;;      Locals:         0       0      20       0       0
  3014 ;;      Temps:          0       4       0       0       0
  3015 ;;      Totals:         0       4      34       0       0
  3016 ;;Total ram usage:       38 bytes
  3017 ;; Hardware stack levels used:    1
  3018 ;; Hardware stack levels required when called:    3
  3019 ;; This function calls:
  3020 ;;		___lldiv
  3021 ;;		___llmod
  3022 ;;		___lmul
  3023 ;; This function is called by:
  3024 ;;		_main
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           
  3029                           ;psect for function _Encoded_To_Actual_Analog_Val_Calc
  3030  0D4D                     _Encoded_To_Actual_Analog_Val_Calc:	
  3031                           
  3032                           ;adc.c: 254: unsigned long temp_val_1, temp_val_10, temp_val_100, temp_val_1000, remaind
      +                          er_val, temp_remainder_val, remainder_val_1, remainder_val_10;
  3033                           ;adc.c: 258: if(full_scale_analog_val < 65 )
  3034                           
  3035                           ;incstack = 0
  3036                           ; Regs used in _Encoded_To_Actual_Analog_Val_Calc: [wreg-fsr0h+status,2+status,0+pclath+
      +                          cstack]
  3037  0D4D  1683               	bsf	3,5	;RP0=1, select bank1
  3038  0D4E  1303               	bcf	3,6	;RP1=0, select bank1
  3039  0D4F  0827               	movf	(Encoded_To_Actual_Analog_Val_Calc@full_scale_analog_val+3)^(0+128),w
  3040  0D50  1D03               	btfss	3,2
  3041  0D51  2FEA               	goto	l3397
  3042  0D52  0826               	movf	(Encoded_To_Actual_Analog_Val_Calc@full_scale_analog_val+2)^(0+128),w
  3043  0D53  1D03               	btfss	3,2
  3044  0D54  2FEA               	goto	l3397
  3045  0D55  0825               	movf	(Encoded_To_Actual_Analog_Val_Calc@full_scale_analog_val+1)^(0+128),w
  3046  0D56  1D03               	btfss	3,2
  3047  0D57  2FEA               	goto	l3397
  3048  0D58  3041               	movlw	65
  3049  0D59  0224               	subwf	Encoded_To_Actual_Analog_Val_Calc@full_scale_analog_val^(0+128),w
  3050  0D5A  1D03               	skipz
  3051  0D5B  2D5C               	goto	u3243
  3052  0D5C                     u3243:	
  3053  0D5C  1803               	btfsc	3,0
  3054  0D5D  2FEA               	goto	l3397
  3055                           
  3056                           ;adc.c: 259: {
  3057                           ;adc.c: 260: temp_val_1 = ((full_scale_analog_val * adc_value) / (1023UL)) ;
  3058  0D5E  3000               	movlw	0
  3059  0D5F  1283               	bcf	3,5	;RP0=0, select bank0
  3060  0D60  1303               	bcf	3,6	;RP1=0, select bank0
  3061  0D61  00BD               	movwf	___lldiv@divisor+3
  3062  0D62  3000               	movlw	0
  3063  0D63  00BC               	movwf	___lldiv@divisor+2
  3064  0D64  3003               	movlw	3
  3065  0D65  00BB               	movwf	___lldiv@divisor+1
  3066  0D66  30FF               	movlw	255
  3067  0D67  00BA               	movwf	___lldiv@divisor
  3068  0D68  1683               	bsf	3,5	;RP0=1, select bank1
  3069  0D69  1303               	bcf	3,6	;RP1=0, select bank1
  3070  0D6A  0827               	movf	(Encoded_To_Actual_Analog_Val_Calc@full_scale_analog_val+3)^(0+128),w
  3071  0D6B  1283               	bcf	3,5	;RP0=0, select bank0
  3072  0D6C  1303               	bcf	3,6	;RP1=0, select bank0
  3073  0D6D  00B0               	movwf	___lmul@multiplier+3
  3074  0D6E  1683               	bsf	3,5	;RP0=1, select bank1
  3075  0D6F  1303               	bcf	3,6	;RP1=0, select bank1
  3076  0D70  0826               	movf	(Encoded_To_Actual_Analog_Val_Calc@full_scale_analog_val+2)^(0+128),w
  3077  0D71  1283               	bcf	3,5	;RP0=0, select bank0
  3078  0D72  1303               	bcf	3,6	;RP1=0, select bank0
  3079  0D73  00AF               	movwf	___lmul@multiplier+2
  3080  0D74  1683               	bsf	3,5	;RP0=1, select bank1
  3081  0D75  1303               	bcf	3,6	;RP1=0, select bank1
  3082  0D76  0825               	movf	(Encoded_To_Actual_Analog_Val_Calc@full_scale_analog_val+1)^(0+128),w
  3083  0D77  1283               	bcf	3,5	;RP0=0, select bank0
  3084  0D78  1303               	bcf	3,6	;RP1=0, select bank0
  3085  0D79  00AE               	movwf	___lmul@multiplier+1
  3086  0D7A  1683               	bsf	3,5	;RP0=1, select bank1
  3087  0D7B  1303               	bcf	3,6	;RP1=0, select bank1
  3088  0D7C  0824               	movf	Encoded_To_Actual_Analog_Val_Calc@full_scale_analog_val^(0+128),w
  3089  0D7D  1283               	bcf	3,5	;RP0=0, select bank0
  3090  0D7E  1303               	bcf	3,6	;RP1=0, select bank0
  3091  0D7F  00AD               	movwf	___lmul@multiplier
  3092  0D80  1683               	bsf	3,5	;RP0=1, select bank1
  3093  0D81  1303               	bcf	3,6	;RP1=0, select bank1
  3094  0D82  0823               	movf	(Encoded_To_Actual_Analog_Val_Calc@adc_value+3)^(0+128),w
  3095  0D83  1283               	bcf	3,5	;RP0=0, select bank0
  3096  0D84  1303               	bcf	3,6	;RP1=0, select bank0
  3097  0D85  00B4               	movwf	___lmul@multiplicand+3
  3098  0D86  1683               	bsf	3,5	;RP0=1, select bank1
  3099  0D87  1303               	bcf	3,6	;RP1=0, select bank1
  3100  0D88  0822               	movf	(Encoded_To_Actual_Analog_Val_Calc@adc_value+2)^(0+128),w
  3101  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  3102  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  3103  0D8B  00B3               	movwf	___lmul@multiplicand+2
  3104  0D8C  1683               	bsf	3,5	;RP0=1, select bank1
  3105  0D8D  1303               	bcf	3,6	;RP1=0, select bank1
  3106  0D8E  0821               	movf	(Encoded_To_Actual_Analog_Val_Calc@adc_value+1)^(0+128),w
  3107  0D8F  1283               	bcf	3,5	;RP0=0, select bank0
  3108  0D90  1303               	bcf	3,6	;RP1=0, select bank0
  3109  0D91  00B2               	movwf	___lmul@multiplicand+1
  3110  0D92  1683               	bsf	3,5	;RP0=1, select bank1
  3111  0D93  1303               	bcf	3,6	;RP1=0, select bank1
  3112  0D94  0820               	movf	Encoded_To_Actual_Analog_Val_Calc@adc_value^(0+128),w
  3113  0D95  1283               	bcf	3,5	;RP0=0, select bank0
  3114  0D96  1303               	bcf	3,6	;RP1=0, select bank0
  3115  0D97  00B1               	movwf	___lmul@multiplicand
  3116  0D98  120A  158A  20ED  120A  158A  	fcall	___lmul
  3117  0D9D  1283               	bcf	3,5	;RP0=0, select bank0
  3118  0D9E  1303               	bcf	3,6	;RP1=0, select bank0
  3119  0D9F  0830               	movf	?___lmul+3,w
  3120  0DA0  00C1               	movwf	___lldiv@dividend+3
  3121  0DA1  082F               	movf	?___lmul+2,w
  3122  0DA2  00C0               	movwf	___lldiv@dividend+2
  3123  0DA3  082E               	movf	?___lmul+1,w
  3124  0DA4  00BF               	movwf	___lldiv@dividend+1
  3125  0DA5  082D               	movf	?___lmul,w
  3126  0DA6  00BE               	movwf	___lldiv@dividend
  3127  0DA7  120A  158A  217C  120A  158A  	fcall	___lldiv
  3128  0DAC  1283               	bcf	3,5	;RP0=0, select bank0
  3129  0DAD  1303               	bcf	3,6	;RP1=0, select bank0
  3130  0DAE  083D               	movf	?___lldiv+3,w
  3131  0DAF  1683               	bsf	3,5	;RP0=1, select bank1
  3132  0DB0  1303               	bcf	3,6	;RP1=0, select bank1
  3133  0DB1  00B1               	movwf	(Encoded_To_Actual_Analog_Val_Calc@temp_val_1+3)^(0+128)
  3134  0DB2  1283               	bcf	3,5	;RP0=0, select bank0
  3135  0DB3  1303               	bcf	3,6	;RP1=0, select bank0
  3136  0DB4  083C               	movf	?___lldiv+2,w
  3137  0DB5  1683               	bsf	3,5	;RP0=1, select bank1
  3138  0DB6  1303               	bcf	3,6	;RP1=0, select bank1
  3139  0DB7  00B0               	movwf	(Encoded_To_Actual_Analog_Val_Calc@temp_val_1+2)^(0+128)
  3140  0DB8  1283               	bcf	3,5	;RP0=0, select bank0
  3141  0DB9  1303               	bcf	3,6	;RP1=0, select bank0
  3142  0DBA  083B               	movf	?___lldiv+1,w
  3143  0DBB  1683               	bsf	3,5	;RP0=1, select bank1
  3144  0DBC  1303               	bcf	3,6	;RP1=0, select bank1
  3145  0DBD  00AF               	movwf	(Encoded_To_Actual_Analog_Val_Calc@temp_val_1+1)^(0+128)
  3146  0DBE  1283               	bcf	3,5	;RP0=0, select bank0
  3147  0DBF  1303               	bcf	3,6	;RP1=0, select bank0
  3148  0DC0  083A               	movf	?___lldiv,w
  3149  0DC1  1683               	bsf	3,5	;RP0=1, select bank1
  3150  0DC2  1303               	bcf	3,6	;RP1=0, select bank1
  3151  0DC3  00AE               	movwf	Encoded_To_Actual_Analog_Val_Calc@temp_val_1^(0+128)
  3152                           
  3153                           ;adc.c: 261: *analog_val_in_digital_int = temp_val_1 + min_analog_val;
  3154  0DC4  082E               	movf	Encoded_To_Actual_Analog_Val_Calc@temp_val_1^(0+128),w
  3155  0DC5  0728               	addwf	Encoded_To_Actual_Analog_Val_Calc@min_analog_val^(0+128),w
  3156  0DC6  1283               	bcf	3,5	;RP0=0, select bank0
  3157  0DC7  1303               	bcf	3,6	;RP1=0, select bank0
  3158  0DC8  00C8               	movwf	??_Encoded_To_Actual_Analog_Val_Calc
  3159  0DC9  3000               	movlw	0
  3160  0DCA  1803               	skipnc
  3161  0DCB  3001               	movlw	1
  3162  0DCC  1683               	bsf	3,5	;RP0=1, select bank1
  3163  0DCD  1303               	bcf	3,6	;RP1=0, select bank1
  3164  0DCE  072F               	addwf	(Encoded_To_Actual_Analog_Val_Calc@temp_val_1+1)^(0+128),w
  3165  0DCF  1283               	bcf	3,5	;RP0=0, select bank0
  3166  0DD0  1303               	bcf	3,6	;RP1=0, select bank0
  3167  0DD1  01CA               	clrf	??_Encoded_To_Actual_Analog_Val_Calc+2
  3168  0DD2  1803               	skipnc
  3169  0DD3  0ACA               	incf	??_Encoded_To_Actual_Analog_Val_Calc+2,f
  3170  0DD4  1683               	bsf	3,5	;RP0=1, select bank1
  3171  0DD5  1303               	bcf	3,6	;RP1=0, select bank1
  3172  0DD6  0729               	addwf	(Encoded_To_Actual_Analog_Val_Calc@min_analog_val+1)^(0+128),w
  3173  0DD7  1283               	bcf	3,5	;RP0=0, select bank0
  3174  0DD8  1303               	bcf	3,6	;RP1=0, select bank0
  3175  0DD9  00C9               	movwf	??_Encoded_To_Actual_Analog_Val_Calc+1
  3176  0DDA  1803               	skipnc
  3177  0DDB  0ACA               	incf	??_Encoded_To_Actual_Analog_Val_Calc+2,f
  3178  0DDC  1683               	bsf	3,5	;RP0=1, select bank1
  3179  0DDD  1303               	bcf	3,6	;RP1=0, select bank1
  3180  0DDE  0830               	movf	(Encoded_To_Actual_Analog_Val_Calc@temp_val_1+2)^(0+128),w
  3181  0DDF  1283               	bcf	3,5	;RP0=0, select bank0
  3182  0DE0  1303               	bcf	3,6	;RP1=0, select bank0
  3183  0DE1  074A               	addwf	??_Encoded_To_Actual_Analog_Val_Calc+2,w
  3184  0DE2  01CB               	clrf	??_Encoded_To_Actual_Analog_Val_Calc+3
  3185  0DE3  1803               	skipnc
  3186  0DE4  0ACB               	incf	??_Encoded_To_Actual_Analog_Val_Calc+3,f
  3187  0DE5  1683               	bsf	3,5	;RP0=1, select bank1
  3188  0DE6  1303               	bcf	3,6	;RP1=0, select bank1
  3189  0DE7  072A               	addwf	(Encoded_To_Actual_Analog_Val_Calc@min_analog_val+2)^(0+128),w
  3190  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  3191  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  3192  0DEA  00CA               	movwf	??_Encoded_To_Actual_Analog_Val_Calc+2
  3193  0DEB  1803               	skipnc
  3194  0DEC  0ACB               	incf	??_Encoded_To_Actual_Analog_Val_Calc+3,f
  3195  0DED  1683               	bsf	3,5	;RP0=1, select bank1
  3196  0DEE  1303               	bcf	3,6	;RP1=0, select bank1
  3197  0DEF  0831               	movf	(Encoded_To_Actual_Analog_Val_Calc@temp_val_1+3)^(0+128),w
  3198  0DF0  1283               	bcf	3,5	;RP0=0, select bank0
  3199  0DF1  1303               	bcf	3,6	;RP1=0, select bank0
  3200  0DF2  074B               	addwf	??_Encoded_To_Actual_Analog_Val_Calc+3,w
  3201  0DF3  1683               	bsf	3,5	;RP0=1, select bank1
  3202  0DF4  1303               	bcf	3,6	;RP1=0, select bank1
  3203  0DF5  072B               	addwf	(Encoded_To_Actual_Analog_Val_Calc@min_analog_val+3)^(0+128),w
  3204  0DF6  1283               	bcf	3,5	;RP0=0, select bank0
  3205  0DF7  1303               	bcf	3,6	;RP1=0, select bank0
  3206  0DF8  00CB               	movwf	??_Encoded_To_Actual_Analog_Val_Calc+3
  3207  0DF9  1683               	bsf	3,5	;RP0=1, select bank1
  3208  0DFA  1303               	bcf	3,6	;RP1=0, select bank1
  3209  0DFB  082C               	movf	Encoded_To_Actual_Analog_Val_Calc@analog_val_in_digital_int^(0+128),w
  3210  0DFC  0084               	movwf	4
  3211  0DFD  1283               	bcf	3,5	;RP0=0, select bank0
  3212  0DFE  1303               	bcf	3,6	;RP1=0, select bank0
  3213  0DFF  0848               	movf	??_Encoded_To_Actual_Analog_Val_Calc,w
  3214  0E00  1783               	bsf	3,7	;select IRP bank2
  3215  0E01  0080               	movwf	0
  3216  0E02  0A84               	incf	4,f
  3217  0E03  0849               	movf	??_Encoded_To_Actual_Analog_Val_Calc+1,w
  3218  0E04  0080               	movwf	0
  3219  0E05  0A84               	incf	4,f
  3220  0E06  084A               	movf	??_Encoded_To_Actual_Analog_Val_Calc+2,w
  3221  0E07  0080               	movwf	0
  3222  0E08  0A84               	incf	4,f
  3223  0E09  084B               	movf	??_Encoded_To_Actual_Analog_Val_Calc+3,w
  3224  0E0A  0080               	movwf	0
  3225                           
  3226                           ;adc.c: 262: remainder_val = (full_scale_analog_val * adc_value) % (1023UL);
  3227  0E0B  3000               	movlw	0
  3228  0E0C  00BD               	movwf	___llmod@divisor+3
  3229  0E0D  3000               	movlw	0
  3230  0E0E  00BC               	movwf	___llmod@divisor+2
  3231  0E0F  3003               	movlw	3
  3232  0E10  00BB               	movwf	___llmod@divisor+1
  3233  0E11  30FF               	movlw	255
  3234  0E12  00BA               	movwf	___llmod@divisor
  3235  0E13  1683               	bsf	3,5	;RP0=1, select bank1
  3236  0E14  1303               	bcf	3,6	;RP1=0, select bank1
  3237  0E15  0827               	movf	(Encoded_To_Actual_Analog_Val_Calc@full_scale_analog_val+3)^(0+128),w
  3238  0E16  1283               	bcf	3,5	;RP0=0, select bank0
  3239  0E17  1303               	bcf	3,6	;RP1=0, select bank0
  3240  0E18  00B0               	movwf	___lmul@multiplier+3
  3241  0E19  1683               	bsf	3,5	;RP0=1, select bank1
  3242  0E1A  1303               	bcf	3,6	;RP1=0, select bank1
  3243  0E1B  0826               	movf	(Encoded_To_Actual_Analog_Val_Calc@full_scale_analog_val+2)^(0+128),w
  3244  0E1C  1283               	bcf	3,5	;RP0=0, select bank0
  3245  0E1D  1303               	bcf	3,6	;RP1=0, select bank0
  3246  0E1E  00AF               	movwf	___lmul@multiplier+2
  3247  0E1F  1683               	bsf	3,5	;RP0=1, select bank1
  3248  0E20  1303               	bcf	3,6	;RP1=0, select bank1
  3249  0E21  0825               	movf	(Encoded_To_Actual_Analog_Val_Calc@full_scale_analog_val+1)^(0+128),w
  3250  0E22  1283               	bcf	3,5	;RP0=0, select bank0
  3251  0E23  1303               	bcf	3,6	;RP1=0, select bank0
  3252  0E24  00AE               	movwf	___lmul@multiplier+1
  3253  0E25  1683               	bsf	3,5	;RP0=1, select bank1
  3254  0E26  1303               	bcf	3,6	;RP1=0, select bank1
  3255  0E27  0824               	movf	Encoded_To_Actual_Analog_Val_Calc@full_scale_analog_val^(0+128),w
  3256  0E28  1283               	bcf	3,5	;RP0=0, select bank0
  3257  0E29  1303               	bcf	3,6	;RP1=0, select bank0
  3258  0E2A  00AD               	movwf	___lmul@multiplier
  3259  0E2B  1683               	bsf	3,5	;RP0=1, select bank1
  3260  0E2C  1303               	bcf	3,6	;RP1=0, select bank1
  3261  0E2D  0823               	movf	(Encoded_To_Actual_Analog_Val_Calc@adc_value+3)^(0+128),w
  3262  0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  3263  0E2F  1303               	bcf	3,6	;RP1=0, select bank0
  3264  0E30  00B4               	movwf	___lmul@multiplicand+3
  3265  0E31  1683               	bsf	3,5	;RP0=1, select bank1
  3266  0E32  1303               	bcf	3,6	;RP1=0, select bank1
  3267  0E33  0822               	movf	(Encoded_To_Actual_Analog_Val_Calc@adc_value+2)^(0+128),w
  3268  0E34  1283               	bcf	3,5	;RP0=0, select bank0
  3269  0E35  1303               	bcf	3,6	;RP1=0, select bank0
  3270  0E36  00B3               	movwf	___lmul@multiplicand+2
  3271  0E37  1683               	bsf	3,5	;RP0=1, select bank1
  3272  0E38  1303               	bcf	3,6	;RP1=0, select bank1
  3273  0E39  0821               	movf	(Encoded_To_Actual_Analog_Val_Calc@adc_value+1)^(0+128),w
  3274  0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  3275  0E3B  1303               	bcf	3,6	;RP1=0, select bank0
  3276  0E3C  00B2               	movwf	___lmul@multiplicand+1
  3277  0E3D  1683               	bsf	3,5	;RP0=1, select bank1
  3278  0E3E  1303               	bcf	3,6	;RP1=0, select bank1
  3279  0E3F  0820               	movf	Encoded_To_Actual_Analog_Val_Calc@adc_value^(0+128),w
  3280  0E40  1283               	bcf	3,5	;RP0=0, select bank0
  3281  0E41  1303               	bcf	3,6	;RP1=0, select bank0
  3282  0E42  00B1               	movwf	___lmul@multiplicand
  3283  0E43  120A  158A  20ED  120A  158A  	fcall	___lmul
  3284  0E48  1283               	bcf	3,5	;RP0=0, select bank0
  3285  0E49  1303               	bcf	3,6	;RP1=0, select bank0
  3286  0E4A  0830               	movf	?___lmul+3,w
  3287  0E4B  00C1               	movwf	___llmod@dividend+3
  3288  0E4C  082F               	movf	?___lmul+2,w
  3289  0E4D  00C0               	movwf	___llmod@dividend+2
  3290  0E4E  082E               	movf	?___lmul+1,w
  3291  0E4F  00BF               	movwf	___llmod@dividend+1
  3292  0E50  082D               	movf	?___lmul,w
  3293  0E51  00BE               	movwf	___llmod@dividend
  3294  0E52  120A  158A  212E  120A  158A  	fcall	___llmod
  3295  0E57  1283               	bcf	3,5	;RP0=0, select bank0
  3296  0E58  1303               	bcf	3,6	;RP1=0, select bank0
  3297  0E59  083D               	movf	?___llmod+3,w
  3298  0E5A  1683               	bsf	3,5	;RP0=1, select bank1
  3299  0E5B  1303               	bcf	3,6	;RP1=0, select bank1
  3300  0E5C  00C1               	movwf	(Encoded_To_Actual_Analog_Val_Calc@remainder_val+3)^(0+128)
  3301  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  3302  0E5E  1303               	bcf	3,6	;RP1=0, select bank0
  3303  0E5F  083C               	movf	?___llmod+2,w
  3304  0E60  1683               	bsf	3,5	;RP0=1, select bank1
  3305  0E61  1303               	bcf	3,6	;RP1=0, select bank1
  3306  0E62  00C0               	movwf	(Encoded_To_Actual_Analog_Val_Calc@remainder_val+2)^(0+128)
  3307  0E63  1283               	bcf	3,5	;RP0=0, select bank0
  3308  0E64  1303               	bcf	3,6	;RP1=0, select bank0
  3309  0E65  083B               	movf	?___llmod+1,w
  3310  0E66  1683               	bsf	3,5	;RP0=1, select bank1
  3311  0E67  1303               	bcf	3,6	;RP1=0, select bank1
  3312  0E68  00BF               	movwf	(Encoded_To_Actual_Analog_Val_Calc@remainder_val+1)^(0+128)
  3313  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  3314  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  3315  0E6B  083A               	movf	?___llmod,w
  3316  0E6C  1683               	bsf	3,5	;RP0=1, select bank1
  3317  0E6D  1303               	bcf	3,6	;RP1=0, select bank1
  3318  0E6E  00BE               	movwf	Encoded_To_Actual_Analog_Val_Calc@remainder_val^(0+128)
  3319                           
  3320                           ;adc.c: 263: remainder_val_1 = ((remainder_val * 10) / (1023UL));
  3321  0E6F  3000               	movlw	0
  3322  0E70  1283               	bcf	3,5	;RP0=0, select bank0
  3323  0E71  1303               	bcf	3,6	;RP1=0, select bank0
  3324  0E72  00BD               	movwf	___lldiv@divisor+3
  3325  0E73  3000               	movlw	0
  3326  0E74  00BC               	movwf	___lldiv@divisor+2
  3327  0E75  3003               	movlw	3
  3328  0E76  00BB               	movwf	___lldiv@divisor+1
  3329  0E77  30FF               	movlw	255
  3330  0E78  00BA               	movwf	___lldiv@divisor
  3331  0E79  1683               	bsf	3,5	;RP0=1, select bank1
  3332  0E7A  1303               	bcf	3,6	;RP1=0, select bank1
  3333  0E7B  0841               	movf	(Encoded_To_Actual_Analog_Val_Calc@remainder_val+3)^(0+128),w
  3334  0E7C  1283               	bcf	3,5	;RP0=0, select bank0
  3335  0E7D  1303               	bcf	3,6	;RP1=0, select bank0
  3336  0E7E  00B0               	movwf	___lmul@multiplier+3
  3337  0E7F  1683               	bsf	3,5	;RP0=1, select bank1
  3338  0E80  1303               	bcf	3,6	;RP1=0, select bank1
  3339  0E81  0840               	movf	(Encoded_To_Actual_Analog_Val_Calc@remainder_val+2)^(0+128),w
  3340  0E82  1283               	bcf	3,5	;RP0=0, select bank0
  3341  0E83  1303               	bcf	3,6	;RP1=0, select bank0
  3342  0E84  00AF               	movwf	___lmul@multiplier+2
  3343  0E85  1683               	bsf	3,5	;RP0=1, select bank1
  3344  0E86  1303               	bcf	3,6	;RP1=0, select bank1
  3345  0E87  083F               	movf	(Encoded_To_Actual_Analog_Val_Calc@remainder_val+1)^(0+128),w
  3346  0E88  1283               	bcf	3,5	;RP0=0, select bank0
  3347  0E89  1303               	bcf	3,6	;RP1=0, select bank0
  3348  0E8A  00AE               	movwf	___lmul@multiplier+1
  3349  0E8B  1683               	bsf	3,5	;RP0=1, select bank1
  3350  0E8C  1303               	bcf	3,6	;RP1=0, select bank1
  3351  0E8D  083E               	movf	Encoded_To_Actual_Analog_Val_Calc@remainder_val^(0+128),w
  3352  0E8E  1283               	bcf	3,5	;RP0=0, select bank0
  3353  0E8F  1303               	bcf	3,6	;RP1=0, select bank0
  3354  0E90  00AD               	movwf	___lmul@multiplier
  3355  0E91  3000               	movlw	0
  3356  0E92  00B4               	movwf	___lmul@multiplicand+3
  3357  0E93  3000               	movlw	0
  3358  0E94  00B3               	movwf	___lmul@multiplicand+2
  3359  0E95  3000               	movlw	0
  3360  0E96  00B2               	movwf	___lmul@multiplicand+1
  3361  0E97  300A               	movlw	10
  3362  0E98  00B1               	movwf	___lmul@multiplicand
  3363  0E99  120A  158A  20ED  120A  158A  	fcall	___lmul
  3364  0E9E  1283               	bcf	3,5	;RP0=0, select bank0
  3365  0E9F  1303               	bcf	3,6	;RP1=0, select bank0
  3366  0EA0  0830               	movf	?___lmul+3,w
  3367  0EA1  00C1               	movwf	___lldiv@dividend+3
  3368  0EA2  082F               	movf	?___lmul+2,w
  3369  0EA3  00C0               	movwf	___lldiv@dividend+2
  3370  0EA4  082E               	movf	?___lmul+1,w
  3371  0EA5  00BF               	movwf	___lldiv@dividend+1
  3372  0EA6  082D               	movf	?___lmul,w
  3373  0EA7  00BE               	movwf	___lldiv@dividend
  3374  0EA8  120A  158A  217C  120A  158A  	fcall	___lldiv
  3375  0EAD  1283               	bcf	3,5	;RP0=0, select bank0
  3376  0EAE  1303               	bcf	3,6	;RP1=0, select bank0
  3377  0EAF  083D               	movf	?___lldiv+3,w
  3378  0EB0  1683               	bsf	3,5	;RP0=1, select bank1
  3379  0EB1  1303               	bcf	3,6	;RP1=0, select bank1
  3380  0EB2  00B9               	movwf	(Encoded_To_Actual_Analog_Val_Calc@remainder_val_1+3)^(0+128)
  3381  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  3382  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  3383  0EB5  083C               	movf	?___lldiv+2,w
  3384  0EB6  1683               	bsf	3,5	;RP0=1, select bank1
  3385  0EB7  1303               	bcf	3,6	;RP1=0, select bank1
  3386  0EB8  00B8               	movwf	(Encoded_To_Actual_Analog_Val_Calc@remainder_val_1+2)^(0+128)
  3387  0EB9  1283               	bcf	3,5	;RP0=0, select bank0
  3388  0EBA  1303               	bcf	3,6	;RP1=0, select bank0
  3389  0EBB  083B               	movf	?___lldiv+1,w
  3390  0EBC  1683               	bsf	3,5	;RP0=1, select bank1
  3391  0EBD  1303               	bcf	3,6	;RP1=0, select bank1
  3392  0EBE  00B7               	movwf	(Encoded_To_Actual_Analog_Val_Calc@remainder_val_1+1)^(0+128)
  3393  0EBF  1283               	bcf	3,5	;RP0=0, select bank0
  3394  0EC0  1303               	bcf	3,6	;RP1=0, select bank0
  3395  0EC1  083A               	movf	?___lldiv,w
  3396  0EC2  1683               	bsf	3,5	;RP0=1, select bank1
  3397  0EC3  1303               	bcf	3,6	;RP1=0, select bank1
  3398  0EC4  00B6               	movwf	Encoded_To_Actual_Analog_Val_Calc@remainder_val_1^(0+128)
  3399                           
  3400                           ;adc.c: 264: temp_remainder_val = ((remainder_val * 10) % (1023UL));
  3401  0EC5  3000               	movlw	0
  3402  0EC6  1283               	bcf	3,5	;RP0=0, select bank0
  3403  0EC7  1303               	bcf	3,6	;RP1=0, select bank0
  3404  0EC8  00BD               	movwf	___llmod@divisor+3
  3405  0EC9  3000               	movlw	0
  3406  0ECA  00BC               	movwf	___llmod@divisor+2
  3407  0ECB  3003               	movlw	3
  3408  0ECC  00BB               	movwf	___llmod@divisor+1
  3409  0ECD  30FF               	movlw	255
  3410  0ECE  00BA               	movwf	___llmod@divisor
  3411  0ECF  1683               	bsf	3,5	;RP0=1, select bank1
  3412  0ED0  1303               	bcf	3,6	;RP1=0, select bank1
  3413  0ED1  0841               	movf	(Encoded_To_Actual_Analog_Val_Calc@remainder_val+3)^(0+128),w
  3414  0ED2  1283               	bcf	3,5	;RP0=0, select bank0
  3415  0ED3  1303               	bcf	3,6	;RP1=0, select bank0
  3416  0ED4  00B0               	movwf	___lmul@multiplier+3
  3417  0ED5  1683               	bsf	3,5	;RP0=1, select bank1
  3418  0ED6  1303               	bcf	3,6	;RP1=0, select bank1
  3419  0ED7  0840               	movf	(Encoded_To_Actual_Analog_Val_Calc@remainder_val+2)^(0+128),w
  3420  0ED8  1283               	bcf	3,5	;RP0=0, select bank0
  3421  0ED9  1303               	bcf	3,6	;RP1=0, select bank0
  3422  0EDA  00AF               	movwf	___lmul@multiplier+2
  3423  0EDB  1683               	bsf	3,5	;RP0=1, select bank1
  3424  0EDC  1303               	bcf	3,6	;RP1=0, select bank1
  3425  0EDD  083F               	movf	(Encoded_To_Actual_Analog_Val_Calc@remainder_val+1)^(0+128),w
  3426  0EDE  1283               	bcf	3,5	;RP0=0, select bank0
  3427  0EDF  1303               	bcf	3,6	;RP1=0, select bank0
  3428  0EE0  00AE               	movwf	___lmul@multiplier+1
  3429  0EE1  1683               	bsf	3,5	;RP0=1, select bank1
  3430  0EE2  1303               	bcf	3,6	;RP1=0, select bank1
  3431  0EE3  083E               	movf	Encoded_To_Actual_Analog_Val_Calc@remainder_val^(0+128),w
  3432  0EE4  1283               	bcf	3,5	;RP0=0, select bank0
  3433  0EE5  1303               	bcf	3,6	;RP1=0, select bank0
  3434  0EE6  00AD               	movwf	___lmul@multiplier
  3435  0EE7  3000               	movlw	0
  3436  0EE8  00B4               	movwf	___lmul@multiplicand+3
  3437  0EE9  3000               	movlw	0
  3438  0EEA  00B3               	movwf	___lmul@multiplicand+2
  3439  0EEB  3000               	movlw	0
  3440  0EEC  00B2               	movwf	___lmul@multiplicand+1
  3441  0EED  300A               	movlw	10
  3442  0EEE  00B1               	movwf	___lmul@multiplicand
  3443  0EEF  120A  158A  20ED  120A  158A  	fcall	___lmul
  3444  0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  3445  0EF5  1303               	bcf	3,6	;RP1=0, select bank0
  3446  0EF6  0830               	movf	?___lmul+3,w
  3447  0EF7  00C1               	movwf	___llmod@dividend+3
  3448  0EF8  082F               	movf	?___lmul+2,w
  3449  0EF9  00C0               	movwf	___llmod@dividend+2
  3450  0EFA  082E               	movf	?___lmul+1,w
  3451  0EFB  00BF               	movwf	___llmod@dividend+1
  3452  0EFC  082D               	movf	?___lmul,w
  3453  0EFD  00BE               	movwf	___llmod@dividend
  3454  0EFE  120A  158A  212E  120A  158A  	fcall	___llmod
  3455  0F03  1283               	bcf	3,5	;RP0=0, select bank0
  3456  0F04  1303               	bcf	3,6	;RP1=0, select bank0
  3457  0F05  083D               	movf	?___llmod+3,w
  3458  0F06  1683               	bsf	3,5	;RP0=1, select bank1
  3459  0F07  1303               	bcf	3,6	;RP1=0, select bank1
  3460  0F08  00B5               	movwf	(Encoded_To_Actual_Analog_Val_Calc@temp_remainder_val+3)^(0+128)
  3461  0F09  1283               	bcf	3,5	;RP0=0, select bank0
  3462  0F0A  1303               	bcf	3,6	;RP1=0, select bank0
  3463  0F0B  083C               	movf	?___llmod+2,w
  3464  0F0C  1683               	bsf	3,5	;RP0=1, select bank1
  3465  0F0D  1303               	bcf	3,6	;RP1=0, select bank1
  3466  0F0E  00B4               	movwf	(Encoded_To_Actual_Analog_Val_Calc@temp_remainder_val+2)^(0+128)
  3467  0F0F  1283               	bcf	3,5	;RP0=0, select bank0
  3468  0F10  1303               	bcf	3,6	;RP1=0, select bank0
  3469  0F11  083B               	movf	?___llmod+1,w
  3470  0F12  1683               	bsf	3,5	;RP0=1, select bank1
  3471  0F13  1303               	bcf	3,6	;RP1=0, select bank1
  3472  0F14  00B3               	movwf	(Encoded_To_Actual_Analog_Val_Calc@temp_remainder_val+1)^(0+128)
  3473  0F15  1283               	bcf	3,5	;RP0=0, select bank0
  3474  0F16  1303               	bcf	3,6	;RP1=0, select bank0
  3475  0F17  083A               	movf	?___llmod,w
  3476  0F18  1683               	bsf	3,5	;RP0=1, select bank1
  3477  0F19  1303               	bcf	3,6	;RP1=0, select bank1
  3478  0F1A  00B2               	movwf	Encoded_To_Actual_Analog_Val_Calc@temp_remainder_val^(0+128)
  3479                           
  3480                           ;adc.c: 265: remainder_val_10 = ((temp_remainder_val * 10) / (1023UL));
  3481  0F1B  3000               	movlw	0
  3482  0F1C  1283               	bcf	3,5	;RP0=0, select bank0
  3483  0F1D  1303               	bcf	3,6	;RP1=0, select bank0
  3484  0F1E  00BD               	movwf	___lldiv@divisor+3
  3485  0F1F  3000               	movlw	0
  3486  0F20  00BC               	movwf	___lldiv@divisor+2
  3487  0F21  3003               	movlw	3
  3488  0F22  00BB               	movwf	___lldiv@divisor+1
  3489  0F23  30FF               	movlw	255
  3490  0F24  00BA               	movwf	___lldiv@divisor
  3491  0F25  1683               	bsf	3,5	;RP0=1, select bank1
  3492  0F26  1303               	bcf	3,6	;RP1=0, select bank1
  3493  0F27  0835               	movf	(Encoded_To_Actual_Analog_Val_Calc@temp_remainder_val+3)^(0+128),w
  3494  0F28  1283               	bcf	3,5	;RP0=0, select bank0
  3495  0F29  1303               	bcf	3,6	;RP1=0, select bank0
  3496  0F2A  00B0               	movwf	___lmul@multiplier+3
  3497  0F2B  1683               	bsf	3,5	;RP0=1, select bank1
  3498  0F2C  1303               	bcf	3,6	;RP1=0, select bank1
  3499  0F2D  0834               	movf	(Encoded_To_Actual_Analog_Val_Calc@temp_remainder_val+2)^(0+128),w
  3500  0F2E  1283               	bcf	3,5	;RP0=0, select bank0
  3501  0F2F  1303               	bcf	3,6	;RP1=0, select bank0
  3502  0F30  00AF               	movwf	___lmul@multiplier+2
  3503  0F31  1683               	bsf	3,5	;RP0=1, select bank1
  3504  0F32  1303               	bcf	3,6	;RP1=0, select bank1
  3505  0F33  0833               	movf	(Encoded_To_Actual_Analog_Val_Calc@temp_remainder_val+1)^(0+128),w
  3506  0F34  1283               	bcf	3,5	;RP0=0, select bank0
  3507  0F35  1303               	bcf	3,6	;RP1=0, select bank0
  3508  0F36  00AE               	movwf	___lmul@multiplier+1
  3509  0F37  1683               	bsf	3,5	;RP0=1, select bank1
  3510  0F38  1303               	bcf	3,6	;RP1=0, select bank1
  3511  0F39  0832               	movf	Encoded_To_Actual_Analog_Val_Calc@temp_remainder_val^(0+128),w
  3512  0F3A  1283               	bcf	3,5	;RP0=0, select bank0
  3513  0F3B  1303               	bcf	3,6	;RP1=0, select bank0
  3514  0F3C  00AD               	movwf	___lmul@multiplier
  3515  0F3D  3000               	movlw	0
  3516  0F3E  00B4               	movwf	___lmul@multiplicand+3
  3517  0F3F  3000               	movlw	0
  3518  0F40  00B3               	movwf	___lmul@multiplicand+2
  3519  0F41  3000               	movlw	0
  3520  0F42  00B2               	movwf	___lmul@multiplicand+1
  3521  0F43  300A               	movlw	10
  3522  0F44  00B1               	movwf	___lmul@multiplicand
  3523  0F45  120A  158A  20ED  120A  158A  	fcall	___lmul
  3524  0F4A  1283               	bcf	3,5	;RP0=0, select bank0
  3525  0F4B  1303               	bcf	3,6	;RP1=0, select bank0
  3526  0F4C  0830               	movf	?___lmul+3,w
  3527  0F4D  00C1               	movwf	___lldiv@dividend+3
  3528  0F4E  082F               	movf	?___lmul+2,w
  3529  0F4F  00C0               	movwf	___lldiv@dividend+2
  3530  0F50  082E               	movf	?___lmul+1,w
  3531  0F51  00BF               	movwf	___lldiv@dividend+1
  3532  0F52  082D               	movf	?___lmul,w
  3533  0F53  00BE               	movwf	___lldiv@dividend
  3534  0F54  120A  158A  217C  120A  158A  	fcall	___lldiv
  3535  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  3536  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  3537  0F5B  083D               	movf	?___lldiv+3,w
  3538  0F5C  1683               	bsf	3,5	;RP0=1, select bank1
  3539  0F5D  1303               	bcf	3,6	;RP1=0, select bank1
  3540  0F5E  00BD               	movwf	(Encoded_To_Actual_Analog_Val_Calc@remainder_val_10+3)^(0+128)
  3541  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  3542  0F60  1303               	bcf	3,6	;RP1=0, select bank0
  3543  0F61  083C               	movf	?___lldiv+2,w
  3544  0F62  1683               	bsf	3,5	;RP0=1, select bank1
  3545  0F63  1303               	bcf	3,6	;RP1=0, select bank1
  3546  0F64  00BC               	movwf	(Encoded_To_Actual_Analog_Val_Calc@remainder_val_10+2)^(0+128)
  3547  0F65  1283               	bcf	3,5	;RP0=0, select bank0
  3548  0F66  1303               	bcf	3,6	;RP1=0, select bank0
  3549  0F67  083B               	movf	?___lldiv+1,w
  3550  0F68  1683               	bsf	3,5	;RP0=1, select bank1
  3551  0F69  1303               	bcf	3,6	;RP1=0, select bank1
  3552  0F6A  00BB               	movwf	(Encoded_To_Actual_Analog_Val_Calc@remainder_val_10+1)^(0+128)
  3553  0F6B  1283               	bcf	3,5	;RP0=0, select bank0
  3554  0F6C  1303               	bcf	3,6	;RP1=0, select bank0
  3555  0F6D  083A               	movf	?___lldiv,w
  3556  0F6E  1683               	bsf	3,5	;RP0=1, select bank1
  3557  0F6F  1303               	bcf	3,6	;RP1=0, select bank1
  3558  0F70  00BA               	movwf	Encoded_To_Actual_Analog_Val_Calc@remainder_val_10^(0+128)
  3559                           
  3560                           ;adc.c: 266: *analog_val_in_digital_frac = (remainder_val_1 * 100 )+ remainder_val_10 * 
      +                          10 ;
  3561  0F71  083D               	movf	(Encoded_To_Actual_Analog_Val_Calc@remainder_val_10+3)^(0+128),w
  3562  0F72  1283               	bcf	3,5	;RP0=0, select bank0
  3563  0F73  1303               	bcf	3,6	;RP1=0, select bank0
  3564  0F74  00B0               	movwf	___lmul@multiplier+3
  3565  0F75  1683               	bsf	3,5	;RP0=1, select bank1
  3566  0F76  1303               	bcf	3,6	;RP1=0, select bank1
  3567  0F77  083C               	movf	(Encoded_To_Actual_Analog_Val_Calc@remainder_val_10+2)^(0+128),w
  3568  0F78  1283               	bcf	3,5	;RP0=0, select bank0
  3569  0F79  1303               	bcf	3,6	;RP1=0, select bank0
  3570  0F7A  00AF               	movwf	___lmul@multiplier+2
  3571  0F7B  1683               	bsf	3,5	;RP0=1, select bank1
  3572  0F7C  1303               	bcf	3,6	;RP1=0, select bank1
  3573  0F7D  083B               	movf	(Encoded_To_Actual_Analog_Val_Calc@remainder_val_10+1)^(0+128),w
  3574  0F7E  1283               	bcf	3,5	;RP0=0, select bank0
  3575  0F7F  1303               	bcf	3,6	;RP1=0, select bank0
  3576  0F80  00AE               	movwf	___lmul@multiplier+1
  3577  0F81  1683               	bsf	3,5	;RP0=1, select bank1
  3578  0F82  1303               	bcf	3,6	;RP1=0, select bank1
  3579  0F83  083A               	movf	Encoded_To_Actual_Analog_Val_Calc@remainder_val_10^(0+128),w
  3580  0F84  1283               	bcf	3,5	;RP0=0, select bank0
  3581  0F85  1303               	bcf	3,6	;RP1=0, select bank0
  3582  0F86  00AD               	movwf	___lmul@multiplier
  3583  0F87  3000               	movlw	0
  3584  0F88  00B4               	movwf	___lmul@multiplicand+3
  3585  0F89  3000               	movlw	0
  3586  0F8A  00B3               	movwf	___lmul@multiplicand+2
  3587  0F8B  3000               	movlw	0
  3588  0F8C  00B2               	movwf	___lmul@multiplicand+1
  3589  0F8D  300A               	movlw	10
  3590  0F8E  00B1               	movwf	___lmul@multiplicand
  3591  0F8F  120A  158A  20ED  120A  158A  	fcall	___lmul
  3592  0F94  1283               	bcf	3,5	;RP0=0, select bank0
  3593  0F95  1303               	bcf	3,6	;RP1=0, select bank0
  3594  0F96  082D               	movf	?___lmul,w
  3595  0F97  00C8               	movwf	??_Encoded_To_Actual_Analog_Val_Calc
  3596  0F98  082E               	movf	?___lmul+1,w
  3597  0F99  00C9               	movwf	??_Encoded_To_Actual_Analog_Val_Calc+1
  3598  0F9A  082F               	movf	?___lmul+2,w
  3599  0F9B  00CA               	movwf	??_Encoded_To_Actual_Analog_Val_Calc+2
  3600  0F9C  0830               	movf	?___lmul+3,w
  3601  0F9D  00CB               	movwf	??_Encoded_To_Actual_Analog_Val_Calc+3
  3602  0F9E  1683               	bsf	3,5	;RP0=1, select bank1
  3603  0F9F  1303               	bcf	3,6	;RP1=0, select bank1
  3604  0FA0  0839               	movf	(Encoded_To_Actual_Analog_Val_Calc@remainder_val_1+3)^(0+128),w
  3605  0FA1  1283               	bcf	3,5	;RP0=0, select bank0
  3606  0FA2  1303               	bcf	3,6	;RP1=0, select bank0
  3607  0FA3  00B0               	movwf	___lmul@multiplier+3
  3608  0FA4  1683               	bsf	3,5	;RP0=1, select bank1
  3609  0FA5  1303               	bcf	3,6	;RP1=0, select bank1
  3610  0FA6  0838               	movf	(Encoded_To_Actual_Analog_Val_Calc@remainder_val_1+2)^(0+128),w
  3611  0FA7  1283               	bcf	3,5	;RP0=0, select bank0
  3612  0FA8  1303               	bcf	3,6	;RP1=0, select bank0
  3613  0FA9  00AF               	movwf	___lmul@multiplier+2
  3614  0FAA  1683               	bsf	3,5	;RP0=1, select bank1
  3615  0FAB  1303               	bcf	3,6	;RP1=0, select bank1
  3616  0FAC  0837               	movf	(Encoded_To_Actual_Analog_Val_Calc@remainder_val_1+1)^(0+128),w
  3617  0FAD  1283               	bcf	3,5	;RP0=0, select bank0
  3618  0FAE  1303               	bcf	3,6	;RP1=0, select bank0
  3619  0FAF  00AE               	movwf	___lmul@multiplier+1
  3620  0FB0  1683               	bsf	3,5	;RP0=1, select bank1
  3621  0FB1  1303               	bcf	3,6	;RP1=0, select bank1
  3622  0FB2  0836               	movf	Encoded_To_Actual_Analog_Val_Calc@remainder_val_1^(0+128),w
  3623  0FB3  1283               	bcf	3,5	;RP0=0, select bank0
  3624  0FB4  1303               	bcf	3,6	;RP1=0, select bank0
  3625  0FB5  00AD               	movwf	___lmul@multiplier
  3626  0FB6  3000               	movlw	0
  3627  0FB7  00B4               	movwf	___lmul@multiplicand+3
  3628  0FB8  3000               	movlw	0
  3629  0FB9  00B3               	movwf	___lmul@multiplicand+2
  3630  0FBA  3000               	movlw	0
  3631  0FBB  00B2               	movwf	___lmul@multiplicand+1
  3632  0FBC  3064               	movlw	100
  3633  0FBD  00B1               	movwf	___lmul@multiplicand
  3634  0FBE  120A  158A  20ED  120A  158A  	fcall	___lmul
  3635  0FC3  1283               	bcf	3,5	;RP0=0, select bank0
  3636  0FC4  1303               	bcf	3,6	;RP1=0, select bank0
  3637  0FC5  082D               	movf	?___lmul,w
  3638  0FC6  07C8               	addwf	??_Encoded_To_Actual_Analog_Val_Calc,f
  3639  0FC7  082E               	movf	?___lmul+1,w
  3640  0FC8  1803               	skipnc
  3641  0FC9  0F2E               	incfsz	?___lmul+1,w
  3642  0FCA  2FCC               	goto	u3250
  3643  0FCB  2FCD               	goto	u3251
  3644  0FCC                     u3250:	
  3645  0FCC  07C9               	addwf	??_Encoded_To_Actual_Analog_Val_Calc+1,f
  3646  0FCD                     u3251:	
  3647  0FCD  082F               	movf	?___lmul+2,w
  3648  0FCE  1803               	skipnc
  3649  0FCF  0F2F               	incfsz	?___lmul+2,w
  3650  0FD0  2FD2               	goto	u3252
  3651  0FD1  2FD3               	goto	u3253
  3652  0FD2                     u3252:	
  3653  0FD2  07CA               	addwf	??_Encoded_To_Actual_Analog_Val_Calc+2,f
  3654  0FD3                     u3253:	
  3655  0FD3  0830               	movf	?___lmul+3,w
  3656  0FD4  1803               	skipnc
  3657  0FD5  0A30               	incf	?___lmul+3,w
  3658  0FD6  07CB               	addwf	??_Encoded_To_Actual_Analog_Val_Calc+3,f
  3659  0FD7  1683               	bsf	3,5	;RP0=1, select bank1
  3660  0FD8  1303               	bcf	3,6	;RP1=0, select bank1
  3661  0FD9  082D               	movf	Encoded_To_Actual_Analog_Val_Calc@analog_val_in_digital_frac^(0+128),w
  3662  0FDA  0084               	movwf	4
  3663  0FDB  1283               	bcf	3,5	;RP0=0, select bank0
  3664  0FDC  1303               	bcf	3,6	;RP1=0, select bank0
  3665  0FDD  0848               	movf	??_Encoded_To_Actual_Analog_Val_Calc,w
  3666  0FDE  1783               	bsf	3,7	;select IRP bank2
  3667  0FDF  0080               	movwf	0
  3668  0FE0  0A84               	incf	4,f
  3669  0FE1  0849               	movf	??_Encoded_To_Actual_Analog_Val_Calc+1,w
  3670  0FE2  0080               	movwf	0
  3671  0FE3  0A84               	incf	4,f
  3672  0FE4  084A               	movf	??_Encoded_To_Actual_Analog_Val_Calc+2,w
  3673  0FE5  0080               	movwf	0
  3674  0FE6  0A84               	incf	4,f
  3675  0FE7  084B               	movf	??_Encoded_To_Actual_Analog_Val_Calc+3,w
  3676  0FE8  0080               	movwf	0
  3677                           
  3678                           ;adc.c: 267: return;
  3679  0FE9  0008               	return
  3680  0FEA                     l3397:	
  3681                           
  3682                           ;adc.c: 268: }
  3683                           ;adc.c: 270: *analog_val_in_digital_int = 0;
  3684  0FEA  1683               	bsf	3,5	;RP0=1, select bank1
  3685  0FEB  1303               	bcf	3,6	;RP1=0, select bank1
  3686  0FEC  082C               	movf	Encoded_To_Actual_Analog_Val_Calc@analog_val_in_digital_int^(0+128),w
  3687  0FED  0084               	movwf	4
  3688  0FEE  1783               	bsf	3,7	;select IRP bank2
  3689  0FEF  0180               	clrf	0
  3690  0FF0  0A84               	incf	4,f
  3691  0FF1  0180               	clrf	0
  3692  0FF2  0A84               	incf	4,f
  3693  0FF3  0180               	clrf	0
  3694  0FF4  0A84               	incf	4,f
  3695  0FF5  0180               	clrf	0
  3696                           
  3697                           ;adc.c: 271: *analog_val_in_digital_frac = 0;
  3698  0FF6  082D               	movf	Encoded_To_Actual_Analog_Val_Calc@analog_val_in_digital_frac^(0+128),w
  3699  0FF7  0084               	movwf	4
  3700  0FF8  0180               	clrf	0
  3701  0FF9  0A84               	incf	4,f
  3702  0FFA  0180               	clrf	0
  3703  0FFB  0A84               	incf	4,f
  3704  0FFC  0180               	clrf	0
  3705  0FFD  0A84               	incf	4,f
  3706  0FFE  0180               	clrf	0
  3707  0FFF  0008               	return
  3708  1000                     __end_of_Encoded_To_Actual_Analog_Val_Calc:	
  3709                           
  3710                           	psect	text3
  3711  08ED                     __ptext3:	
  3712 ;; *************** function ___lmul *****************
  3713 ;; Defined at:
  3714 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\Umul32.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;  multiplier      4   13[BANK0 ] unsigned long 
  3717 ;;  multiplicand    4   17[BANK0 ] unsigned long 
  3718 ;; Auto vars:     Size  Location     Type
  3719 ;;  product         4   22[BANK0 ] unsigned long 
  3720 ;; Return value:  Size  Location     Type
  3721 ;;                  4   13[BANK0 ] unsigned long 
  3722 ;; Registers used:
  3723 ;;		wreg, status,2, status,0
  3724 ;; Tracked objects:
  3725 ;;		On entry : 0/0
  3726 ;;		On exit  : 0/0
  3727 ;;		Unchanged: 0/0
  3728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3729 ;;      Params:         0       8       0       0       0
  3730 ;;      Locals:         0       4       0       0       0
  3731 ;;      Temps:          0       1       0       0       0
  3732 ;;      Totals:         0      13       0       0       0
  3733 ;;Total ram usage:       13 bytes
  3734 ;; Hardware stack levels used:    1
  3735 ;; Hardware stack levels required when called:    2
  3736 ;; This function calls:
  3737 ;;		Nothing
  3738 ;; This function is called by:
  3739 ;;		_Encoded_To_Actual_Analog_Val_Calc
  3740 ;;		_main
  3741 ;;		_Encoded_To_Percent_Calc
  3742 ;;		_Actual_Analog_Val_To_Encoded_Calc
  3743 ;;		_Timer1_Load_Init_Val_Calc
  3744 ;;		_Timer2_Load_Init_Val_Calc
  3745 ;; This function uses a non-reentrant model
  3746 ;;
  3747                           
  3748                           
  3749                           ;psect for function ___lmul
  3750  08ED                     ___lmul:	
  3751                           
  3752                           ;incstack = 0
  3753                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3754  08ED  3000               	movlw	0
  3755  08EE  1283               	bcf	3,5	;RP0=0, select bank0
  3756  08EF  1303               	bcf	3,6	;RP1=0, select bank0
  3757  08F0  00B9               	movwf	___lmul@product+3
  3758  08F1  3000               	movlw	0
  3759  08F2  00B8               	movwf	___lmul@product+2
  3760  08F3  3000               	movlw	0
  3761  08F4  00B7               	movwf	___lmul@product+1
  3762  08F5  3000               	movlw	0
  3763  08F6  00B6               	movwf	___lmul@product
  3764  08F7                     l3283:	
  3765  08F7  1C2D               	btfss	___lmul@multiplier,0
  3766  08F8  290D               	goto	l3287
  3767  08F9  0831               	movf	___lmul@multiplicand,w
  3768  08FA  07B6               	addwf	___lmul@product,f
  3769  08FB  0832               	movf	___lmul@multiplicand+1,w
  3770  08FC  1103               	clrz
  3771  08FD  1803               	skipnc
  3772  08FE  3E01               	addlw	1
  3773  08FF  1D03               	btfss	3,2
  3774  0900  07B7               	addwf	___lmul@product+1,f
  3775  0901  0833               	movf	___lmul@multiplicand+2,w
  3776  0902  1103               	clrz
  3777  0903  1803               	skipnc
  3778  0904  3E01               	addlw	1
  3779  0905  1D03               	btfss	3,2
  3780  0906  07B8               	addwf	___lmul@product+2,f
  3781  0907  0834               	movf	___lmul@multiplicand+3,w
  3782  0908  1103               	clrz
  3783  0909  1803               	skipnc
  3784  090A  3E01               	addlw	1
  3785  090B  1D03               	btfss	3,2
  3786  090C  07B9               	addwf	___lmul@product+3,f
  3787  090D                     l3287:	
  3788  090D  3001               	movlw	1
  3789  090E  00B5               	movwf	??___lmul
  3790  090F                     u3045:	
  3791  090F  1003               	clrc
  3792  0910  0DB1               	rlf	___lmul@multiplicand,f
  3793  0911  0DB2               	rlf	___lmul@multiplicand+1,f
  3794  0912  0DB3               	rlf	___lmul@multiplicand+2,f
  3795  0913  0DB4               	rlf	___lmul@multiplicand+3,f
  3796  0914  0BB5               	decfsz	??___lmul,f
  3797  0915  290F               	goto	u3045
  3798  0916  3001               	movlw	1
  3799  0917                     u3055:	
  3800  0917  1003               	clrc
  3801  0918  0CB0               	rrf	___lmul@multiplier+3,f
  3802  0919  0CAF               	rrf	___lmul@multiplier+2,f
  3803  091A  0CAE               	rrf	___lmul@multiplier+1,f
  3804  091B  0CAD               	rrf	___lmul@multiplier,f
  3805  091C  3EFF               	addlw	-1
  3806  091D  1D03               	skipz
  3807  091E  2917               	goto	u3055
  3808  091F  0830               	movf	___lmul@multiplier+3,w
  3809  0920  042F               	iorwf	___lmul@multiplier+2,w
  3810  0921  042E               	iorwf	___lmul@multiplier+1,w
  3811  0922  042D               	iorwf	___lmul@multiplier,w
  3812  0923  1D03               	skipz
  3813  0924  28F7               	goto	l3283
  3814  0925  0839               	movf	___lmul@product+3,w
  3815  0926  00B0               	movwf	?___lmul+3
  3816  0927  0838               	movf	___lmul@product+2,w
  3817  0928  00AF               	movwf	?___lmul+2
  3818  0929  0837               	movf	___lmul@product+1,w
  3819  092A  00AE               	movwf	?___lmul+1
  3820  092B  0836               	movf	___lmul@product,w
  3821  092C  00AD               	movwf	?___lmul
  3822  092D  0008               	return
  3823  092E                     __end_of___lmul:	
  3824                           
  3825                           	psect	text4
  3826  0BBD                     __ptext4:	
  3827 ;; *************** function _ADC_Start_Conv *****************
  3828 ;; Defined at:
  3829 ;;		line 62 in file "adc.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;  set_adc_para    1    wreg     PTR struct .
  3832 ;;		 -> adc_cur_parameters(5), 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;  set_adc_para    1   56[BANK1 ] PTR struct .
  3835 ;;		 -> adc_cur_parameters(5), 
  3836 ;;  adc_value_mo    2   54[BANK1 ] unsigned int 
  3837 ;;  adc_value_le    2   52[BANK1 ] unsigned int 
  3838 ;;  rcvd_status     1   51[BANK1 ] unsigned char 
  3839 ;; Return value:  Size  Location     Type
  3840 ;;                  1    wreg      void 
  3841 ;; Registers used:
  3842 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3843 ;; Tracked objects:
  3844 ;;		On entry : 0/0
  3845 ;;		On exit  : 0/0
  3846 ;;		Unchanged: 0/0
  3847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3848 ;;      Params:         0       0       0       0       0
  3849 ;;      Locals:         0       0       6       0       0
  3850 ;;      Temps:          0       0       6       0       0
  3851 ;;      Totals:         0       0      12       0       0
  3852 ;;Total ram usage:       12 bytes
  3853 ;; Hardware stack levels used:    1
  3854 ;; Hardware stack levels required when called:    4
  3855 ;; This function calls:
  3856 ;;		_Is_ADC_Converting
  3857 ;;		_UART_Transmit_Char
  3858 ;;		_UART_Transmit_Num
  3859 ;;		_UART_Transmit_Str
  3860 ;; This function is called by:
  3861 ;;		_main
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           
  3866                           ;psect for function _ADC_Start_Conv
  3867  0BBD                     _ADC_Start_Conv:	
  3868                           
  3869                           ;incstack = 0
  3870                           ; Regs used in _ADC_Start_Conv: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3871                           ;ADC_Start_Conv@set_adc_parameters stored from wreg
  3872  0BBD  1683               	bsf	3,5	;RP0=1, select bank1
  3873  0BBE  1303               	bcf	3,6	;RP1=0, select bank1
  3874  0BBF  00D8               	movwf	ADC_Start_Conv@set_adc_parameters^(0+128)
  3875                           
  3876                           ;adc.c: 64: char rcvd_status;
  3877                           ;adc.c: 65: unsigned adc_value_least_byte, adc_value_most_byte;
  3878                           ;adc.c: 67: rcvd_status = Is_ADC_Converting();
  3879  0BC0  120A  158A  204A  120A  158A  	fcall	_Is_ADC_Converting
  3880  0BC5  1683               	bsf	3,5	;RP0=1, select bank1
  3881  0BC6  1303               	bcf	3,6	;RP1=0, select bank1
  3882  0BC7  00CD               	movwf	??_ADC_Start_Conv^(0+128)
  3883  0BC8  084D               	movf	??_ADC_Start_Conv^(0+128),w
  3884  0BC9  00D3               	movwf	ADC_Start_Conv@rcvd_status^(0+128)
  3885                           
  3886                           ;adc.c: 68: switch(rcvd_status)
  3887  0BCA  2D45               	goto	l3377
  3888  0BCB                     l3325:	
  3889                           ;adc.c: 69: {
  3890                           ;adc.c: 71: case ('n'):
  3891                           
  3892                           
  3893                           ;adc.c: 73: if(adc_cur_channel != ADC_INVALID_CH_14 )
  3894  0BCB  300E               	movlw	14
  3895  0BCC  1283               	bcf	3,5	;RP0=0, select bank0
  3896  0BCD  1303               	bcf	3,6	;RP1=0, select bank0
  3897  0BCE  065F               	xorwf	_adc_cur_channel,w
  3898  0BCF  1903               	btfsc	3,2
  3899  0BD0  2D17               	goto	l3373
  3900                           
  3901                           ;adc.c: 74: {
  3902                           ;adc.c: 75: if(adc_cur_channel < 14)
  3903  0BD1  300E               	movlw	14
  3904  0BD2  025F               	subwf	_adc_cur_channel,w
  3905  0BD3  1803               	skipnc
  3906  0BD4  2CD9               	goto	l3365
  3907                           
  3908                           ;adc.c: 76: {
  3909                           ;adc.c: 77: ADCON0 = (set_adc_parameters->adc_clk_src_type <<6) | (adc_cur_channel << 2)
      +                           ;
  3910  0BD5  085F               	movf	_adc_cur_channel,w
  3911  0BD6  1683               	bsf	3,5	;RP0=1, select bank1
  3912  0BD7  1303               	bcf	3,6	;RP1=0, select bank1
  3913  0BD8  00CD               	movwf	??_ADC_Start_Conv^(0+128)
  3914  0BD9  3002               	movlw	2
  3915  0BDA                     u3125:	
  3916  0BDA  1003               	clrc
  3917  0BDB  0DCD               	rlf	??_ADC_Start_Conv^(0+128),f
  3918  0BDC  3EFF               	addlw	-1
  3919  0BDD  1D03               	skipz
  3920  0BDE  2BDA               	goto	u3125
  3921  0BDF  0858               	movf	ADC_Start_Conv@set_adc_parameters^(0+128),w
  3922  0BE0  3E04               	addlw	4
  3923  0BE1  0084               	movwf	4
  3924  0BE2  1783               	bsf	3,7	;select IRP bank2
  3925  0BE3  0C00               	rrf	0,w
  3926  0BE4  00CE               	movwf	(??_ADC_Start_Conv+1)^(0+128)
  3927  0BE5  0C4E               	rrf	(??_ADC_Start_Conv+1)^(0+128),w
  3928  0BE6  3903               	andlw	3
  3929  0BE7  00CF               	movwf	(??_ADC_Start_Conv+2)^(0+128)
  3930  0BE8  3005               	movlw	5
  3931  0BE9                     u3135:	
  3932  0BE9  1003               	clrc
  3933  0BEA  0DCF               	rlf	(??_ADC_Start_Conv+2)^(0+128),f
  3934  0BEB  3EFF               	addlw	-1
  3935  0BEC  1D03               	skipz
  3936  0BED  2BE9               	goto	u3135
  3937  0BEE  1003               	clrc
  3938  0BEF  0D4F               	rlf	(??_ADC_Start_Conv+2)^(0+128),w
  3939  0BF0  044D               	iorwf	??_ADC_Start_Conv^(0+128),w
  3940  0BF1  1283               	bcf	3,5	;RP0=0, select bank0
  3941  0BF2  1303               	bcf	3,6	;RP1=0, select bank0
  3942  0BF3  009F               	movwf	31	;volatile
  3943                           
  3944                           ;adc.c: 78: ADCON1 = (set_adc_parameters->adc_result_format_justfied_type<<7) | (set_adc
      +                          _parameters->adc_vref_neg_src_type << 5) | (set_adc_parameters->adc_vref_plus_src_type<<
      +                          4);
  3945  0BF4  1683               	bsf	3,5	;RP0=1, select bank1
  3946  0BF5  1303               	bcf	3,6	;RP1=0, select bank1
  3947  0BF6  0858               	movf	ADC_Start_Conv@set_adc_parameters^(0+128),w
  3948  0BF7  3E04               	addlw	4
  3949  0BF8  0084               	movwf	4
  3950  0BF9  0D00               	rlf	0,w
  3951  0BFA  0D00               	rlf	0,w
  3952  0BFB  3901               	andlw	1
  3953  0BFC  00CD               	movwf	??_ADC_Start_Conv^(0+128)
  3954  0BFD  3004               	movlw	4
  3955  0BFE                     u3145:	
  3956  0BFE  1003               	clrc
  3957  0BFF  0DCD               	rlf	??_ADC_Start_Conv^(0+128),f
  3958  0C00  3EFF               	addlw	-1
  3959  0C01  1D03               	skipz
  3960  0C02  2BFE               	goto	u3145
  3961  0C03  0858               	movf	ADC_Start_Conv@set_adc_parameters^(0+128),w
  3962  0C04  3E04               	addlw	4
  3963  0C05  0084               	movwf	4
  3964  0C06  0E00               	swapf	0,w
  3965  0C07  00CE               	movwf	(??_ADC_Start_Conv+1)^(0+128)
  3966  0C08  0CCE               	rrf	(??_ADC_Start_Conv+1)^(0+128),f
  3967  0C09  0C4E               	rrf	(??_ADC_Start_Conv+1)^(0+128),w
  3968  0C0A  3901               	andlw	1
  3969  0C0B  00CF               	movwf	(??_ADC_Start_Conv+2)^(0+128)
  3970  0C0C  3005               	movlw	5
  3971  0C0D                     u3155:	
  3972  0C0D  1003               	clrc
  3973  0C0E  0DCF               	rlf	(??_ADC_Start_Conv+2)^(0+128),f
  3974  0C0F  3EFF               	addlw	-1
  3975  0C10  1D03               	skipz
  3976  0C11  2C0D               	goto	u3155
  3977  0C12  0858               	movf	ADC_Start_Conv@set_adc_parameters^(0+128),w
  3978  0C13  3E04               	addlw	4
  3979  0C14  0084               	movwf	4
  3980  0C15  0E00               	swapf	0,w
  3981  0C16  00D0               	movwf	(??_ADC_Start_Conv+3)^(0+128)
  3982  0C17  0C50               	rrf	(??_ADC_Start_Conv+3)^(0+128),w
  3983  0C18  3901               	andlw	1
  3984  0C19  00D1               	movwf	(??_ADC_Start_Conv+4)^(0+128)
  3985  0C1A  3006               	movlw	6
  3986  0C1B                     u3165:	
  3987  0C1B  1003               	clrc
  3988  0C1C  0DD1               	rlf	(??_ADC_Start_Conv+4)^(0+128),f
  3989  0C1D  3EFF               	addlw	-1
  3990  0C1E  1D03               	skipz
  3991  0C1F  2C1B               	goto	u3165
  3992  0C20  1003               	clrc
  3993  0C21  0D51               	rlf	(??_ADC_Start_Conv+4)^(0+128),w
  3994  0C22  044F               	iorwf	(??_ADC_Start_Conv+2)^(0+128),w
  3995  0C23  044D               	iorwf	??_ADC_Start_Conv^(0+128),w
  3996  0C24  009F               	movwf	31	;volatile
  3997                           
  3998                           ;adc.c: 80: ADCON0bits.ADON = 1;
  3999  0C25  1283               	bcf	3,5	;RP0=0, select bank0
  4000  0C26  1303               	bcf	3,6	;RP1=0, select bank0
  4001  0C27  141F               	bsf	31,0	;volatile
  4002                           
  4003                           ;adc.c: 81: ADIF = 0;
  4004  0C28  130C               	bcf	12,6	;volatile
  4005                           
  4006                           ;adc.c: 82: switch(set_adc_parameters->adc_cur_service_type)
  4007  0C29  2C30               	goto	l3337
  4008  0C2A                     l50:	
  4009                           ;adc.c: 83: {
  4010                           ;adc.c: 84: case (0x01):
  4011                           
  4012                           
  4013                           ;adc.c: 85: PIE1bits.ADIE = 1;
  4014  0C2A  170C               	bsf	12,6	;volatile
  4015                           
  4016                           ;adc.c: 86: INTCONbits.PEIE = 1;
  4017  0C2B  170B               	bsf	11,6	;volatile
  4018                           
  4019                           ;adc.c: 87: INTCONbits.GIE = 1;
  4020  0C2C  178B               	bsf	11,7	;volatile
  4021                           
  4022                           ;adc.c: 93: break;
  4023  0C2D  2C3E               	goto	l3339
  4024  0C2E                     l52:	
  4025                           ;adc.c: 94: case (0x00):
  4026                           
  4027                           
  4028                           ;adc.c: 95: PIE1bits.ADIE = 0;
  4029  0C2E  130C               	bcf	12,6	;volatile
  4030                           
  4031                           ;adc.c: 101: }
  4032                           
  4033                           ;adc.c: 100: break;
  4034  0C2F  2C3E               	goto	l3339
  4035  0C30                     l3337:	
  4036  0C30  1683               	bsf	3,5	;RP0=1, select bank1
  4037  0C31  1303               	bcf	3,6	;RP1=0, select bank1
  4038  0C32  0858               	movf	ADC_Start_Conv@set_adc_parameters^(0+128),w
  4039  0C33  3E04               	addlw	4
  4040  0C34  0084               	movwf	4
  4041  0C35  0800               	movf	0,w
  4042  0C36  3903               	andlw	3
  4043                           
  4044                           ; Switch size 1, requested type "space"
  4045                           ; Number of cases is 2, Range of values is 0 to 1
  4046                           ; switch strategies available:
  4047                           ; Name         Instructions Cycles
  4048                           ; simple_byte            7     4 (average)
  4049                           ; direct_byte           14     8 (fixed)
  4050                           ; jumptable            260     6 (fixed)
  4051                           ;	Chosen strategy is simple_byte
  4052  0C37  3A00               	xorlw	0	; case 0
  4053  0C38  1903               	skipnz
  4054  0C39  2C2E               	goto	l52
  4055  0C3A  3A01               	xorlw	1	; case 1
  4056  0C3B  1903               	skipnz
  4057  0C3C  2C2A               	goto	l50
  4058  0C3D  2C3E               	goto	l3339
  4059  0C3E                     l3339:	
  4060                           
  4061                           ;adc.c: 121: _delay((unsigned long)((20)*((20000000)/4000000.0)));
  4062  0C3E  3020               	movlw	32
  4063  0C3F  1683               	bsf	3,5	;RP0=1, select bank1
  4064  0C40  1303               	bcf	3,6	;RP1=0, select bank1
  4065  0C41  00CD               	movwf	??_ADC_Start_Conv^(0+128)
  4066  0C42                     u3747:	
  4067  0C42  0BCD               	decfsz	??_ADC_Start_Conv^(0+128),f
  4068  0C43  2C42               	goto	u3747
  4069  0C44  0000               	nop
  4070                           
  4071                           ;adc.c: 124: ADCON0bits.GO = 1;
  4072  0C45  1283               	bcf	3,5	;RP0=0, select bank0
  4073  0C46  1303               	bcf	3,6	;RP1=0, select bank0
  4074  0C47  149F               	bsf	31,1	;volatile
  4075                           
  4076                           ;adc.c: 125: switch(set_adc_parameters->adc_cur_service_type)
  4077  0C48  2CCC               	goto	l3363
  4078  0C49                     l55:	
  4079                           ;adc.c: 128: while(GO == 1);
  4080                           
  4081                           ;adc.c: 126: {
  4082                           ;adc.c: 127: case (0x00):
  4083                           
  4084  0C49  1283               	bcf	3,5	;RP0=0, select bank0
  4085  0C4A  189F               	btfsc	31,1	;volatile
  4086  0C4B  2C49               	goto	l55
  4087                           
  4088                           ;adc.c: 130: ADIF = 0;
  4089  0C4C  130C               	bcf	12,6	;volatile
  4090                           
  4091                           ;adc.c: 132: if(ADFM == 1)
  4092  0C4D  1683               	bsf	3,5	;RP0=1, select bank1
  4093  0C4E  1303               	bcf	3,6	;RP1=0, select bank1
  4094  0C4F  1F9F               	btfss	31,7	;volatile
  4095  0C50  2C86               	goto	l3351
  4096                           
  4097                           ;adc.c: 133: {
  4098                           ;adc.c: 134: adc_value_least_byte = ADRESL;
  4099  0C51  081E               	movf	30,w	;volatile
  4100  0C52  00CD               	movwf	??_ADC_Start_Conv^(0+128)
  4101  0C53  01CE               	clrf	(??_ADC_Start_Conv^(0+128)+1)
  4102  0C54  084D               	movf	??_ADC_Start_Conv^(0+128),w
  4103  0C55  00D4               	movwf	ADC_Start_Conv@adc_value_least_byte^(0+128)
  4104  0C56  084E               	movf	(??_ADC_Start_Conv+1)^(0+128),w
  4105  0C57  00D5               	movwf	(ADC_Start_Conv@adc_value_least_byte+1)^(0+128)
  4106                           
  4107                           ;adc.c: 135: adc_value_most_byte = ADRESH & 0x03u;
  4108  0C58  1283               	bcf	3,5	;RP0=0, select bank0
  4109  0C59  1303               	bcf	3,6	;RP1=0, select bank0
  4110  0C5A  081E               	movf	30,w	;volatile
  4111  0C5B  3903               	andlw	3
  4112  0C5C  1683               	bsf	3,5	;RP0=1, select bank1
  4113  0C5D  1303               	bcf	3,6	;RP1=0, select bank1
  4114  0C5E  00CD               	movwf	??_ADC_Start_Conv^(0+128)
  4115  0C5F  01CE               	clrf	(??_ADC_Start_Conv^(0+128)+1)
  4116  0C60  084D               	movf	??_ADC_Start_Conv^(0+128),w
  4117  0C61  00D6               	movwf	ADC_Start_Conv@adc_value_most_byte^(0+128)
  4118  0C62  084E               	movf	(??_ADC_Start_Conv+1)^(0+128),w
  4119  0C63  00D7               	movwf	(ADC_Start_Conv@adc_value_most_byte+1)^(0+128)
  4120                           
  4121                           ;adc.c: 136: adc_value_most_byte <<= 8;
  4122  0C64  3008               	movlw	8
  4123  0C65                     u3195:	
  4124  0C65  1003               	clrc
  4125  0C66  0DD6               	rlf	ADC_Start_Conv@adc_value_most_byte^(0+128),f
  4126  0C67  0DD7               	rlf	(ADC_Start_Conv@adc_value_most_byte+1)^(0+128),f
  4127  0C68  3EFF               	addlw	-1
  4128  0C69  1D03               	skipz
  4129  0C6A  2C65               	goto	u3195
  4130                           
  4131                           ;adc.c: 137: set_adc_parameters->adc_value_channel = (adc_value_most_byte) | adc_value_l
      +                          east_byte;
  4132  0C6B  0854               	movf	ADC_Start_Conv@adc_value_least_byte^(0+128),w
  4133  0C6C  0456               	iorwf	ADC_Start_Conv@adc_value_most_byte^(0+128),w
  4134  0C6D  00CD               	movwf	??_ADC_Start_Conv^(0+128)
  4135  0C6E  0855               	movf	(ADC_Start_Conv@adc_value_least_byte+1)^(0+128),w
  4136  0C6F  0457               	iorwf	(ADC_Start_Conv@adc_value_most_byte+1)^(0+128),w
  4137  0C70  00CE               	movwf	(??_ADC_Start_Conv+1)^(0+128)
  4138  0C71  084D               	movf	??_ADC_Start_Conv^(0+128),w
  4139  0C72  00CF               	movwf	(??_ADC_Start_Conv+2)^(0+128)
  4140  0C73  084E               	movf	(??_ADC_Start_Conv+1)^(0+128),w
  4141  0C74  00D0               	movwf	((??_ADC_Start_Conv+2)^(0+128)+1)
  4142  0C75  01D1               	clrf	((??_ADC_Start_Conv+2)^(0+128)+2)
  4143  0C76  01D2               	clrf	((??_ADC_Start_Conv+2)^(0+128)+3)
  4144  0C77  0858               	movf	ADC_Start_Conv@set_adc_parameters^(0+128),w
  4145  0C78  0084               	movwf	4
  4146  0C79  084F               	movf	(??_ADC_Start_Conv+2)^(0+128),w
  4147  0C7A  1783               	bsf	3,7	;select IRP bank2
  4148  0C7B  0080               	movwf	0
  4149  0C7C  0A84               	incf	4,f
  4150  0C7D  0850               	movf	(??_ADC_Start_Conv+3)^(0+128),w
  4151  0C7E  0080               	movwf	0
  4152  0C7F  0A84               	incf	4,f
  4153  0C80  0851               	movf	(??_ADC_Start_Conv+4)^(0+128),w
  4154  0C81  0080               	movwf	0
  4155  0C82  0A84               	incf	4,f
  4156  0C83  0852               	movf	(??_ADC_Start_Conv+5)^(0+128),w
  4157  0C84  0080               	movwf	0
  4158                           
  4159                           ;adc.c: 138: }
  4160  0C85  0008               	return
  4161  0C86                     l3351:	
  4162                           
  4163                           ;adc.c: 139: else
  4164                           ;adc.c: 140: {
  4165                           ;adc.c: 141: adc_value_least_byte = ADRESL & 0xC0;
  4166  0C86  081E               	movf	30,w	;volatile
  4167  0C87  39C0               	andlw	192
  4168  0C88  00CD               	movwf	??_ADC_Start_Conv^(0+128)
  4169  0C89  01CE               	clrf	(??_ADC_Start_Conv^(0+128)+1)
  4170  0C8A  084D               	movf	??_ADC_Start_Conv^(0+128),w
  4171  0C8B  00D4               	movwf	ADC_Start_Conv@adc_value_least_byte^(0+128)
  4172  0C8C  084E               	movf	(??_ADC_Start_Conv+1)^(0+128),w
  4173  0C8D  00D5               	movwf	(ADC_Start_Conv@adc_value_least_byte+1)^(0+128)
  4174                           
  4175                           ;adc.c: 142: adc_value_most_byte = ADRESH ;
  4176  0C8E  1283               	bcf	3,5	;RP0=0, select bank0
  4177  0C8F  1303               	bcf	3,6	;RP1=0, select bank0
  4178  0C90  081E               	movf	30,w	;volatile
  4179  0C91  1683               	bsf	3,5	;RP0=1, select bank1
  4180  0C92  1303               	bcf	3,6	;RP1=0, select bank1
  4181  0C93  00CD               	movwf	??_ADC_Start_Conv^(0+128)
  4182  0C94  01CE               	clrf	(??_ADC_Start_Conv^(0+128)+1)
  4183  0C95  084D               	movf	??_ADC_Start_Conv^(0+128),w
  4184  0C96  00D6               	movwf	ADC_Start_Conv@adc_value_most_byte^(0+128)
  4185  0C97  084E               	movf	(??_ADC_Start_Conv+1)^(0+128),w
  4186  0C98  00D7               	movwf	(ADC_Start_Conv@adc_value_most_byte+1)^(0+128)
  4187                           
  4188                           ;adc.c: 143: adc_value_most_byte <<= 8;
  4189  0C99  3008               	movlw	8
  4190  0C9A                     u3205:	
  4191  0C9A  1003               	clrc
  4192  0C9B  0DD6               	rlf	ADC_Start_Conv@adc_value_most_byte^(0+128),f
  4193  0C9C  0DD7               	rlf	(ADC_Start_Conv@adc_value_most_byte+1)^(0+128),f
  4194  0C9D  3EFF               	addlw	-1
  4195  0C9E  1D03               	skipz
  4196  0C9F  2C9A               	goto	u3205
  4197                           
  4198                           ;adc.c: 144: set_adc_parameters->adc_value_channel = adc_value_most_byte | adc_value_lea
      +                          st_byte;
  4199  0CA0  0854               	movf	ADC_Start_Conv@adc_value_least_byte^(0+128),w
  4200  0CA1  0456               	iorwf	ADC_Start_Conv@adc_value_most_byte^(0+128),w
  4201  0CA2  00CD               	movwf	??_ADC_Start_Conv^(0+128)
  4202  0CA3  0855               	movf	(ADC_Start_Conv@adc_value_least_byte+1)^(0+128),w
  4203  0CA4  0457               	iorwf	(ADC_Start_Conv@adc_value_most_byte+1)^(0+128),w
  4204  0CA5  00CE               	movwf	(??_ADC_Start_Conv+1)^(0+128)
  4205  0CA6  084D               	movf	??_ADC_Start_Conv^(0+128),w
  4206  0CA7  00CF               	movwf	(??_ADC_Start_Conv+2)^(0+128)
  4207  0CA8  084E               	movf	(??_ADC_Start_Conv+1)^(0+128),w
  4208  0CA9  00D0               	movwf	((??_ADC_Start_Conv+2)^(0+128)+1)
  4209  0CAA  01D1               	clrf	((??_ADC_Start_Conv+2)^(0+128)+2)
  4210  0CAB  01D2               	clrf	((??_ADC_Start_Conv+2)^(0+128)+3)
  4211  0CAC  0858               	movf	ADC_Start_Conv@set_adc_parameters^(0+128),w
  4212  0CAD  0084               	movwf	4
  4213  0CAE  084F               	movf	(??_ADC_Start_Conv+2)^(0+128),w
  4214  0CAF  1783               	bsf	3,7	;select IRP bank2
  4215  0CB0  0080               	movwf	0
  4216  0CB1  0A84               	incf	4,f
  4217  0CB2  0850               	movf	(??_ADC_Start_Conv+3)^(0+128),w
  4218  0CB3  0080               	movwf	0
  4219  0CB4  0A84               	incf	4,f
  4220  0CB5  0851               	movf	(??_ADC_Start_Conv+4)^(0+128),w
  4221  0CB6  0080               	movwf	0
  4222  0CB7  0A84               	incf	4,f
  4223  0CB8  0852               	movf	(??_ADC_Start_Conv+5)^(0+128),w
  4224  0CB9  0080               	movwf	0
  4225                           
  4226                           ;adc.c: 145: set_adc_parameters->adc_value_channel >>= 6;
  4227  0CBA  0858               	movf	ADC_Start_Conv@set_adc_parameters^(0+128),w
  4228  0CBB  0084               	movwf	4
  4229  0CBC  3006               	movlw	6
  4230  0CBD                     u3215:	
  4231  0CBD  0A84               	incf	4,f
  4232  0CBE  0A84               	incf	4,f
  4233  0CBF  0A84               	incf	4,f
  4234  0CC0  1003               	clrc
  4235  0CC1  0C80               	rrf	0,f
  4236  0CC2  0384               	decf	4,f
  4237  0CC3  0C80               	rrf	0,f
  4238  0CC4  0384               	decf	4,f
  4239  0CC5  0C80               	rrf	0,f
  4240  0CC6  0384               	decf	4,f
  4241  0CC7  0C80               	rrf	0,f
  4242  0CC8  3EFF               	addlw	-1
  4243  0CC9  1903               	btfsc	3,2
  4244                           
  4245                           ;adc.c: 151: }
  4246                           
  4247                           ;adc.c: 146: }
  4248                           ;adc.c: 150: break;
  4249  0CCA  0008               	return
  4250  0CCB  2CBD               	goto	u3215
  4251  0CCC                     l3363:	
  4252  0CCC  1683               	bsf	3,5	;RP0=1, select bank1
  4253  0CCD  1303               	bcf	3,6	;RP1=0, select bank1
  4254  0CCE  0858               	movf	ADC_Start_Conv@set_adc_parameters^(0+128),w
  4255  0CCF  3E04               	addlw	4
  4256  0CD0  0084               	movwf	4
  4257  0CD1  1783               	bsf	3,7	;select IRP bank2
  4258  0CD2  0800               	movf	0,w
  4259  0CD3  3903               	andlw	3
  4260                           
  4261                           ; Switch size 1, requested type "space"
  4262                           ; Number of cases is 1, Range of values is 0 to 0
  4263                           ; switch strategies available:
  4264                           ; Name         Instructions Cycles
  4265                           ; simple_byte            4     3 (average)
  4266                           ; direct_byte           11     8 (fixed)
  4267                           ; jumptable            260     6 (fixed)
  4268                           ;	Chosen strategy is simple_byte
  4269  0CD4  3A00               	xorlw	0	; case 0
  4270  0CD5  1903               	skipnz
  4271  0CD6  2C49               	goto	l55
  4272  0CD7  2D4C               	goto	l65
  4273                           
  4274                           ;adc.c: 152: }
  4275  0CD8  0008               	return
  4276  0CD9                     l3365:	
  4277                           
  4278                           ;adc.c: 153: else
  4279                           ;adc.c: 154: {
  4280                           ;adc.c: 156: to_disp.signed_val.val_in_bytes.value_byte[0] = adc_cur_channel;
  4281  0CD9  1283               	bcf	3,5	;RP0=0, select bank0
  4282  0CDA  085F               	movf	_adc_cur_channel,w
  4283  0CDB  1683               	bsf	3,5	;RP0=1, select bank1
  4284  0CDC  1303               	bcf	3,6	;RP1=0, select bank1
  4285  0CDD  00CD               	movwf	??_ADC_Start_Conv^(0+128)
  4286  0CDE  01CE               	clrf	(??_ADC_Start_Conv^(0+128)+1)
  4287  0CDF  084D               	movf	??_ADC_Start_Conv^(0+128),w
  4288  0CE0  1683               	bsf	3,5	;RP0=1, select bank3
  4289  0CE1  1703               	bsf	3,6	;RP1=1, select bank3
  4290  0CE2  00C8               	movwf	_to_disp^(0+384)
  4291  0CE3  1683               	bsf	3,5	;RP0=1, select bank1
  4292  0CE4  1303               	bcf	3,6	;RP1=0, select bank1
  4293  0CE5  084E               	movf	(??_ADC_Start_Conv+1)^(0+128),w
  4294  0CE6  1683               	bsf	3,5	;RP0=1, select bank3
  4295  0CE7  1703               	bsf	3,6	;RP1=1, select bank3
  4296  0CE8  00C9               	movwf	(_to_disp+1)^(0+384)
  4297                           
  4298                           ;adc.c: 157: UART_Transmit_Str("ERR: invalid ADC channel select : ");
  4299  0CE9  3010               	movlw	low (STR_1| (0+32768))
  4300  0CEA  1283               	bcf	3,5	;RP0=0, select bank0
  4301  0CEB  1303               	bcf	3,6	;RP1=0, select bank0
  4302  0CEC  00AE               	movwf	UART_Transmit_Str@transmit_str
  4303  0CED  3091               	movlw	high (STR_1| (0+32768))
  4304  0CEE  00AF               	movwf	UART_Transmit_Str@transmit_str+1
  4305  0CEF  120A  158A  20C8  120A  158A  	fcall	_UART_Transmit_Str
  4306                           
  4307                           ;adc.c: 158: UART_Transmit_Num(DISP_SIGN_NUM_DIGIT2, to_disp );
  4308  0CF4  1683               	bsf	3,5	;RP0=1, select bank3
  4309  0CF5  1703               	bsf	3,6	;RP1=1, select bank3
  4310  0CF6  084B               	movf	(_to_disp+3)^(0+384),w
  4311  0CF7  1283               	bcf	3,5	;RP0=0, select bank0
  4312  0CF8  1303               	bcf	3,6	;RP1=0, select bank0
  4313  0CF9  00CB               	movwf	UART_Transmit_Num@uart_disp_data_int+3
  4314  0CFA  1683               	bsf	3,5	;RP0=1, select bank3
  4315  0CFB  1703               	bsf	3,6	;RP1=1, select bank3
  4316  0CFC  084A               	movf	(_to_disp+2)^(0+384),w
  4317  0CFD  1283               	bcf	3,5	;RP0=0, select bank0
  4318  0CFE  1303               	bcf	3,6	;RP1=0, select bank0
  4319  0CFF  00CA               	movwf	UART_Transmit_Num@uart_disp_data_int+2
  4320  0D00  1683               	bsf	3,5	;RP0=1, select bank3
  4321  0D01  1703               	bsf	3,6	;RP1=1, select bank3
  4322  0D02  0849               	movf	(_to_disp+1)^(0+384),w
  4323  0D03  1283               	bcf	3,5	;RP0=0, select bank0
  4324  0D04  1303               	bcf	3,6	;RP1=0, select bank0
  4325  0D05  00C9               	movwf	UART_Transmit_Num@uart_disp_data_int+1
  4326  0D06  1683               	bsf	3,5	;RP0=1, select bank3
  4327  0D07  1703               	bsf	3,6	;RP1=1, select bank3
  4328  0D08  0848               	movf	_to_disp^(0+384),w
  4329  0D09  1283               	bcf	3,5	;RP0=0, select bank0
  4330  0D0A  1303               	bcf	3,6	;RP1=0, select bank0
  4331  0D0B  00C8               	movwf	UART_Transmit_Num@uart_disp_data_int
  4332  0D0C  3012               	movlw	18
  4333  0D0D  120A  118A  2452  120A  158A  	fcall	_UART_Transmit_Num
  4334                           
  4335                           ;adc.c: 159: UART_Transmit_Char(('\r'));
  4336  0D12  300D               	movlw	13
  4337  0D13  120A  158A  205A   	fcall	_UART_Transmit_Char
  4338                           
  4339                           ;adc.c: 161: }
  4340                           ;adc.c: 162: }
  4341  0D16  0008               	return
  4342  0D17                     l3373:	
  4343                           
  4344                           ;adc.c: 163: else
  4345                           ;adc.c: 164: {
  4346                           ;adc.c: 165: ADCON0 = (set_adc_parameters->adc_clk_src_type << 6)| (7 << 3) | (set_adc_p
      +                          arameters->volt_ref << 2) ;
  4347  0D17  1683               	bsf	3,5	;RP0=1, select bank1
  4348  0D18  1303               	bcf	3,6	;RP1=0, select bank1
  4349  0D19  0858               	movf	ADC_Start_Conv@set_adc_parameters^(0+128),w
  4350  0D1A  3E04               	addlw	4
  4351  0D1B  0084               	movwf	4
  4352  0D1C  1783               	bsf	3,7	;select IRP bank2
  4353  0D1D  0E00               	swapf	0,w
  4354  0D1E  3901               	andlw	1
  4355  0D1F  00CD               	movwf	??_ADC_Start_Conv^(0+128)
  4356  0D20  3002               	movlw	2
  4357  0D21                     u3225:	
  4358  0D21  1003               	clrc
  4359  0D22  0DCD               	rlf	??_ADC_Start_Conv^(0+128),f
  4360  0D23  3EFF               	addlw	-1
  4361  0D24  1D03               	skipz
  4362  0D25  2D21               	goto	u3225
  4363  0D26  0858               	movf	ADC_Start_Conv@set_adc_parameters^(0+128),w
  4364  0D27  3E04               	addlw	4
  4365  0D28  0084               	movwf	4
  4366  0D29  0C00               	rrf	0,w
  4367  0D2A  00CE               	movwf	(??_ADC_Start_Conv+1)^(0+128)
  4368  0D2B  0C4E               	rrf	(??_ADC_Start_Conv+1)^(0+128),w
  4369  0D2C  3903               	andlw	3
  4370  0D2D  00CF               	movwf	(??_ADC_Start_Conv+2)^(0+128)
  4371  0D2E  3005               	movlw	5
  4372  0D2F                     u3235:	
  4373  0D2F  1003               	clrc
  4374  0D30  0DCF               	rlf	(??_ADC_Start_Conv+2)^(0+128),f
  4375  0D31  3EFF               	addlw	-1
  4376  0D32  1D03               	skipz
  4377  0D33  2D2F               	goto	u3235
  4378  0D34  1003               	clrc
  4379  0D35  0D4F               	rlf	(??_ADC_Start_Conv+2)^(0+128),w
  4380  0D36  044D               	iorwf	??_ADC_Start_Conv^(0+128),w
  4381  0D37  3838               	iorlw	56
  4382  0D38  1283               	bcf	3,5	;RP0=0, select bank0
  4383  0D39  1303               	bcf	3,6	;RP1=0, select bank0
  4384  0D3A  009F               	movwf	31	;volatile
  4385                           
  4386                           ;adc.c: 166: }
  4387                           ;adc.c: 167: break;
  4388  0D3B  0008               	return
  4389  0D3C                     l3375:	
  4390                           ;adc.c: 168: default:
  4391                           
  4392                           
  4393                           ;adc.c: 171: UART_Transmit_Str("ERR: try to start ADC while ADC Converting \r");
  4394  0D3C  30E3               	movlw	low (STR_2| (0+32768))
  4395  0D3D  1283               	bcf	3,5	;RP0=0, select bank0
  4396  0D3E  00AE               	movwf	UART_Transmit_Str@transmit_str
  4397  0D3F  3090               	movlw	high (STR_2| (0+32768))
  4398  0D40  00AF               	movwf	UART_Transmit_Str@transmit_str+1
  4399  0D41  120A  158A  20C8   	fcall	_UART_Transmit_Str
  4400                           
  4401                           ;adc.c: 173: }
  4402  0D44  0008               	return
  4403  0D45                     l3377:	
  4404  0D45  1683               	bsf	3,5	;RP0=1, select bank1
  4405  0D46  1303               	bcf	3,6	;RP1=0, select bank1
  4406  0D47  0853               	movf	ADC_Start_Conv@rcvd_status^(0+128),w
  4407                           
  4408                           ; Switch size 1, requested type "space"
  4409                           ; Number of cases is 1, Range of values is 110 to 110
  4410                           ; switch strategies available:
  4411                           ; Name         Instructions Cycles
  4412                           ; simple_byte            4     3 (average)
  4413                           ; direct_byte           14    11 (fixed)
  4414                           ; jumptable            263     9 (fixed)
  4415                           ;	Chosen strategy is simple_byte
  4416  0D48  3A6E               	xorlw	110	; case 110
  4417  0D49  1903               	skipnz
  4418  0D4A  2BCB               	goto	l3325
  4419  0D4B  2D3C               	goto	l3375
  4420  0D4C                     l65:	
  4421  0D4C  0008               	return
  4422  0D4D                     __end_of_ADC_Start_Conv:	
  4423                           
  4424                           	psect	text5
  4425  08C8                     __ptext5:	
  4426 ;; *************** function _UART_Transmit_Str *****************
  4427 ;; Defined at:
  4428 ;;		line 83 in file "uart.c"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;  transmit_str    2   14[BANK0 ] PTR const unsigned char 
  4431 ;;		 -> STR_14(54), STR_13(46), STR_12(52), STR_11(13), 
  4432 ;;		 -> STR_10(13), STR_9(21), STR_8(25), STR_7(25), 
  4433 ;;		 -> STR_6(3), STR_5(3), STR_4(3), STR_3(47), 
  4434 ;;		 -> STR_2(45), STR_1(35), 
  4435 ;; Auto vars:     Size  Location     Type
  4436 ;;		None
  4437 ;; Return value:  Size  Location     Type
  4438 ;;                  1    wreg      void 
  4439 ;; Registers used:
  4440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4441 ;; Tracked objects:
  4442 ;;		On entry : 0/0
  4443 ;;		On exit  : 0/0
  4444 ;;		Unchanged: 0/0
  4445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4446 ;;      Params:         0       2       0       0       0
  4447 ;;      Locals:         0       0       0       0       0
  4448 ;;      Temps:          0       0       0       0       0
  4449 ;;      Totals:         0       2       0       0       0
  4450 ;;Total ram usage:        2 bytes
  4451 ;; Hardware stack levels used:    1
  4452 ;; Hardware stack levels required when called:    3
  4453 ;; This function calls:
  4454 ;;		_UART_Transmit_Char
  4455 ;; This function is called by:
  4456 ;;		_ADC_Start_Conv
  4457 ;;		_main
  4458 ;;		_ADC_Disable
  4459 ;;		_UART_Receive_Char
  4460 ;;		_Timer1_Run
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           
  4465                           ;psect for function _UART_Transmit_Str
  4466  08C8                     _UART_Transmit_Str:	
  4467  08C8                     l3213:	
  4468                           ;uart.c: 85: while(*transmit_str)
  4469                           
  4470                           ;incstack = 0
  4471                           ; Regs used in _UART_Transmit_Str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4472                           
  4473  08C8  1283               	bcf	3,5	;RP0=0, select bank0
  4474  08C9  1303               	bcf	3,6	;RP1=0, select bank0
  4475  08CA  082F               	movf	UART_Transmit_Str@transmit_str+1,w
  4476  08CB  00FF               	movwf	127
  4477  08CC  082E               	movf	UART_Transmit_Str@transmit_str,w
  4478  08CD  0084               	movwf	4
  4479  08CE  160A  118A  2000  120A  158A  	fcall	stringtab
  4480  08D3  3A00               	xorlw	0
  4481  08D4  1903               	btfsc	3,2
  4482  08D5  0008               	return
  4483                           
  4484                           ;uart.c: 86: {
  4485                           ;uart.c: 87: UART_Transmit_Char(*transmit_str);
  4486  08D6  1283               	bcf	3,5	;RP0=0, select bank0
  4487  08D7  1303               	bcf	3,6	;RP1=0, select bank0
  4488  08D8  082F               	movf	UART_Transmit_Str@transmit_str+1,w
  4489  08D9  00FF               	movwf	127
  4490  08DA  082E               	movf	UART_Transmit_Str@transmit_str,w
  4491  08DB  0084               	movwf	4
  4492  08DC  160A  118A  2000  120A  158A  	fcall	stringtab
  4493  08E1  120A  158A  205A  120A  158A  	fcall	_UART_Transmit_Char
  4494                           
  4495                           ;uart.c: 88: ++transmit_str;
  4496  08E6  3001               	movlw	1
  4497  08E7  1283               	bcf	3,5	;RP0=0, select bank0
  4498  08E8  1303               	bcf	3,6	;RP1=0, select bank0
  4499  08E9  07AE               	addwf	UART_Transmit_Str@transmit_str,f
  4500  08EA  1803               	skipnc
  4501  08EB  0AAF               	incf	UART_Transmit_Str@transmit_str+1,f
  4502  08EC  28C8               	goto	l3213
  4503  08ED                     __end_of_UART_Transmit_Str:	
  4504                           
  4505                           	psect	text6
  4506  0452                     __ptext6:	
  4507 ;; *************** function _UART_Transmit_Num *****************
  4508 ;; Defined at:
  4509 ;;		line 370 in file "uart.c"
  4510 ;; Parameters:    Size  Location     Type
  4511 ;;  uart_datanum    1    wreg     const enum E1694
  4512 ;;  uart_disp_da    4   40[BANK0 ] const struct .
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;  uart_datanum    1   28[BANK1 ] const enum E1694
  4515 ;;  hex_data       16    0[BANK1 ] unsigned char [16]
  4516 ;;  num_data       10   16[BANK1 ] unsigned char [10]
  4517 ;;  disp_num        4   41[BANK1 ] unsigned long 
  4518 ;;  num             4   37[BANK1 ] unsigned long 
  4519 ;;  unit_digit      2   35[BANK1 ] unsigned int 
  4520 ;;  tens_digit      2   33[BANK1 ] unsigned int 
  4521 ;;  hundreds_dig    2   31[BANK1 ] unsigned int 
  4522 ;;  thousands_di    2   29[BANK1 ] unsigned int 
  4523 ;;  tens_thousan    2   26[BANK1 ] unsigned int 
  4524 ;; Return value:  Size  Location     Type
  4525 ;;                  1    wreg      void 
  4526 ;; Registers used:
  4527 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4528 ;; Tracked objects:
  4529 ;;		On entry : 0/0
  4530 ;;		On exit  : 0/0
  4531 ;;		Unchanged: 0/0
  4532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4533 ;;      Params:         0       4       0       0       0
  4534 ;;      Locals:         0       0      45       0       0
  4535 ;;      Temps:          0       4       0       0       0
  4536 ;;      Totals:         0       8      45       0       0
  4537 ;;Total ram usage:       53 bytes
  4538 ;; Hardware stack levels used:    1
  4539 ;; Hardware stack levels required when called:    3
  4540 ;; This function calls:
  4541 ;;		_UART_Transmit_Char
  4542 ;;		___lldiv
  4543 ;;		___llmod
  4544 ;; This function is called by:
  4545 ;;		_ADC_Start_Conv
  4546 ;;		_main
  4547 ;; This function uses a non-reentrant model
  4548 ;;
  4549                           
  4550                           
  4551                           ;psect for function _UART_Transmit_Num
  4552  0452                     _UART_Transmit_Num:	
  4553                           
  4554                           ;incstack = 0
  4555                           ; Regs used in _UART_Transmit_Num: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4556                           ;UART_Transmit_Num@uart_datanum_disp_format stored from wreg
  4557  0452  1683               	bsf	3,5	;RP0=1, select bank1
  4558  0453  1303               	bcf	3,6	;RP1=0, select bank1
  4559  0454  00BC               	movwf	UART_Transmit_Num@uart_datanum_disp_format^(0+128)
  4560                           
  4561                           ;uart.c: 372: unsigned int tens_thousand_digit,thousands_digit, hundreds_digit,tens_digi
      +                          t, unit_digit;
  4562                           ;uart.c: 373: unsigned long disp_num, num ;
  4563                           ;uart.c: 374: char num_data[] ={'0','1','2','3','4','5','6','7','8','9'};
  4564  0455  30B0               	movlw	UART_Transmit_Num@num_data& (0+255)
  4565  0456  0084               	movwf	4
  4566  0457  3030               	movlw	low UART_Transmit_Num@F1843
  4567  0458  1283               	bcf	3,5	;RP0=0, select bank0
  4568  0459  1303               	bcf	3,6	;RP1=0, select bank0
  4569  045A  00CC               	movwf	??_UART_Transmit_Num
  4570  045B  0804               	movf	4,w
  4571  045C  00CD               	movwf	??_UART_Transmit_Num+1
  4572  045D  300A               	movlw	10
  4573  045E  00CE               	movwf	??_UART_Transmit_Num+2
  4574  045F                     u2950:	
  4575  045F  084C               	movf	??_UART_Transmit_Num,w
  4576  0460  0084               	movwf	4
  4577  0461  1783               	bsf	3,7	;select IRP bank2
  4578  0462  0800               	movf	0,w
  4579  0463  00CF               	movwf	??_UART_Transmit_Num+3
  4580  0464  0ACC               	incf	??_UART_Transmit_Num,f
  4581  0465  084D               	movf	??_UART_Transmit_Num+1,w
  4582  0466  0084               	movwf	4
  4583  0467  1383               	bcf	3,7	;select IRP bank1
  4584  0468  084F               	movf	??_UART_Transmit_Num+3,w
  4585  0469  0080               	movwf	0
  4586  046A  0ACD               	incf	??_UART_Transmit_Num+1,f
  4587  046B  0BCE               	decfsz	??_UART_Transmit_Num+2,f
  4588  046C  2C5F               	goto	u2950
  4589                           
  4590                           ;uart.c: 375: char hex_data[] ={'0','1','2','3','4','5','6','7','8','9','A','B','C','D',
      +                          'E','F'};
  4591  046D  30A0               	movlw	UART_Transmit_Num@hex_data& (0+255)
  4592  046E  0084               	movwf	4
  4593  046F  3010               	movlw	low UART_Transmit_Num@F1845
  4594  0470  00CC               	movwf	??_UART_Transmit_Num
  4595  0471  0804               	movf	4,w
  4596  0472  00CD               	movwf	??_UART_Transmit_Num+1
  4597  0473  3010               	movlw	16
  4598  0474  00CE               	movwf	??_UART_Transmit_Num+2
  4599  0475                     u2960:	
  4600  0475  084C               	movf	??_UART_Transmit_Num,w
  4601  0476  0084               	movwf	4
  4602  0477  1783               	bsf	3,7	;select IRP bank2
  4603  0478  0800               	movf	0,w
  4604  0479  00CF               	movwf	??_UART_Transmit_Num+3
  4605  047A  0ACC               	incf	??_UART_Transmit_Num,f
  4606  047B  084D               	movf	??_UART_Transmit_Num+1,w
  4607  047C  0084               	movwf	4
  4608  047D  1383               	bcf	3,7	;select IRP bank1
  4609  047E  084F               	movf	??_UART_Transmit_Num+3,w
  4610  047F  0080               	movwf	0
  4611  0480  0ACD               	incf	??_UART_Transmit_Num+1,f
  4612  0481  0BCE               	decfsz	??_UART_Transmit_Num+2,f
  4613  0482  2C75               	goto	u2960
  4614                           
  4615                           ;uart.c: 378: if(uart_datanum_disp_format & 0x10 )
  4616  0483  1683               	bsf	3,5	;RP0=1, select bank1
  4617  0484  1303               	bcf	3,6	;RP1=0, select bank1
  4618  0485  1E3C               	btfss	UART_Transmit_Num@uart_datanum_disp_format^(0+128),4
  4619  0486  2CB7               	goto	l3229
  4620                           
  4621                           ;uart.c: 379: {
  4622                           ;uart.c: 380: if(uart_disp_data_int.signed_val.value_long < 0 )
  4623  0487  1283               	bcf	3,5	;RP0=0, select bank0
  4624  0488  1303               	bcf	3,6	;RP1=0, select bank0
  4625  0489  1FCB               	btfss	UART_Transmit_Num@uart_disp_data_int+3,7
  4626  048A  2CB1               	goto	l3225
  4627                           
  4628                           ;uart.c: 381: {
  4629                           ;uart.c: 382: UART_Transmit_Char('-');
  4630  048B  302D               	movlw	45
  4631  048C  120A  158A  205A  120A  118A  	fcall	_UART_Transmit_Char
  4632                           
  4633                           ;uart.c: 383: disp_num = -uart_disp_data_int.signed_val.value_long;
  4634  0491  1283               	bcf	3,5	;RP0=0, select bank0
  4635  0492  1303               	bcf	3,6	;RP1=0, select bank0
  4636  0493  0948               	comf	UART_Transmit_Num@uart_disp_data_int,w
  4637  0494  1683               	bsf	3,5	;RP0=1, select bank1
  4638  0495  1303               	bcf	3,6	;RP1=0, select bank1
  4639  0496  00C9               	movwf	UART_Transmit_Num@disp_num^(0+128)
  4640  0497  1283               	bcf	3,5	;RP0=0, select bank0
  4641  0498  1303               	bcf	3,6	;RP1=0, select bank0
  4642  0499  0949               	comf	UART_Transmit_Num@uart_disp_data_int+1,w
  4643  049A  1683               	bsf	3,5	;RP0=1, select bank1
  4644  049B  1303               	bcf	3,6	;RP1=0, select bank1
  4645  049C  00CA               	movwf	(UART_Transmit_Num@disp_num+1)^(0+128)
  4646  049D  1283               	bcf	3,5	;RP0=0, select bank0
  4647  049E  1303               	bcf	3,6	;RP1=0, select bank0
  4648  049F  094A               	comf	UART_Transmit_Num@uart_disp_data_int+2,w
  4649  04A0  1683               	bsf	3,5	;RP0=1, select bank1
  4650  04A1  1303               	bcf	3,6	;RP1=0, select bank1
  4651  04A2  00CB               	movwf	(UART_Transmit_Num@disp_num+2)^(0+128)
  4652  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  4653  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  4654  04A5  094B               	comf	UART_Transmit_Num@uart_disp_data_int+3,w
  4655  04A6  1683               	bsf	3,5	;RP0=1, select bank1
  4656  04A7  1303               	bcf	3,6	;RP1=0, select bank1
  4657  04A8  00CC               	movwf	(UART_Transmit_Num@disp_num+3)^(0+128)
  4658  04A9  0AC9               	incf	UART_Transmit_Num@disp_num^(0+128),f
  4659  04AA  1903               	skipnz
  4660  04AB  0ACA               	incf	(UART_Transmit_Num@disp_num+1)^(0+128),f
  4661  04AC  1903               	skipnz
  4662  04AD  0ACB               	incf	(UART_Transmit_Num@disp_num+2)^(0+128),f
  4663  04AE  1903               	skipnz
  4664  04AF  0ACC               	incf	(UART_Transmit_Num@disp_num+3)^(0+128),f
  4665                           
  4666                           ;uart.c: 384: }
  4667  04B0  2CCF               	goto	l385
  4668  04B1                     l3225:	
  4669                           
  4670                           ;uart.c: 385: else
  4671                           ;uart.c: 386: {
  4672                           ;uart.c: 387: UART_Transmit_Char('+');
  4673  04B1  302B               	movlw	43
  4674  04B2  120A  158A  205A  120A  118A  	fcall	_UART_Transmit_Char
  4675  04B7                     l3229:	
  4676                           ;uart.c: 389: }
  4677                           ;uart.c: 391: }
  4678                           
  4679                           ;uart.c: 388: disp_num = uart_disp_data_int.signed_val.value_long;
  4680                           
  4681                           
  4682                           ;uart.c: 392: else
  4683                           ;uart.c: 393: {
  4684                           ;uart.c: 394: disp_num = uart_disp_data_int.unsigned_val.value_long;
  4685  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  4686  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  4687  04B9  084B               	movf	UART_Transmit_Num@uart_disp_data_int+3,w
  4688  04BA  1683               	bsf	3,5	;RP0=1, select bank1
  4689  04BB  1303               	bcf	3,6	;RP1=0, select bank1
  4690  04BC  00CC               	movwf	(UART_Transmit_Num@disp_num+3)^(0+128)
  4691  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  4692  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  4693  04BF  084A               	movf	UART_Transmit_Num@uart_disp_data_int+2,w
  4694  04C0  1683               	bsf	3,5	;RP0=1, select bank1
  4695  04C1  1303               	bcf	3,6	;RP1=0, select bank1
  4696  04C2  00CB               	movwf	(UART_Transmit_Num@disp_num+2)^(0+128)
  4697  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  4698  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  4699  04C5  0849               	movf	UART_Transmit_Num@uart_disp_data_int+1,w
  4700  04C6  1683               	bsf	3,5	;RP0=1, select bank1
  4701  04C7  1303               	bcf	3,6	;RP1=0, select bank1
  4702  04C8  00CA               	movwf	(UART_Transmit_Num@disp_num+1)^(0+128)
  4703  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  4704  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  4705  04CB  0848               	movf	UART_Transmit_Num@uart_disp_data_int,w
  4706  04CC  1683               	bsf	3,5	;RP0=1, select bank1
  4707  04CD  1303               	bcf	3,6	;RP1=0, select bank1
  4708  04CE  00C9               	movwf	UART_Transmit_Num@disp_num^(0+128)
  4709  04CF                     l385:	
  4710                           
  4711                           ;uart.c: 395: }
  4712                           ;uart.c: 396: num = disp_num ;
  4713  04CF  084C               	movf	(UART_Transmit_Num@disp_num+3)^(0+128),w
  4714  04D0  00C8               	movwf	(UART_Transmit_Num@num+3)^(0+128)
  4715  04D1  084B               	movf	(UART_Transmit_Num@disp_num+2)^(0+128),w
  4716  04D2  00C7               	movwf	(UART_Transmit_Num@num+2)^(0+128)
  4717  04D3  084A               	movf	(UART_Transmit_Num@disp_num+1)^(0+128),w
  4718  04D4  00C6               	movwf	(UART_Transmit_Num@num+1)^(0+128)
  4719  04D5  0849               	movf	UART_Transmit_Num@disp_num^(0+128),w
  4720  04D6  00C5               	movwf	UART_Transmit_Num@num^(0+128)
  4721                           
  4722                           ;uart.c: 398: switch(uart_datanum_disp_format)
  4723  04D7  2F95               	goto	l3279
  4724  04D8                     l3231:	
  4725                           ;uart.c: 399: {
  4726                           ;uart.c: 400: case DISP_UNSIGN_NUM_DIGIT5:
  4727                           
  4728                           
  4729                           ;uart.c: 401: case DISP_SIGN_NUM_DIGIT5:
  4730                           ;uart.c: 402: num = disp_num ;
  4731  04D8  084C               	movf	(UART_Transmit_Num@disp_num+3)^(0+128),w
  4732  04D9  00C8               	movwf	(UART_Transmit_Num@num+3)^(0+128)
  4733  04DA  084B               	movf	(UART_Transmit_Num@disp_num+2)^(0+128),w
  4734  04DB  00C7               	movwf	(UART_Transmit_Num@num+2)^(0+128)
  4735  04DC  084A               	movf	(UART_Transmit_Num@disp_num+1)^(0+128),w
  4736  04DD  00C6               	movwf	(UART_Transmit_Num@num+1)^(0+128)
  4737  04DE  0849               	movf	UART_Transmit_Num@disp_num^(0+128),w
  4738  04DF  00C5               	movwf	UART_Transmit_Num@num^(0+128)
  4739                           
  4740                           ;uart.c: 403: tens_thousand_digit = (unsigned int)(num / (unsigned long)(10000UL));
  4741  04E0  3000               	movlw	0
  4742  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  4743  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  4744  04E3  00BD               	movwf	___lldiv@divisor+3
  4745  04E4  3000               	movlw	0
  4746  04E5  00BC               	movwf	___lldiv@divisor+2
  4747  04E6  3027               	movlw	39
  4748  04E7  00BB               	movwf	___lldiv@divisor+1
  4749  04E8  3010               	movlw	16
  4750  04E9  00BA               	movwf	___lldiv@divisor
  4751  04EA  1683               	bsf	3,5	;RP0=1, select bank1
  4752  04EB  1303               	bcf	3,6	;RP1=0, select bank1
  4753  04EC  0848               	movf	(UART_Transmit_Num@num+3)^(0+128),w
  4754  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  4755  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  4756  04EF  00C1               	movwf	___lldiv@dividend+3
  4757  04F0  1683               	bsf	3,5	;RP0=1, select bank1
  4758  04F1  1303               	bcf	3,6	;RP1=0, select bank1
  4759  04F2  0847               	movf	(UART_Transmit_Num@num+2)^(0+128),w
  4760  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  4761  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  4762  04F5  00C0               	movwf	___lldiv@dividend+2
  4763  04F6  1683               	bsf	3,5	;RP0=1, select bank1
  4764  04F7  1303               	bcf	3,6	;RP1=0, select bank1
  4765  04F8  0846               	movf	(UART_Transmit_Num@num+1)^(0+128),w
  4766  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  4767  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  4768  04FB  00BF               	movwf	___lldiv@dividend+1
  4769  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  4770  04FD  1303               	bcf	3,6	;RP1=0, select bank1
  4771  04FE  0845               	movf	UART_Transmit_Num@num^(0+128),w
  4772  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  4773  0500  1303               	bcf	3,6	;RP1=0, select bank0
  4774  0501  00BE               	movwf	___lldiv@dividend
  4775  0502  120A  158A  217C  120A  118A  	fcall	___lldiv
  4776  0507  1283               	bcf	3,5	;RP0=0, select bank0
  4777  0508  1303               	bcf	3,6	;RP1=0, select bank0
  4778  0509  083B               	movf	?___lldiv+1,w
  4779  050A  1683               	bsf	3,5	;RP0=1, select bank1
  4780  050B  1303               	bcf	3,6	;RP1=0, select bank1
  4781  050C  00BB               	movwf	(UART_Transmit_Num@tens_thousand_digit+1)^(0+128)
  4782  050D  1283               	bcf	3,5	;RP0=0, select bank0
  4783  050E  1303               	bcf	3,6	;RP1=0, select bank0
  4784  050F  083A               	movf	?___lldiv,w
  4785  0510  1683               	bsf	3,5	;RP0=1, select bank1
  4786  0511  1303               	bcf	3,6	;RP1=0, select bank1
  4787  0512  00BA               	movwf	UART_Transmit_Num@tens_thousand_digit^(0+128)
  4788                           
  4789                           ;uart.c: 404: UART_Transmit_Char(num_data[tens_thousand_digit]);
  4790  0513  083A               	movf	UART_Transmit_Num@tens_thousand_digit^(0+128),w
  4791  0514  3EB0               	addlw	(low (UART_Transmit_Num@num_data| 0))& (0+255)
  4792  0515  0084               	movwf	4
  4793  0516  1383               	bcf	3,7	;select IRP bank1
  4794  0517  0800               	movf	0,w
  4795  0518  120A  158A  205A  120A  118A  	fcall	_UART_Transmit_Char
  4796  051D                     l3237:	
  4797                           ;uart.c: 405: case DISP_UNSIGN_NUM_DIGIT4:
  4798                           
  4799                           
  4800                           ;uart.c: 406: case DISP_SIGN_NUM_DIGIT4:
  4801                           ;uart.c: 407: num = disp_num % 10000UL;
  4802  051D  3000               	movlw	0
  4803  051E  1283               	bcf	3,5	;RP0=0, select bank0
  4804  051F  1303               	bcf	3,6	;RP1=0, select bank0
  4805  0520  00BD               	movwf	___llmod@divisor+3
  4806  0521  3000               	movlw	0
  4807  0522  00BC               	movwf	___llmod@divisor+2
  4808  0523  3027               	movlw	39
  4809  0524  00BB               	movwf	___llmod@divisor+1
  4810  0525  3010               	movlw	16
  4811  0526  00BA               	movwf	___llmod@divisor
  4812  0527  1683               	bsf	3,5	;RP0=1, select bank1
  4813  0528  1303               	bcf	3,6	;RP1=0, select bank1
  4814  0529  084C               	movf	(UART_Transmit_Num@disp_num+3)^(0+128),w
  4815  052A  1283               	bcf	3,5	;RP0=0, select bank0
  4816  052B  1303               	bcf	3,6	;RP1=0, select bank0
  4817  052C  00C1               	movwf	___llmod@dividend+3
  4818  052D  1683               	bsf	3,5	;RP0=1, select bank1
  4819  052E  1303               	bcf	3,6	;RP1=0, select bank1
  4820  052F  084B               	movf	(UART_Transmit_Num@disp_num+2)^(0+128),w
  4821  0530  1283               	bcf	3,5	;RP0=0, select bank0
  4822  0531  1303               	bcf	3,6	;RP1=0, select bank0
  4823  0532  00C0               	movwf	___llmod@dividend+2
  4824  0533  1683               	bsf	3,5	;RP0=1, select bank1
  4825  0534  1303               	bcf	3,6	;RP1=0, select bank1
  4826  0535  084A               	movf	(UART_Transmit_Num@disp_num+1)^(0+128),w
  4827  0536  1283               	bcf	3,5	;RP0=0, select bank0
  4828  0537  1303               	bcf	3,6	;RP1=0, select bank0
  4829  0538  00BF               	movwf	___llmod@dividend+1
  4830  0539  1683               	bsf	3,5	;RP0=1, select bank1
  4831  053A  1303               	bcf	3,6	;RP1=0, select bank1
  4832  053B  0849               	movf	UART_Transmit_Num@disp_num^(0+128),w
  4833  053C  1283               	bcf	3,5	;RP0=0, select bank0
  4834  053D  1303               	bcf	3,6	;RP1=0, select bank0
  4835  053E  00BE               	movwf	___llmod@dividend
  4836  053F  120A  158A  212E  120A  118A  	fcall	___llmod
  4837  0544  1283               	bcf	3,5	;RP0=0, select bank0
  4838  0545  1303               	bcf	3,6	;RP1=0, select bank0
  4839  0546  083D               	movf	?___llmod+3,w
  4840  0547  1683               	bsf	3,5	;RP0=1, select bank1
  4841  0548  1303               	bcf	3,6	;RP1=0, select bank1
  4842  0549  00C8               	movwf	(UART_Transmit_Num@num+3)^(0+128)
  4843  054A  1283               	bcf	3,5	;RP0=0, select bank0
  4844  054B  1303               	bcf	3,6	;RP1=0, select bank0
  4845  054C  083C               	movf	?___llmod+2,w
  4846  054D  1683               	bsf	3,5	;RP0=1, select bank1
  4847  054E  1303               	bcf	3,6	;RP1=0, select bank1
  4848  054F  00C7               	movwf	(UART_Transmit_Num@num+2)^(0+128)
  4849  0550  1283               	bcf	3,5	;RP0=0, select bank0
  4850  0551  1303               	bcf	3,6	;RP1=0, select bank0
  4851  0552  083B               	movf	?___llmod+1,w
  4852  0553  1683               	bsf	3,5	;RP0=1, select bank1
  4853  0554  1303               	bcf	3,6	;RP1=0, select bank1
  4854  0555  00C6               	movwf	(UART_Transmit_Num@num+1)^(0+128)
  4855  0556  1283               	bcf	3,5	;RP0=0, select bank0
  4856  0557  1303               	bcf	3,6	;RP1=0, select bank0
  4857  0558  083A               	movf	?___llmod,w
  4858  0559  1683               	bsf	3,5	;RP0=1, select bank1
  4859  055A  1303               	bcf	3,6	;RP1=0, select bank1
  4860  055B  00C5               	movwf	UART_Transmit_Num@num^(0+128)
  4861                           
  4862                           ;uart.c: 408: thousands_digit = (unsigned int)(num / (unsigned long)(1000UL));
  4863  055C  3000               	movlw	0
  4864  055D  1283               	bcf	3,5	;RP0=0, select bank0
  4865  055E  1303               	bcf	3,6	;RP1=0, select bank0
  4866  055F  00BD               	movwf	___lldiv@divisor+3
  4867  0560  3000               	movlw	0
  4868  0561  00BC               	movwf	___lldiv@divisor+2
  4869  0562  3003               	movlw	3
  4870  0563  00BB               	movwf	___lldiv@divisor+1
  4871  0564  30E8               	movlw	232
  4872  0565  00BA               	movwf	___lldiv@divisor
  4873  0566  1683               	bsf	3,5	;RP0=1, select bank1
  4874  0567  1303               	bcf	3,6	;RP1=0, select bank1
  4875  0568  0848               	movf	(UART_Transmit_Num@num+3)^(0+128),w
  4876  0569  1283               	bcf	3,5	;RP0=0, select bank0
  4877  056A  1303               	bcf	3,6	;RP1=0, select bank0
  4878  056B  00C1               	movwf	___lldiv@dividend+3
  4879  056C  1683               	bsf	3,5	;RP0=1, select bank1
  4880  056D  1303               	bcf	3,6	;RP1=0, select bank1
  4881  056E  0847               	movf	(UART_Transmit_Num@num+2)^(0+128),w
  4882  056F  1283               	bcf	3,5	;RP0=0, select bank0
  4883  0570  1303               	bcf	3,6	;RP1=0, select bank0
  4884  0571  00C0               	movwf	___lldiv@dividend+2
  4885  0572  1683               	bsf	3,5	;RP0=1, select bank1
  4886  0573  1303               	bcf	3,6	;RP1=0, select bank1
  4887  0574  0846               	movf	(UART_Transmit_Num@num+1)^(0+128),w
  4888  0575  1283               	bcf	3,5	;RP0=0, select bank0
  4889  0576  1303               	bcf	3,6	;RP1=0, select bank0
  4890  0577  00BF               	movwf	___lldiv@dividend+1
  4891  0578  1683               	bsf	3,5	;RP0=1, select bank1
  4892  0579  1303               	bcf	3,6	;RP1=0, select bank1
  4893  057A  0845               	movf	UART_Transmit_Num@num^(0+128),w
  4894  057B  1283               	bcf	3,5	;RP0=0, select bank0
  4895  057C  1303               	bcf	3,6	;RP1=0, select bank0
  4896  057D  00BE               	movwf	___lldiv@dividend
  4897  057E  120A  158A  217C  120A  118A  	fcall	___lldiv
  4898  0583  1283               	bcf	3,5	;RP0=0, select bank0
  4899  0584  1303               	bcf	3,6	;RP1=0, select bank0
  4900  0585  083B               	movf	?___lldiv+1,w
  4901  0586  1683               	bsf	3,5	;RP0=1, select bank1
  4902  0587  1303               	bcf	3,6	;RP1=0, select bank1
  4903  0588  00BE               	movwf	(UART_Transmit_Num@thousands_digit+1)^(0+128)
  4904  0589  1283               	bcf	3,5	;RP0=0, select bank0
  4905  058A  1303               	bcf	3,6	;RP1=0, select bank0
  4906  058B  083A               	movf	?___lldiv,w
  4907  058C  1683               	bsf	3,5	;RP0=1, select bank1
  4908  058D  1303               	bcf	3,6	;RP1=0, select bank1
  4909  058E  00BD               	movwf	UART_Transmit_Num@thousands_digit^(0+128)
  4910                           
  4911                           ;uart.c: 409: UART_Transmit_Char(num_data[thousands_digit]);
  4912  058F  083D               	movf	UART_Transmit_Num@thousands_digit^(0+128),w
  4913  0590  3EB0               	addlw	(low (UART_Transmit_Num@num_data| 0))& (0+255)
  4914  0591  0084               	movwf	4
  4915  0592  1383               	bcf	3,7	;select IRP bank1
  4916  0593  0800               	movf	0,w
  4917  0594  120A  158A  205A  120A  118A  	fcall	_UART_Transmit_Char
  4918  0599                     l3243:	
  4919                           ;uart.c: 410: case DISP_UNSIGN_NUM_DIGIT3:
  4920                           
  4921                           
  4922                           ;uart.c: 411: case DISP_SIGN_NUM_DIGIT3:
  4923                           ;uart.c: 412: num = disp_num % 1000UL;
  4924  0599  3000               	movlw	0
  4925  059A  1283               	bcf	3,5	;RP0=0, select bank0
  4926  059B  1303               	bcf	3,6	;RP1=0, select bank0
  4927  059C  00BD               	movwf	___llmod@divisor+3
  4928  059D  3000               	movlw	0
  4929  059E  00BC               	movwf	___llmod@divisor+2
  4930  059F  3003               	movlw	3
  4931  05A0  00BB               	movwf	___llmod@divisor+1
  4932  05A1  30E8               	movlw	232
  4933  05A2  00BA               	movwf	___llmod@divisor
  4934  05A3  1683               	bsf	3,5	;RP0=1, select bank1
  4935  05A4  1303               	bcf	3,6	;RP1=0, select bank1
  4936  05A5  084C               	movf	(UART_Transmit_Num@disp_num+3)^(0+128),w
  4937  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  4938  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  4939  05A8  00C1               	movwf	___llmod@dividend+3
  4940  05A9  1683               	bsf	3,5	;RP0=1, select bank1
  4941  05AA  1303               	bcf	3,6	;RP1=0, select bank1
  4942  05AB  084B               	movf	(UART_Transmit_Num@disp_num+2)^(0+128),w
  4943  05AC  1283               	bcf	3,5	;RP0=0, select bank0
  4944  05AD  1303               	bcf	3,6	;RP1=0, select bank0
  4945  05AE  00C0               	movwf	___llmod@dividend+2
  4946  05AF  1683               	bsf	3,5	;RP0=1, select bank1
  4947  05B0  1303               	bcf	3,6	;RP1=0, select bank1
  4948  05B1  084A               	movf	(UART_Transmit_Num@disp_num+1)^(0+128),w
  4949  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  4950  05B3  1303               	bcf	3,6	;RP1=0, select bank0
  4951  05B4  00BF               	movwf	___llmod@dividend+1
  4952  05B5  1683               	bsf	3,5	;RP0=1, select bank1
  4953  05B6  1303               	bcf	3,6	;RP1=0, select bank1
  4954  05B7  0849               	movf	UART_Transmit_Num@disp_num^(0+128),w
  4955  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  4956  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  4957  05BA  00BE               	movwf	___llmod@dividend
  4958  05BB  120A  158A  212E  120A  118A  	fcall	___llmod
  4959  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  4960  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  4961  05C2  083D               	movf	?___llmod+3,w
  4962  05C3  1683               	bsf	3,5	;RP0=1, select bank1
  4963  05C4  1303               	bcf	3,6	;RP1=0, select bank1
  4964  05C5  00C8               	movwf	(UART_Transmit_Num@num+3)^(0+128)
  4965  05C6  1283               	bcf	3,5	;RP0=0, select bank0
  4966  05C7  1303               	bcf	3,6	;RP1=0, select bank0
  4967  05C8  083C               	movf	?___llmod+2,w
  4968  05C9  1683               	bsf	3,5	;RP0=1, select bank1
  4969  05CA  1303               	bcf	3,6	;RP1=0, select bank1
  4970  05CB  00C7               	movwf	(UART_Transmit_Num@num+2)^(0+128)
  4971  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  4972  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  4973  05CE  083B               	movf	?___llmod+1,w
  4974  05CF  1683               	bsf	3,5	;RP0=1, select bank1
  4975  05D0  1303               	bcf	3,6	;RP1=0, select bank1
  4976  05D1  00C6               	movwf	(UART_Transmit_Num@num+1)^(0+128)
  4977  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  4978  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  4979  05D4  083A               	movf	?___llmod,w
  4980  05D5  1683               	bsf	3,5	;RP0=1, select bank1
  4981  05D6  1303               	bcf	3,6	;RP1=0, select bank1
  4982  05D7  00C5               	movwf	UART_Transmit_Num@num^(0+128)
  4983                           
  4984                           ;uart.c: 413: hundreds_digit = (unsigned int) (num / (unsigned long) (100));
  4985  05D8  3000               	movlw	0
  4986  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  4987  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  4988  05DB  00BD               	movwf	___lldiv@divisor+3
  4989  05DC  3000               	movlw	0
  4990  05DD  00BC               	movwf	___lldiv@divisor+2
  4991  05DE  3000               	movlw	0
  4992  05DF  00BB               	movwf	___lldiv@divisor+1
  4993  05E0  3064               	movlw	100
  4994  05E1  00BA               	movwf	___lldiv@divisor
  4995  05E2  1683               	bsf	3,5	;RP0=1, select bank1
  4996  05E3  1303               	bcf	3,6	;RP1=0, select bank1
  4997  05E4  0848               	movf	(UART_Transmit_Num@num+3)^(0+128),w
  4998  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  4999  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  5000  05E7  00C1               	movwf	___lldiv@dividend+3
  5001  05E8  1683               	bsf	3,5	;RP0=1, select bank1
  5002  05E9  1303               	bcf	3,6	;RP1=0, select bank1
  5003  05EA  0847               	movf	(UART_Transmit_Num@num+2)^(0+128),w
  5004  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  5005  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  5006  05ED  00C0               	movwf	___lldiv@dividend+2
  5007  05EE  1683               	bsf	3,5	;RP0=1, select bank1
  5008  05EF  1303               	bcf	3,6	;RP1=0, select bank1
  5009  05F0  0846               	movf	(UART_Transmit_Num@num+1)^(0+128),w
  5010  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  5011  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  5012  05F3  00BF               	movwf	___lldiv@dividend+1
  5013  05F4  1683               	bsf	3,5	;RP0=1, select bank1
  5014  05F5  1303               	bcf	3,6	;RP1=0, select bank1
  5015  05F6  0845               	movf	UART_Transmit_Num@num^(0+128),w
  5016  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  5017  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  5018  05F9  00BE               	movwf	___lldiv@dividend
  5019  05FA  120A  158A  217C  120A  118A  	fcall	___lldiv
  5020  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  5021  0600  1303               	bcf	3,6	;RP1=0, select bank0
  5022  0601  083B               	movf	?___lldiv+1,w
  5023  0602  1683               	bsf	3,5	;RP0=1, select bank1
  5024  0603  1303               	bcf	3,6	;RP1=0, select bank1
  5025  0604  00C0               	movwf	(UART_Transmit_Num@hundreds_digit+1)^(0+128)
  5026  0605  1283               	bcf	3,5	;RP0=0, select bank0
  5027  0606  1303               	bcf	3,6	;RP1=0, select bank0
  5028  0607  083A               	movf	?___lldiv,w
  5029  0608  1683               	bsf	3,5	;RP0=1, select bank1
  5030  0609  1303               	bcf	3,6	;RP1=0, select bank1
  5031  060A  00BF               	movwf	UART_Transmit_Num@hundreds_digit^(0+128)
  5032                           
  5033                           ;uart.c: 414: UART_Transmit_Char(num_data[hundreds_digit]);
  5034  060B  083F               	movf	UART_Transmit_Num@hundreds_digit^(0+128),w
  5035  060C  3EB0               	addlw	(low (UART_Transmit_Num@num_data| 0))& (0+255)
  5036  060D  0084               	movwf	4
  5037  060E  1383               	bcf	3,7	;select IRP bank1
  5038  060F  0800               	movf	0,w
  5039  0610  120A  158A  205A  120A  118A  	fcall	_UART_Transmit_Char
  5040  0615                     l3249:	
  5041                           ;uart.c: 415: case DISP_UNSIGN_NUM_DIGIT2:
  5042                           
  5043                           
  5044                           ;uart.c: 416: case DISP_SIGN_NUM_DIGIT2:
  5045                           ;uart.c: 417: num = disp_num % 100;
  5046  0615  3000               	movlw	0
  5047  0616  1283               	bcf	3,5	;RP0=0, select bank0
  5048  0617  1303               	bcf	3,6	;RP1=0, select bank0
  5049  0618  00BD               	movwf	___llmod@divisor+3
  5050  0619  3000               	movlw	0
  5051  061A  00BC               	movwf	___llmod@divisor+2
  5052  061B  3000               	movlw	0
  5053  061C  00BB               	movwf	___llmod@divisor+1
  5054  061D  3064               	movlw	100
  5055  061E  00BA               	movwf	___llmod@divisor
  5056  061F  1683               	bsf	3,5	;RP0=1, select bank1
  5057  0620  1303               	bcf	3,6	;RP1=0, select bank1
  5058  0621  084C               	movf	(UART_Transmit_Num@disp_num+3)^(0+128),w
  5059  0622  1283               	bcf	3,5	;RP0=0, select bank0
  5060  0623  1303               	bcf	3,6	;RP1=0, select bank0
  5061  0624  00C1               	movwf	___llmod@dividend+3
  5062  0625  1683               	bsf	3,5	;RP0=1, select bank1
  5063  0626  1303               	bcf	3,6	;RP1=0, select bank1
  5064  0627  084B               	movf	(UART_Transmit_Num@disp_num+2)^(0+128),w
  5065  0628  1283               	bcf	3,5	;RP0=0, select bank0
  5066  0629  1303               	bcf	3,6	;RP1=0, select bank0
  5067  062A  00C0               	movwf	___llmod@dividend+2
  5068  062B  1683               	bsf	3,5	;RP0=1, select bank1
  5069  062C  1303               	bcf	3,6	;RP1=0, select bank1
  5070  062D  084A               	movf	(UART_Transmit_Num@disp_num+1)^(0+128),w
  5071  062E  1283               	bcf	3,5	;RP0=0, select bank0
  5072  062F  1303               	bcf	3,6	;RP1=0, select bank0
  5073  0630  00BF               	movwf	___llmod@dividend+1
  5074  0631  1683               	bsf	3,5	;RP0=1, select bank1
  5075  0632  1303               	bcf	3,6	;RP1=0, select bank1
  5076  0633  0849               	movf	UART_Transmit_Num@disp_num^(0+128),w
  5077  0634  1283               	bcf	3,5	;RP0=0, select bank0
  5078  0635  1303               	bcf	3,6	;RP1=0, select bank0
  5079  0636  00BE               	movwf	___llmod@dividend
  5080  0637  120A  158A  212E  120A  118A  	fcall	___llmod
  5081  063C  1283               	bcf	3,5	;RP0=0, select bank0
  5082  063D  1303               	bcf	3,6	;RP1=0, select bank0
  5083  063E  083D               	movf	?___llmod+3,w
  5084  063F  1683               	bsf	3,5	;RP0=1, select bank1
  5085  0640  1303               	bcf	3,6	;RP1=0, select bank1
  5086  0641  00C8               	movwf	(UART_Transmit_Num@num+3)^(0+128)
  5087  0642  1283               	bcf	3,5	;RP0=0, select bank0
  5088  0643  1303               	bcf	3,6	;RP1=0, select bank0
  5089  0644  083C               	movf	?___llmod+2,w
  5090  0645  1683               	bsf	3,5	;RP0=1, select bank1
  5091  0646  1303               	bcf	3,6	;RP1=0, select bank1
  5092  0647  00C7               	movwf	(UART_Transmit_Num@num+2)^(0+128)
  5093  0648  1283               	bcf	3,5	;RP0=0, select bank0
  5094  0649  1303               	bcf	3,6	;RP1=0, select bank0
  5095  064A  083B               	movf	?___llmod+1,w
  5096  064B  1683               	bsf	3,5	;RP0=1, select bank1
  5097  064C  1303               	bcf	3,6	;RP1=0, select bank1
  5098  064D  00C6               	movwf	(UART_Transmit_Num@num+1)^(0+128)
  5099  064E  1283               	bcf	3,5	;RP0=0, select bank0
  5100  064F  1303               	bcf	3,6	;RP1=0, select bank0
  5101  0650  083A               	movf	?___llmod,w
  5102  0651  1683               	bsf	3,5	;RP0=1, select bank1
  5103  0652  1303               	bcf	3,6	;RP1=0, select bank1
  5104  0653  00C5               	movwf	UART_Transmit_Num@num^(0+128)
  5105                           
  5106                           ;uart.c: 418: tens_digit = (unsigned int) (num / 10);
  5107  0654  3000               	movlw	0
  5108  0655  1283               	bcf	3,5	;RP0=0, select bank0
  5109  0656  1303               	bcf	3,6	;RP1=0, select bank0
  5110  0657  00BD               	movwf	___lldiv@divisor+3
  5111  0658  3000               	movlw	0
  5112  0659  00BC               	movwf	___lldiv@divisor+2
  5113  065A  3000               	movlw	0
  5114  065B  00BB               	movwf	___lldiv@divisor+1
  5115  065C  300A               	movlw	10
  5116  065D  00BA               	movwf	___lldiv@divisor
  5117  065E  1683               	bsf	3,5	;RP0=1, select bank1
  5118  065F  1303               	bcf	3,6	;RP1=0, select bank1
  5119  0660  0848               	movf	(UART_Transmit_Num@num+3)^(0+128),w
  5120  0661  1283               	bcf	3,5	;RP0=0, select bank0
  5121  0662  1303               	bcf	3,6	;RP1=0, select bank0
  5122  0663  00C1               	movwf	___lldiv@dividend+3
  5123  0664  1683               	bsf	3,5	;RP0=1, select bank1
  5124  0665  1303               	bcf	3,6	;RP1=0, select bank1
  5125  0666  0847               	movf	(UART_Transmit_Num@num+2)^(0+128),w
  5126  0667  1283               	bcf	3,5	;RP0=0, select bank0
  5127  0668  1303               	bcf	3,6	;RP1=0, select bank0
  5128  0669  00C0               	movwf	___lldiv@dividend+2
  5129  066A  1683               	bsf	3,5	;RP0=1, select bank1
  5130  066B  1303               	bcf	3,6	;RP1=0, select bank1
  5131  066C  0846               	movf	(UART_Transmit_Num@num+1)^(0+128),w
  5132  066D  1283               	bcf	3,5	;RP0=0, select bank0
  5133  066E  1303               	bcf	3,6	;RP1=0, select bank0
  5134  066F  00BF               	movwf	___lldiv@dividend+1
  5135  0670  1683               	bsf	3,5	;RP0=1, select bank1
  5136  0671  1303               	bcf	3,6	;RP1=0, select bank1
  5137  0672  0845               	movf	UART_Transmit_Num@num^(0+128),w
  5138  0673  1283               	bcf	3,5	;RP0=0, select bank0
  5139  0674  1303               	bcf	3,6	;RP1=0, select bank0
  5140  0675  00BE               	movwf	___lldiv@dividend
  5141  0676  120A  158A  217C  120A  118A  	fcall	___lldiv
  5142  067B  1283               	bcf	3,5	;RP0=0, select bank0
  5143  067C  1303               	bcf	3,6	;RP1=0, select bank0
  5144  067D  083B               	movf	?___lldiv+1,w
  5145  067E  1683               	bsf	3,5	;RP0=1, select bank1
  5146  067F  1303               	bcf	3,6	;RP1=0, select bank1
  5147  0680  00C2               	movwf	(UART_Transmit_Num@tens_digit+1)^(0+128)
  5148  0681  1283               	bcf	3,5	;RP0=0, select bank0
  5149  0682  1303               	bcf	3,6	;RP1=0, select bank0
  5150  0683  083A               	movf	?___lldiv,w
  5151  0684  1683               	bsf	3,5	;RP0=1, select bank1
  5152  0685  1303               	bcf	3,6	;RP1=0, select bank1
  5153  0686  00C1               	movwf	UART_Transmit_Num@tens_digit^(0+128)
  5154                           
  5155                           ;uart.c: 419: UART_Transmit_Char(num_data[tens_digit]);
  5156  0687  0841               	movf	UART_Transmit_Num@tens_digit^(0+128),w
  5157  0688  3EB0               	addlw	(low (UART_Transmit_Num@num_data| 0))& (0+255)
  5158  0689  0084               	movwf	4
  5159  068A  1383               	bcf	3,7	;select IRP bank1
  5160  068B  0800               	movf	0,w
  5161  068C  120A  158A  205A  120A  118A  	fcall	_UART_Transmit_Char
  5162  0691                     l3255:	
  5163                           ;uart.c: 420: case DISP_UNSIGN_NUM_DIGIT1:
  5164                           
  5165                           
  5166                           ;uart.c: 421: case DISP_SIGN_NUM_DIGIT1:
  5167                           ;uart.c: 422: unit_digit = (unsigned int) (disp_num % 10);
  5168  0691  3000               	movlw	0
  5169  0692  1283               	bcf	3,5	;RP0=0, select bank0
  5170  0693  1303               	bcf	3,6	;RP1=0, select bank0
  5171  0694  00BD               	movwf	___llmod@divisor+3
  5172  0695  3000               	movlw	0
  5173  0696  00BC               	movwf	___llmod@divisor+2
  5174  0697  3000               	movlw	0
  5175  0698  00BB               	movwf	___llmod@divisor+1
  5176  0699  300A               	movlw	10
  5177  069A  00BA               	movwf	___llmod@divisor
  5178  069B  1683               	bsf	3,5	;RP0=1, select bank1
  5179  069C  1303               	bcf	3,6	;RP1=0, select bank1
  5180  069D  084C               	movf	(UART_Transmit_Num@disp_num+3)^(0+128),w
  5181  069E  1283               	bcf	3,5	;RP0=0, select bank0
  5182  069F  1303               	bcf	3,6	;RP1=0, select bank0
  5183  06A0  00C1               	movwf	___llmod@dividend+3
  5184  06A1  1683               	bsf	3,5	;RP0=1, select bank1
  5185  06A2  1303               	bcf	3,6	;RP1=0, select bank1
  5186  06A3  084B               	movf	(UART_Transmit_Num@disp_num+2)^(0+128),w
  5187  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  5188  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  5189  06A6  00C0               	movwf	___llmod@dividend+2
  5190  06A7  1683               	bsf	3,5	;RP0=1, select bank1
  5191  06A8  1303               	bcf	3,6	;RP1=0, select bank1
  5192  06A9  084A               	movf	(UART_Transmit_Num@disp_num+1)^(0+128),w
  5193  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  5194  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  5195  06AC  00BF               	movwf	___llmod@dividend+1
  5196  06AD  1683               	bsf	3,5	;RP0=1, select bank1
  5197  06AE  1303               	bcf	3,6	;RP1=0, select bank1
  5198  06AF  0849               	movf	UART_Transmit_Num@disp_num^(0+128),w
  5199  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  5200  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  5201  06B2  00BE               	movwf	___llmod@dividend
  5202  06B3  120A  158A  212E  120A  118A  	fcall	___llmod
  5203  06B8  1283               	bcf	3,5	;RP0=0, select bank0
  5204  06B9  1303               	bcf	3,6	;RP1=0, select bank0
  5205  06BA  083B               	movf	?___llmod+1,w
  5206  06BB  1683               	bsf	3,5	;RP0=1, select bank1
  5207  06BC  1303               	bcf	3,6	;RP1=0, select bank1
  5208  06BD  00C4               	movwf	(UART_Transmit_Num@unit_digit+1)^(0+128)
  5209  06BE  1283               	bcf	3,5	;RP0=0, select bank0
  5210  06BF  1303               	bcf	3,6	;RP1=0, select bank0
  5211  06C0  083A               	movf	?___llmod,w
  5212  06C1  1683               	bsf	3,5	;RP0=1, select bank1
  5213  06C2  1303               	bcf	3,6	;RP1=0, select bank1
  5214  06C3  00C3               	movwf	UART_Transmit_Num@unit_digit^(0+128)
  5215                           
  5216                           ;uart.c: 423: UART_Transmit_Char(num_data[unit_digit]);
  5217  06C4  0843               	movf	UART_Transmit_Num@unit_digit^(0+128),w
  5218  06C5  3EB0               	addlw	(low (UART_Transmit_Num@num_data| 0))& (0+255)
  5219  06C6  0084               	movwf	4
  5220  06C7  1383               	bcf	3,7	;select IRP bank1
  5221  06C8  0800               	movf	0,w
  5222  06C9  120A  158A  205A   	fcall	_UART_Transmit_Char
  5223                           
  5224                           ;uart.c: 424: break;
  5225  06CC  0008               	return
  5226  06CD                     l3259:	
  5227                           ;uart.c: 425: case DISP_HEX_DIGIT4:
  5228                           
  5229                           
  5230                           ;uart.c: 428: thousands_digit = (num / (unsigned long) (16 * 16 * 16));
  5231  06CD  1683               	bsf	3,5	;RP0=1, select bank1
  5232  06CE  1303               	bcf	3,6	;RP1=0, select bank1
  5233  06CF  0845               	movf	UART_Transmit_Num@num^(0+128),w
  5234  06D0  1283               	bcf	3,5	;RP0=0, select bank0
  5235  06D1  1303               	bcf	3,6	;RP1=0, select bank0
  5236  06D2  00CC               	movwf	??_UART_Transmit_Num
  5237  06D3  1683               	bsf	3,5	;RP0=1, select bank1
  5238  06D4  1303               	bcf	3,6	;RP1=0, select bank1
  5239  06D5  0846               	movf	(UART_Transmit_Num@num+1)^(0+128),w
  5240  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  5241  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  5242  06D8  00CD               	movwf	??_UART_Transmit_Num+1
  5243  06D9  1683               	bsf	3,5	;RP0=1, select bank1
  5244  06DA  1303               	bcf	3,6	;RP1=0, select bank1
  5245  06DB  0847               	movf	(UART_Transmit_Num@num+2)^(0+128),w
  5246  06DC  1283               	bcf	3,5	;RP0=0, select bank0
  5247  06DD  1303               	bcf	3,6	;RP1=0, select bank0
  5248  06DE  00CE               	movwf	??_UART_Transmit_Num+2
  5249  06DF  1683               	bsf	3,5	;RP0=1, select bank1
  5250  06E0  1303               	bcf	3,6	;RP1=0, select bank1
  5251  06E1  0848               	movf	(UART_Transmit_Num@num+3)^(0+128),w
  5252  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  5253  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  5254  06E4  00CF               	movwf	??_UART_Transmit_Num+3
  5255  06E5  300C               	movlw	12
  5256  06E6                     u2995:	
  5257  06E6  1003               	clrc
  5258  06E7  0CCF               	rrf	??_UART_Transmit_Num+3,f
  5259  06E8  0CCE               	rrf	??_UART_Transmit_Num+2,f
  5260  06E9  0CCD               	rrf	??_UART_Transmit_Num+1,f
  5261  06EA  0CCC               	rrf	??_UART_Transmit_Num,f
  5262  06EB  3EFF               	addlw	-1
  5263  06EC  1D03               	skipz
  5264  06ED  2EE6               	goto	u2995
  5265  06EE  084D               	movf	??_UART_Transmit_Num+1,w
  5266  06EF  1683               	bsf	3,5	;RP0=1, select bank1
  5267  06F0  1303               	bcf	3,6	;RP1=0, select bank1
  5268  06F1  00BE               	movwf	(UART_Transmit_Num@thousands_digit+1)^(0+128)
  5269  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  5270  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  5271  06F4  084C               	movf	??_UART_Transmit_Num,w
  5272  06F5  1683               	bsf	3,5	;RP0=1, select bank1
  5273  06F6  1303               	bcf	3,6	;RP1=0, select bank1
  5274  06F7  00BD               	movwf	UART_Transmit_Num@thousands_digit^(0+128)
  5275                           
  5276                           ;uart.c: 429: UART_Transmit_Char(hex_data[thousands_digit]);
  5277  06F8  083D               	movf	UART_Transmit_Num@thousands_digit^(0+128),w
  5278  06F9  3EA0               	addlw	(low (UART_Transmit_Num@hex_data| 0))& (0+255)
  5279  06FA  0084               	movwf	4
  5280  06FB  1383               	bcf	3,7	;select IRP bank1
  5281  06FC  0800               	movf	0,w
  5282  06FD  120A  158A  205A  120A  118A  	fcall	_UART_Transmit_Char
  5283  0702                     l3263:	
  5284                           ;uart.c: 430: case DISP_HEX_DIGIT3:
  5285                           
  5286                           
  5287                           ;uart.c: 431: num = disp_num %(unsigned long)(16 * 16 * 16);
  5288  0702  30FF               	movlw	255
  5289  0703  1683               	bsf	3,5	;RP0=1, select bank1
  5290  0704  1303               	bcf	3,6	;RP1=0, select bank1
  5291  0705  0549               	andwf	UART_Transmit_Num@disp_num^(0+128),w
  5292  0706  00C5               	movwf	UART_Transmit_Num@num^(0+128)
  5293  0707  300F               	movlw	15
  5294  0708  054A               	andwf	(UART_Transmit_Num@disp_num+1)^(0+128),w
  5295  0709  00C6               	movwf	(UART_Transmit_Num@num+1)^(0+128)
  5296  070A  3000               	movlw	0
  5297  070B  054B               	andwf	(UART_Transmit_Num@disp_num+2)^(0+128),w
  5298  070C  00C7               	movwf	(UART_Transmit_Num@num+2)^(0+128)
  5299  070D  3000               	movlw	0
  5300  070E  054C               	andwf	(UART_Transmit_Num@disp_num+3)^(0+128),w
  5301  070F  00C8               	movwf	(UART_Transmit_Num@num+3)^(0+128)
  5302                           
  5303                           ;uart.c: 432: hundreds_digit = (unsigned int) (num / (unsigned long) (16 * 16));
  5304  0710  0845               	movf	UART_Transmit_Num@num^(0+128),w
  5305  0711  1283               	bcf	3,5	;RP0=0, select bank0
  5306  0712  1303               	bcf	3,6	;RP1=0, select bank0
  5307  0713  00CC               	movwf	??_UART_Transmit_Num
  5308  0714  1683               	bsf	3,5	;RP0=1, select bank1
  5309  0715  1303               	bcf	3,6	;RP1=0, select bank1
  5310  0716  0846               	movf	(UART_Transmit_Num@num+1)^(0+128),w
  5311  0717  1283               	bcf	3,5	;RP0=0, select bank0
  5312  0718  1303               	bcf	3,6	;RP1=0, select bank0
  5313  0719  00CD               	movwf	??_UART_Transmit_Num+1
  5314  071A  1683               	bsf	3,5	;RP0=1, select bank1
  5315  071B  1303               	bcf	3,6	;RP1=0, select bank1
  5316  071C  0847               	movf	(UART_Transmit_Num@num+2)^(0+128),w
  5317  071D  1283               	bcf	3,5	;RP0=0, select bank0
  5318  071E  1303               	bcf	3,6	;RP1=0, select bank0
  5319  071F  00CE               	movwf	??_UART_Transmit_Num+2
  5320  0720  1683               	bsf	3,5	;RP0=1, select bank1
  5321  0721  1303               	bcf	3,6	;RP1=0, select bank1
  5322  0722  0848               	movf	(UART_Transmit_Num@num+3)^(0+128),w
  5323  0723  1283               	bcf	3,5	;RP0=0, select bank0
  5324  0724  1303               	bcf	3,6	;RP1=0, select bank0
  5325  0725  00CF               	movwf	??_UART_Transmit_Num+3
  5326  0726  3008               	movlw	8
  5327  0727                     u3005:	
  5328  0727  1003               	clrc
  5329  0728  0CCF               	rrf	??_UART_Transmit_Num+3,f
  5330  0729  0CCE               	rrf	??_UART_Transmit_Num+2,f
  5331  072A  0CCD               	rrf	??_UART_Transmit_Num+1,f
  5332  072B  0CCC               	rrf	??_UART_Transmit_Num,f
  5333  072C  3EFF               	addlw	-1
  5334  072D  1D03               	skipz
  5335  072E  2F27               	goto	u3005
  5336  072F  084D               	movf	??_UART_Transmit_Num+1,w
  5337  0730  1683               	bsf	3,5	;RP0=1, select bank1
  5338  0731  1303               	bcf	3,6	;RP1=0, select bank1
  5339  0732  00C0               	movwf	(UART_Transmit_Num@hundreds_digit+1)^(0+128)
  5340  0733  1283               	bcf	3,5	;RP0=0, select bank0
  5341  0734  1303               	bcf	3,6	;RP1=0, select bank0
  5342  0735  084C               	movf	??_UART_Transmit_Num,w
  5343  0736  1683               	bsf	3,5	;RP0=1, select bank1
  5344  0737  1303               	bcf	3,6	;RP1=0, select bank1
  5345  0738  00BF               	movwf	UART_Transmit_Num@hundreds_digit^(0+128)
  5346                           
  5347                           ;uart.c: 433: UART_Transmit_Char(hex_data[hundreds_digit]);
  5348  0739  083F               	movf	UART_Transmit_Num@hundreds_digit^(0+128),w
  5349  073A  3EA0               	addlw	(low (UART_Transmit_Num@hex_data| 0))& (0+255)
  5350  073B  0084               	movwf	4
  5351  073C  1383               	bcf	3,7	;select IRP bank1
  5352  073D  0800               	movf	0,w
  5353  073E  120A  158A  205A  120A  118A  	fcall	_UART_Transmit_Char
  5354  0743                     l400:	
  5355                           ;uart.c: 434: case DISP_HEX_DIGIT2:
  5356                           
  5357                           
  5358                           ;uart.c: 435: num = disp_num %(unsigned long)(16 * 16);
  5359  0743  30FF               	movlw	255
  5360  0744  1683               	bsf	3,5	;RP0=1, select bank1
  5361  0745  1303               	bcf	3,6	;RP1=0, select bank1
  5362  0746  0549               	andwf	UART_Transmit_Num@disp_num^(0+128),w
  5363  0747  00C5               	movwf	UART_Transmit_Num@num^(0+128)
  5364  0748  3000               	movlw	0
  5365  0749  054A               	andwf	(UART_Transmit_Num@disp_num+1)^(0+128),w
  5366  074A  00C6               	movwf	(UART_Transmit_Num@num+1)^(0+128)
  5367  074B  3000               	movlw	0
  5368  074C  054B               	andwf	(UART_Transmit_Num@disp_num+2)^(0+128),w
  5369  074D  00C7               	movwf	(UART_Transmit_Num@num+2)^(0+128)
  5370  074E  3000               	movlw	0
  5371  074F  054C               	andwf	(UART_Transmit_Num@disp_num+3)^(0+128),w
  5372  0750  00C8               	movwf	(UART_Transmit_Num@num+3)^(0+128)
  5373                           
  5374                           ;uart.c: 436: tens_digit = (unsigned int) (num / 16);
  5375  0751  0845               	movf	UART_Transmit_Num@num^(0+128),w
  5376  0752  1283               	bcf	3,5	;RP0=0, select bank0
  5377  0753  1303               	bcf	3,6	;RP1=0, select bank0
  5378  0754  00CC               	movwf	??_UART_Transmit_Num
  5379  0755  1683               	bsf	3,5	;RP0=1, select bank1
  5380  0756  1303               	bcf	3,6	;RP1=0, select bank1
  5381  0757  0846               	movf	(UART_Transmit_Num@num+1)^(0+128),w
  5382  0758  1283               	bcf	3,5	;RP0=0, select bank0
  5383  0759  1303               	bcf	3,6	;RP1=0, select bank0
  5384  075A  00CD               	movwf	??_UART_Transmit_Num+1
  5385  075B  1683               	bsf	3,5	;RP0=1, select bank1
  5386  075C  1303               	bcf	3,6	;RP1=0, select bank1
  5387  075D  0847               	movf	(UART_Transmit_Num@num+2)^(0+128),w
  5388  075E  1283               	bcf	3,5	;RP0=0, select bank0
  5389  075F  1303               	bcf	3,6	;RP1=0, select bank0
  5390  0760  00CE               	movwf	??_UART_Transmit_Num+2
  5391  0761  1683               	bsf	3,5	;RP0=1, select bank1
  5392  0762  1303               	bcf	3,6	;RP1=0, select bank1
  5393  0763  0848               	movf	(UART_Transmit_Num@num+3)^(0+128),w
  5394  0764  1283               	bcf	3,5	;RP0=0, select bank0
  5395  0765  1303               	bcf	3,6	;RP1=0, select bank0
  5396  0766  00CF               	movwf	??_UART_Transmit_Num+3
  5397  0767  3004               	movlw	4
  5398  0768                     u3015:	
  5399  0768  1003               	clrc
  5400  0769  0CCF               	rrf	??_UART_Transmit_Num+3,f
  5401  076A  0CCE               	rrf	??_UART_Transmit_Num+2,f
  5402  076B  0CCD               	rrf	??_UART_Transmit_Num+1,f
  5403  076C  0CCC               	rrf	??_UART_Transmit_Num,f
  5404  076D  3EFF               	addlw	-1
  5405  076E  1D03               	skipz
  5406  076F  2F68               	goto	u3015
  5407  0770  084D               	movf	??_UART_Transmit_Num+1,w
  5408  0771  1683               	bsf	3,5	;RP0=1, select bank1
  5409  0772  1303               	bcf	3,6	;RP1=0, select bank1
  5410  0773  00C2               	movwf	(UART_Transmit_Num@tens_digit+1)^(0+128)
  5411  0774  1283               	bcf	3,5	;RP0=0, select bank0
  5412  0775  1303               	bcf	3,6	;RP1=0, select bank0
  5413  0776  084C               	movf	??_UART_Transmit_Num,w
  5414  0777  1683               	bsf	3,5	;RP0=1, select bank1
  5415  0778  1303               	bcf	3,6	;RP1=0, select bank1
  5416  0779  00C1               	movwf	UART_Transmit_Num@tens_digit^(0+128)
  5417                           
  5418                           ;uart.c: 437: UART_Transmit_Char(hex_data[tens_digit]);
  5419  077A  0841               	movf	UART_Transmit_Num@tens_digit^(0+128),w
  5420  077B  3EA0               	addlw	(low (UART_Transmit_Num@hex_data| 0))& (0+255)
  5421  077C  0084               	movwf	4
  5422  077D  1383               	bcf	3,7	;select IRP bank1
  5423  077E  0800               	movf	0,w
  5424  077F  120A  158A  205A  120A  118A  	fcall	_UART_Transmit_Char
  5425  0784                     l3273:	
  5426                           ;uart.c: 438: case DISP_HEX_DIGIT1:
  5427                           
  5428                           
  5429                           ;uart.c: 439: unit_digit = (unsigned int) (disp_num % 16);
  5430  0784  300F               	movlw	15
  5431  0785  1683               	bsf	3,5	;RP0=1, select bank1
  5432  0786  1303               	bcf	3,6	;RP1=0, select bank1
  5433  0787  0549               	andwf	UART_Transmit_Num@disp_num^(0+128),w
  5434  0788  00C3               	movwf	UART_Transmit_Num@unit_digit^(0+128)
  5435  0789  3000               	movlw	0
  5436  078A  054A               	andwf	(UART_Transmit_Num@disp_num+1)^(0+128),w
  5437  078B  00C4               	movwf	(UART_Transmit_Num@unit_digit+1)^(0+128)
  5438                           
  5439                           ;uart.c: 440: UART_Transmit_Char(hex_data[unit_digit]);
  5440  078C  0843               	movf	UART_Transmit_Num@unit_digit^(0+128),w
  5441  078D  3EA0               	addlw	(low (UART_Transmit_Num@hex_data| 0))& (0+255)
  5442  078E  0084               	movwf	4
  5443  078F  1383               	bcf	3,7	;select IRP bank1
  5444  0790  0800               	movf	0,w
  5445  0791  120A  158A  205A   	fcall	_UART_Transmit_Char
  5446                           
  5447                           ;uart.c: 443: }
  5448                           
  5449                           ;uart.c: 441: break;
  5450  0794  0008               	return
  5451  0795                     l3279:	
  5452  0795  1683               	bsf	3,5	;RP0=1, select bank1
  5453  0796  1303               	bcf	3,6	;RP1=0, select bank1
  5454  0797  083C               	movf	UART_Transmit_Num@uart_datanum_disp_format^(0+128),w
  5455                           
  5456                           ; Switch size 1, requested type "space"
  5457                           ; Number of cases is 14, Range of values is 1 to 36
  5458                           ; switch strategies available:
  5459                           ; Name         Instructions Cycles
  5460                           ; simple_byte           43    22 (average)
  5461                           ; direct_byte          119    11 (fixed)
  5462                           ; jumptable            263     9 (fixed)
  5463                           ;	Chosen strategy is simple_byte
  5464  0798  3A01               	xorlw	1	; case 1
  5465  0799  1903               	skipnz
  5466  079A  2E91               	goto	l3255
  5467  079B  3A03               	xorlw	3	; case 2
  5468  079C  1903               	skipnz
  5469  079D  2E15               	goto	l3249
  5470  079E  3A01               	xorlw	1	; case 3
  5471  079F  1903               	skipnz
  5472  07A0  2D99               	goto	l3243
  5473  07A1  3A07               	xorlw	7	; case 4
  5474  07A2  1903               	skipnz
  5475  07A3  2D1D               	goto	l3237
  5476  07A4  3A01               	xorlw	1	; case 5
  5477  07A5  1903               	skipnz
  5478  07A6  2CD8               	goto	l3231
  5479  07A7  3A14               	xorlw	20	; case 17
  5480  07A8  1903               	skipnz
  5481  07A9  2E91               	goto	l3255
  5482  07AA  3A03               	xorlw	3	; case 18
  5483  07AB  1903               	skipnz
  5484  07AC  2E15               	goto	l3249
  5485  07AD  3A01               	xorlw	1	; case 19
  5486  07AE  1903               	skipnz
  5487  07AF  2D99               	goto	l3243
  5488  07B0  3A07               	xorlw	7	; case 20
  5489  07B1  1903               	skipnz
  5490  07B2  2D1D               	goto	l3237
  5491  07B3  3A01               	xorlw	1	; case 21
  5492  07B4  1903               	skipnz
  5493  07B5  2CD8               	goto	l3231
  5494  07B6  3A34               	xorlw	52	; case 33
  5495  07B7  1903               	skipnz
  5496  07B8  2F84               	goto	l3273
  5497  07B9  3A03               	xorlw	3	; case 34
  5498  07BA  1903               	skipnz
  5499  07BB  2F43               	goto	l400
  5500  07BC  3A01               	xorlw	1	; case 35
  5501  07BD  1903               	skipnz
  5502  07BE  2F02               	goto	l3263
  5503  07BF  3A07               	xorlw	7	; case 36
  5504  07C0  1903               	skipnz
  5505  07C1  2ECD               	goto	l3259
  5506  07C2  2FC3               	goto	l402
  5507  07C3                     l402:	
  5508  07C3  0008               	return
  5509  07C4                     __end_of_UART_Transmit_Num:	
  5510                           
  5511                           	psect	text7
  5512  092E                     __ptext7:	
  5513 ;; *************** function ___llmod *****************
  5514 ;; Defined at:
  5515 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\llmod.c"
  5516 ;; Parameters:    Size  Location     Type
  5517 ;;  divisor         4   26[BANK0 ] unsigned long 
  5518 ;;  dividend        4   30[BANK0 ] unsigned long 
  5519 ;; Auto vars:     Size  Location     Type
  5520 ;;  counter         1   35[BANK0 ] unsigned char 
  5521 ;; Return value:  Size  Location     Type
  5522 ;;                  4   26[BANK0 ] unsigned long 
  5523 ;; Registers used:
  5524 ;;		wreg, status,2, status,0
  5525 ;; Tracked objects:
  5526 ;;		On entry : 0/0
  5527 ;;		On exit  : 0/0
  5528 ;;		Unchanged: 0/0
  5529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5530 ;;      Params:         0       8       0       0       0
  5531 ;;      Locals:         0       1       0       0       0
  5532 ;;      Temps:          0       1       0       0       0
  5533 ;;      Totals:         0      10       0       0       0
  5534 ;;Total ram usage:       10 bytes
  5535 ;; Hardware stack levels used:    1
  5536 ;; Hardware stack levels required when called:    2
  5537 ;; This function calls:
  5538 ;;		Nothing
  5539 ;; This function is called by:
  5540 ;;		_Encoded_To_Actual_Analog_Val_Calc
  5541 ;;		_UART_Transmit_Num
  5542 ;;		_Encoded_To_Percent_Calc
  5543 ;;		_LCD_Disp_Num
  5544 ;;		_Timer1_Load_Init_Val_Calc
  5545 ;;		_Timer2_Load_Init_Val_Calc
  5546 ;; This function uses a non-reentrant model
  5547 ;;
  5548                           
  5549                           
  5550                           ;psect for function ___llmod
  5551  092E                     ___llmod:	
  5552                           
  5553                           ;incstack = 0
  5554                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5555  092E  1283               	bcf	3,5	;RP0=0, select bank0
  5556  092F  1303               	bcf	3,6	;RP1=0, select bank0
  5557  0930  083D               	movf	___llmod@divisor+3,w
  5558  0931  043C               	iorwf	___llmod@divisor+2,w
  5559  0932  043B               	iorwf	___llmod@divisor+1,w
  5560  0933  043A               	iorwf	___llmod@divisor,w
  5561  0934  1903               	skipnz
  5562  0935  2973               	goto	l3193
  5563  0936  01C3               	clrf	___llmod@counter
  5564  0937  0AC3               	incf	___llmod@counter,f
  5565  0938                     l3183:	
  5566  0938  1BBD               	btfsc	___llmod@divisor+3,7
  5567  0939  2948               	goto	l3185
  5568  093A  3001               	movlw	1
  5569  093B  00C2               	movwf	??___llmod
  5570  093C                     u2885:	
  5571  093C  1003               	clrc
  5572  093D  0DBA               	rlf	___llmod@divisor,f
  5573  093E  0DBB               	rlf	___llmod@divisor+1,f
  5574  093F  0DBC               	rlf	___llmod@divisor+2,f
  5575  0940  0DBD               	rlf	___llmod@divisor+3,f
  5576  0941  0BC2               	decfsz	??___llmod,f
  5577  0942  293C               	goto	u2885
  5578  0943  3001               	movlw	1
  5579  0944  00C2               	movwf	??___llmod
  5580  0945  0842               	movf	??___llmod,w
  5581  0946  07C3               	addwf	___llmod@counter,f
  5582  0947  2938               	goto	l3183
  5583  0948                     l3185:	
  5584  0948  083D               	movf	___llmod@divisor+3,w
  5585  0949  0241               	subwf	___llmod@dividend+3,w
  5586  094A  1D03               	skipz
  5587  094B  2956               	goto	u2905
  5588  094C  083C               	movf	___llmod@divisor+2,w
  5589  094D  0240               	subwf	___llmod@dividend+2,w
  5590  094E  1D03               	skipz
  5591  094F  2956               	goto	u2905
  5592  0950  083B               	movf	___llmod@divisor+1,w
  5593  0951  023F               	subwf	___llmod@dividend+1,w
  5594  0952  1D03               	skipz
  5595  0953  2956               	goto	u2905
  5596  0954  083A               	movf	___llmod@divisor,w
  5597  0955  023E               	subwf	___llmod@dividend,w
  5598  0956                     u2905:	
  5599  0956  1C03               	skipc
  5600  0957  2966               	goto	l3189
  5601  0958  083A               	movf	___llmod@divisor,w
  5602  0959  02BE               	subwf	___llmod@dividend,f
  5603  095A  083B               	movf	___llmod@divisor+1,w
  5604  095B  1C03               	skipc
  5605  095C  0F3B               	incfsz	___llmod@divisor+1,w
  5606  095D  02BF               	subwf	___llmod@dividend+1,f
  5607  095E  083C               	movf	___llmod@divisor+2,w
  5608  095F  1C03               	skipc
  5609  0960  0F3C               	incfsz	___llmod@divisor+2,w
  5610  0961  02C0               	subwf	___llmod@dividend+2,f
  5611  0962  083D               	movf	___llmod@divisor+3,w
  5612  0963  1C03               	skipc
  5613  0964  0F3D               	incfsz	___llmod@divisor+3,w
  5614  0965  02C1               	subwf	___llmod@dividend+3,f
  5615  0966                     l3189:	
  5616  0966  3001               	movlw	1
  5617  0967                     u2915:	
  5618  0967  1003               	clrc
  5619  0968  0CBD               	rrf	___llmod@divisor+3,f
  5620  0969  0CBC               	rrf	___llmod@divisor+2,f
  5621  096A  0CBB               	rrf	___llmod@divisor+1,f
  5622  096B  0CBA               	rrf	___llmod@divisor,f
  5623  096C  3EFF               	addlw	-1
  5624  096D  1D03               	skipz
  5625  096E  2967               	goto	u2915
  5626  096F  3001               	movlw	1
  5627  0970  02C3               	subwf	___llmod@counter,f
  5628  0971  1D03               	btfss	3,2
  5629  0972  2948               	goto	l3185
  5630  0973                     l3193:	
  5631  0973  0841               	movf	___llmod@dividend+3,w
  5632  0974  00BD               	movwf	?___llmod+3
  5633  0975  0840               	movf	___llmod@dividend+2,w
  5634  0976  00BC               	movwf	?___llmod+2
  5635  0977  083F               	movf	___llmod@dividend+1,w
  5636  0978  00BB               	movwf	?___llmod+1
  5637  0979  083E               	movf	___llmod@dividend,w
  5638  097A  00BA               	movwf	?___llmod
  5639  097B  0008               	return
  5640  097C                     __end_of___llmod:	
  5641                           
  5642                           	psect	text8
  5643  097C                     __ptext8:	
  5644 ;; *************** function ___lldiv *****************
  5645 ;; Defined at:
  5646 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\lldiv.c"
  5647 ;; Parameters:    Size  Location     Type
  5648 ;;  divisor         4   26[BANK0 ] unsigned long 
  5649 ;;  dividend        4   30[BANK0 ] unsigned long 
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;  quotient        4   35[BANK0 ] unsigned long 
  5652 ;;  counter         1   39[BANK0 ] unsigned char 
  5653 ;; Return value:  Size  Location     Type
  5654 ;;                  4   26[BANK0 ] unsigned long 
  5655 ;; Registers used:
  5656 ;;		wreg, status,2, status,0
  5657 ;; Tracked objects:
  5658 ;;		On entry : 0/0
  5659 ;;		On exit  : 0/0
  5660 ;;		Unchanged: 0/0
  5661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5662 ;;      Params:         0       8       0       0       0
  5663 ;;      Locals:         0       5       0       0       0
  5664 ;;      Temps:          0       1       0       0       0
  5665 ;;      Totals:         0      14       0       0       0
  5666 ;;Total ram usage:       14 bytes
  5667 ;; Hardware stack levels used:    1
  5668 ;; Hardware stack levels required when called:    2
  5669 ;; This function calls:
  5670 ;;		Nothing
  5671 ;; This function is called by:
  5672 ;;		_Encoded_To_Actual_Analog_Val_Calc
  5673 ;;		_main
  5674 ;;		_UART_Transmit_Num
  5675 ;;		_Encoded_To_Percent_Calc
  5676 ;;		_Actual_Analog_Val_To_Encoded_Calc
  5677 ;;		_LCD_Disp_Num
  5678 ;;		_Timer1_Load_Init_Val_Calc
  5679 ;;		_Timer2_Load_Init_Val_Calc
  5680 ;; This function uses a non-reentrant model
  5681 ;;
  5682                           
  5683                           
  5684                           ;psect for function ___lldiv
  5685  097C                     ___lldiv:	
  5686                           
  5687                           ;incstack = 0
  5688                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5689  097C  3000               	movlw	0
  5690  097D  1283               	bcf	3,5	;RP0=0, select bank0
  5691  097E  1303               	bcf	3,6	;RP1=0, select bank0
  5692  097F  00C6               	movwf	___lldiv@quotient+3
  5693  0980  3000               	movlw	0
  5694  0981  00C5               	movwf	___lldiv@quotient+2
  5695  0982  3000               	movlw	0
  5696  0983  00C4               	movwf	___lldiv@quotient+1
  5697  0984  3000               	movlw	0
  5698  0985  00C3               	movwf	___lldiv@quotient
  5699  0986  083D               	movf	___lldiv@divisor+3,w
  5700  0987  043C               	iorwf	___lldiv@divisor+2,w
  5701  0988  043B               	iorwf	___lldiv@divisor+1,w
  5702  0989  043A               	iorwf	___lldiv@divisor,w
  5703  098A  1903               	skipnz
  5704  098B  29D3               	goto	l3173
  5705  098C  01C7               	clrf	___lldiv@counter
  5706  098D  0AC7               	incf	___lldiv@counter,f
  5707  098E                     l3159:	
  5708  098E  1BBD               	btfsc	___lldiv@divisor+3,7
  5709  098F  299E               	goto	l3161
  5710  0990  3001               	movlw	1
  5711  0991  00C2               	movwf	??___lldiv
  5712  0992                     u2815:	
  5713  0992  1003               	clrc
  5714  0993  0DBA               	rlf	___lldiv@divisor,f
  5715  0994  0DBB               	rlf	___lldiv@divisor+1,f
  5716  0995  0DBC               	rlf	___lldiv@divisor+2,f
  5717  0996  0DBD               	rlf	___lldiv@divisor+3,f
  5718  0997  0BC2               	decfsz	??___lldiv,f
  5719  0998  2992               	goto	u2815
  5720  0999  3001               	movlw	1
  5721  099A  00C2               	movwf	??___lldiv
  5722  099B  0842               	movf	??___lldiv,w
  5723  099C  07C7               	addwf	___lldiv@counter,f
  5724  099D  298E               	goto	l3159
  5725  099E                     l3161:	
  5726  099E  3001               	movlw	1
  5727  099F  00C2               	movwf	??___lldiv
  5728  09A0                     u2835:	
  5729  09A0  1003               	clrc
  5730  09A1  0DC3               	rlf	___lldiv@quotient,f
  5731  09A2  0DC4               	rlf	___lldiv@quotient+1,f
  5732  09A3  0DC5               	rlf	___lldiv@quotient+2,f
  5733  09A4  0DC6               	rlf	___lldiv@quotient+3,f
  5734  09A5  0BC2               	decfsz	??___lldiv,f
  5735  09A6  29A0               	goto	u2835
  5736  09A7  083D               	movf	___lldiv@divisor+3,w
  5737  09A8  0241               	subwf	___lldiv@dividend+3,w
  5738  09A9  1D03               	skipz
  5739  09AA  29B5               	goto	u2845
  5740  09AB  083C               	movf	___lldiv@divisor+2,w
  5741  09AC  0240               	subwf	___lldiv@dividend+2,w
  5742  09AD  1D03               	skipz
  5743  09AE  29B5               	goto	u2845
  5744  09AF  083B               	movf	___lldiv@divisor+1,w
  5745  09B0  023F               	subwf	___lldiv@dividend+1,w
  5746  09B1  1D03               	skipz
  5747  09B2  29B5               	goto	u2845
  5748  09B3  083A               	movf	___lldiv@divisor,w
  5749  09B4  023E               	subwf	___lldiv@dividend,w
  5750  09B5                     u2845:	
  5751  09B5  1C03               	skipc
  5752  09B6  29C6               	goto	l3169
  5753  09B7  083A               	movf	___lldiv@divisor,w
  5754  09B8  02BE               	subwf	___lldiv@dividend,f
  5755  09B9  083B               	movf	___lldiv@divisor+1,w
  5756  09BA  1C03               	skipc
  5757  09BB  0F3B               	incfsz	___lldiv@divisor+1,w
  5758  09BC  02BF               	subwf	___lldiv@dividend+1,f
  5759  09BD  083C               	movf	___lldiv@divisor+2,w
  5760  09BE  1C03               	skipc
  5761  09BF  0F3C               	incfsz	___lldiv@divisor+2,w
  5762  09C0  02C0               	subwf	___lldiv@dividend+2,f
  5763  09C1  083D               	movf	___lldiv@divisor+3,w
  5764  09C2  1C03               	skipc
  5765  09C3  0F3D               	incfsz	___lldiv@divisor+3,w
  5766  09C4  02C1               	subwf	___lldiv@dividend+3,f
  5767  09C5  1443               	bsf	___lldiv@quotient,0
  5768  09C6                     l3169:	
  5769  09C6  3001               	movlw	1
  5770  09C7                     u2855:	
  5771  09C7  1003               	clrc
  5772  09C8  0CBD               	rrf	___lldiv@divisor+3,f
  5773  09C9  0CBC               	rrf	___lldiv@divisor+2,f
  5774  09CA  0CBB               	rrf	___lldiv@divisor+1,f
  5775  09CB  0CBA               	rrf	___lldiv@divisor,f
  5776  09CC  3EFF               	addlw	-1
  5777  09CD  1D03               	skipz
  5778  09CE  29C7               	goto	u2855
  5779  09CF  3001               	movlw	1
  5780  09D0  02C7               	subwf	___lldiv@counter,f
  5781  09D1  1D03               	btfss	3,2
  5782  09D2  299E               	goto	l3161
  5783  09D3                     l3173:	
  5784  09D3  0846               	movf	___lldiv@quotient+3,w
  5785  09D4  00BD               	movwf	?___lldiv+3
  5786  09D5  0845               	movf	___lldiv@quotient+2,w
  5787  09D6  00BC               	movwf	?___lldiv+2
  5788  09D7  0844               	movf	___lldiv@quotient+1,w
  5789  09D8  00BB               	movwf	?___lldiv+1
  5790  09D9  0843               	movf	___lldiv@quotient,w
  5791  09DA  00BA               	movwf	?___lldiv
  5792  09DB  0008               	return
  5793  09DC                     __end_of___lldiv:	
  5794                           
  5795                           	psect	text9
  5796  085A                     __ptext9:	
  5797 ;; *************** function _UART_Transmit_Char *****************
  5798 ;; Defined at:
  5799 ;;		line 65 in file "uart.c"
  5800 ;; Parameters:    Size  Location     Type
  5801 ;;  transmit_cha    1    wreg     const unsigned char 
  5802 ;; Auto vars:     Size  Location     Type
  5803 ;;  transmit_cha    1   13[BANK0 ] const unsigned char 
  5804 ;; Return value:  Size  Location     Type
  5805 ;;                  1    wreg      void 
  5806 ;; Registers used:
  5807 ;;		wreg
  5808 ;; Tracked objects:
  5809 ;;		On entry : 0/0
  5810 ;;		On exit  : 0/0
  5811 ;;		Unchanged: 0/0
  5812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5813 ;;      Params:         0       0       0       0       0
  5814 ;;      Locals:         0       1       0       0       0
  5815 ;;      Temps:          0       0       0       0       0
  5816 ;;      Totals:         0       1       0       0       0
  5817 ;;Total ram usage:        1 bytes
  5818 ;; Hardware stack levels used:    1
  5819 ;; Hardware stack levels required when called:    2
  5820 ;; This function calls:
  5821 ;;		Nothing
  5822 ;; This function is called by:
  5823 ;;		_ADC_Start_Conv
  5824 ;;		_main
  5825 ;;		_UART_Transmit_Str
  5826 ;;		_UART_Transmit_Num
  5827 ;;		_LCD_Disp_Str
  5828 ;;		_UART_Receive_Char
  5829 ;; This function uses a non-reentrant model
  5830 ;;
  5831                           
  5832                           
  5833                           ;psect for function _UART_Transmit_Char
  5834  085A                     _UART_Transmit_Char:	
  5835                           
  5836                           ;incstack = 0
  5837                           ; Regs used in _UART_Transmit_Char: [wreg]
  5838                           ;UART_Transmit_Char@transmit_char stored from wreg
  5839  085A  1283               	bcf	3,5	;RP0=0, select bank0
  5840  085B  1303               	bcf	3,6	;RP1=0, select bank0
  5841  085C  00AD               	movwf	UART_Transmit_Char@transmit_char
  5842                           
  5843                           ;uart.c: 67: TXREG = transmit_char;
  5844  085D  082D               	movf	UART_Transmit_Char@transmit_char,w
  5845  085E  0099               	movwf	25	;volatile
  5846  085F                     l354:	
  5847                           ;uart.c: 68: while(TRMT == 0);
  5848                           
  5849  085F  1683               	bsf	3,5	;RP0=1, select bank1
  5850  0860  1303               	bcf	3,6	;RP1=0, select bank1
  5851  0861  1898               	btfsc	24,1	;volatile
  5852  0862  0008               	return
  5853  0863  285F               	goto	l354
  5854  0864                     __end_of_UART_Transmit_Char:	
  5855                           
  5856                           	psect	text10
  5857  084A                     __ptext10:	
  5858 ;; *************** function _Is_ADC_Converting *****************
  5859 ;; Defined at:
  5860 ;;		line 229 in file "adc.c"
  5861 ;; Parameters:    Size  Location     Type
  5862 ;;		None
  5863 ;; Auto vars:     Size  Location     Type
  5864 ;;		None
  5865 ;; Return value:  Size  Location     Type
  5866 ;;                  1    wreg      unsigned char 
  5867 ;; Registers used:
  5868 ;;		wreg
  5869 ;; Tracked objects:
  5870 ;;		On entry : 0/0
  5871 ;;		On exit  : 0/0
  5872 ;;		Unchanged: 0/0
  5873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5874 ;;      Params:         0       0       0       0       0
  5875 ;;      Locals:         0       0       0       0       0
  5876 ;;      Temps:          0       0       0       0       0
  5877 ;;      Totals:         0       0       0       0       0
  5878 ;;Total ram usage:        0 bytes
  5879 ;; Hardware stack levels used:    1
  5880 ;; Hardware stack levels required when called:    2
  5881 ;; This function calls:
  5882 ;;		Nothing
  5883 ;; This function is called by:
  5884 ;;		_ADC_Start_Conv
  5885 ;;		_ADC_Disable
  5886 ;; This function uses a non-reentrant model
  5887 ;;
  5888                           
  5889                           
  5890                           ;psect for function _Is_ADC_Converting
  5891  084A                     _Is_ADC_Converting:	
  5892                           
  5893                           ;adc.c: 232: if(ADCON0bits.GO == 0)
  5894                           
  5895                           ;incstack = 0
  5896                           ; Regs used in _Is_ADC_Converting: [wreg]
  5897  084A  1283               	bcf	3,5	;RP0=0, select bank0
  5898  084B  1303               	bcf	3,6	;RP1=0, select bank0
  5899  084C  189F               	btfsc	31,1	;volatile
  5900  084D  2850               	goto	l3203
  5901                           
  5902                           ;adc.c: 233: return ('n');
  5903  084E  306E               	movlw	110
  5904  084F  0008               	return
  5905  0850                     l3203:	
  5906                           
  5907                           ;adc.c: 235: return ('y');
  5908  0850  3079               	movlw	121
  5909  0851  0008               	return
  5910  0852                     __end_of_Is_ADC_Converting:	
  5911                           
  5912                           	psect	text11
  5913  09DC                     __ptext11:	
  5914 ;; *************** function _ADC_Conf_Channel *****************
  5915 ;; Defined at:
  5916 ;;		line 37 in file "adc.c"
  5917 ;; Parameters:    Size  Location     Type
  5918 ;;  set_adc_cur_    1    wreg     const enum E1739
  5919 ;; Auto vars:     Size  Location     Type
  5920 ;;  set_adc_cur_    1   18[BANK0 ] const enum E1739
  5921 ;; Return value:  Size  Location     Type
  5922 ;;                  1    wreg      void 
  5923 ;; Registers used:
  5924 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5925 ;; Tracked objects:
  5926 ;;		On entry : 0/0
  5927 ;;		On exit  : 0/0
  5928 ;;		Unchanged: 0/0
  5929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5930 ;;      Params:         0       0       0       0       0
  5931 ;;      Locals:         0       1       0       0       0
  5932 ;;      Temps:          0       1       0       0       0
  5933 ;;      Totals:         0       2       0       0       0
  5934 ;;Total ram usage:        2 bytes
  5935 ;; Hardware stack levels used:    1
  5936 ;; Hardware stack levels required when called:    3
  5937 ;; This function calls:
  5938 ;;		___bmul
  5939 ;; This function is called by:
  5940 ;;		_main
  5941 ;; This function uses a non-reentrant model
  5942 ;;
  5943                           
  5944                           
  5945                           ;psect for function _ADC_Conf_Channel
  5946  09DC                     _ADC_Conf_Channel:	
  5947                           
  5948                           ;incstack = 0
  5949                           ; Regs used in _ADC_Conf_Channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5950                           ;ADC_Conf_Channel@set_adc_cur_channel stored from wreg
  5951  09DC  1283               	bcf	3,5	;RP0=0, select bank0
  5952  09DD  1303               	bcf	3,6	;RP1=0, select bank0
  5953  09DE  00B2               	movwf	ADC_Conf_Channel@set_adc_cur_channel
  5954                           
  5955                           ;adc.c: 39: if(set_adc_cur_channel <= ADC_CH_13)
  5956  09DF  300E               	movlw	14
  5957  09E0  0232               	subwf	ADC_Conf_Channel@set_adc_cur_channel,w
  5958  09E1  1803               	skipnc
  5959  09E2  0008               	return
  5960                           
  5961                           ;adc.c: 40: {
  5962                           ;adc.c: 41: adc_cur_channel = set_adc_cur_channel;
  5963  09E3  0832               	movf	ADC_Conf_Channel@set_adc_cur_channel,w
  5964  09E4  00B1               	movwf	??_ADC_Conf_Channel
  5965  09E5  0831               	movf	??_ADC_Conf_Channel,w
  5966  09E6  00DF               	movwf	_adc_cur_channel
  5967                           
  5968                           ;adc.c: 42: adc_cur_parameters[adc_cur_channel].adc_cur_service_type = (0x00);
  5969  09E7  3005               	movlw	5
  5970  09E8  00B1               	movwf	??_ADC_Conf_Channel
  5971  09E9  0831               	movf	??_ADC_Conf_Channel,w
  5972  09EA  00AD               	movwf	___bmul@multiplicand
  5973  09EB  085F               	movf	_adc_cur_channel,w
  5974  09EC  120A  158A  2092  120A  158A  	fcall	___bmul
  5975  09F1  3E04               	addlw	4
  5976  09F2  3ED6               	addlw	(low (_adc_cur_parameters| (0+256)))& (0+255)
  5977  09F3  0084               	movwf	4
  5978  09F4  30FC               	movlw	-4
  5979  09F5  1783               	bsf	3,7	;select IRP bank3
  5980  09F6  0580               	andwf	0,f
  5981                           
  5982                           ;adc.c: 43: adc_cur_parameters[adc_cur_channel].adc_clk_src_type = (2u);
  5983  09F7  3005               	movlw	5
  5984  09F8  1283               	bcf	3,5	;RP0=0, select bank0
  5985  09F9  1303               	bcf	3,6	;RP1=0, select bank0
  5986  09FA  00B1               	movwf	??_ADC_Conf_Channel
  5987  09FB  0831               	movf	??_ADC_Conf_Channel,w
  5988  09FC  00AD               	movwf	___bmul@multiplicand
  5989  09FD  085F               	movf	_adc_cur_channel,w
  5990  09FE  120A  158A  2092  120A  158A  	fcall	___bmul
  5991  0A03  3E04               	addlw	4
  5992  0A04  3ED6               	addlw	(low (_adc_cur_parameters| (0+256)))& (0+255)
  5993  0A05  0084               	movwf	4
  5994  0A06  1783               	bsf	3,7	;select IRP bank3
  5995  0A07  0800               	movf	0,w
  5996  0A08  39F3               	andlw	-13
  5997  0A09  3808               	iorlw	8
  5998  0A0A  0080               	movwf	0
  5999                           
  6000                           ;adc.c: 44: adc_cur_parameters[adc_cur_channel].adc_result_format_justfied_type = (1u);
  6001  0A0B  3005               	movlw	5
  6002  0A0C  1283               	bcf	3,5	;RP0=0, select bank0
  6003  0A0D  1303               	bcf	3,6	;RP1=0, select bank0
  6004  0A0E  00B1               	movwf	??_ADC_Conf_Channel
  6005  0A0F  0831               	movf	??_ADC_Conf_Channel,w
  6006  0A10  00AD               	movwf	___bmul@multiplicand
  6007  0A11  085F               	movf	_adc_cur_channel,w
  6008  0A12  120A  158A  2092  120A  158A  	fcall	___bmul
  6009  0A17  3E04               	addlw	4
  6010  0A18  3ED6               	addlw	(low (_adc_cur_parameters| (0+256)))& (0+255)
  6011  0A19  0084               	movwf	4
  6012  0A1A  1783               	bsf	3,7	;select IRP bank3
  6013  0A1B  1680               	bsf	0,5
  6014                           
  6015                           ;adc.c: 45: adc_cur_parameters[adc_cur_channel].adc_vref_neg_src_type = (0u);
  6016  0A1C  3005               	movlw	5
  6017  0A1D  1283               	bcf	3,5	;RP0=0, select bank0
  6018  0A1E  1303               	bcf	3,6	;RP1=0, select bank0
  6019  0A1F  00B1               	movwf	??_ADC_Conf_Channel
  6020  0A20  0831               	movf	??_ADC_Conf_Channel,w
  6021  0A21  00AD               	movwf	___bmul@multiplicand
  6022  0A22  085F               	movf	_adc_cur_channel,w
  6023  0A23  120A  158A  2092  120A  158A  	fcall	___bmul
  6024  0A28  3E04               	addlw	4
  6025  0A29  3ED6               	addlw	(low (_adc_cur_parameters| (0+256)))& (0+255)
  6026  0A2A  0084               	movwf	4
  6027  0A2B  1783               	bsf	3,7	;select IRP bank3
  6028  0A2C  1300               	bcf	0,6
  6029                           
  6030                           ;adc.c: 46: adc_cur_parameters[adc_cur_channel].adc_vref_plus_src_type = (0u);
  6031  0A2D  3005               	movlw	5
  6032  0A2E  1283               	bcf	3,5	;RP0=0, select bank0
  6033  0A2F  1303               	bcf	3,6	;RP1=0, select bank0
  6034  0A30  00B1               	movwf	??_ADC_Conf_Channel
  6035  0A31  0831               	movf	??_ADC_Conf_Channel,w
  6036  0A32  00AD               	movwf	___bmul@multiplicand
  6037  0A33  085F               	movf	_adc_cur_channel,w
  6038  0A34  120A  158A  2092   	fcall	___bmul
  6039  0A37  3E04               	addlw	4
  6040  0A38  3ED6               	addlw	(low (_adc_cur_parameters| (0+256)))& (0+255)
  6041  0A39  0084               	movwf	4
  6042  0A3A  1783               	bsf	3,7	;select IRP bank3
  6043  0A3B  1380               	bcf	0,7
  6044  0A3C  0008               	return
  6045  0A3D                     __end_of_ADC_Conf_Channel:	
  6046                           
  6047                           	psect	text12
  6048  0892                     __ptext12:	
  6049 ;; *************** function ___bmul *****************
  6050 ;; Defined at:
  6051 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\Umul8.c"
  6052 ;; Parameters:    Size  Location     Type
  6053 ;;  multiplier      1    wreg     unsigned char 
  6054 ;;  multiplicand    1   13[BANK0 ] unsigned char 
  6055 ;; Auto vars:     Size  Location     Type
  6056 ;;  multiplier      1   16[BANK0 ] unsigned char 
  6057 ;;  product         1   15[BANK0 ] unsigned char 
  6058 ;; Return value:  Size  Location     Type
  6059 ;;                  1    wreg      unsigned char 
  6060 ;; Registers used:
  6061 ;;		wreg, status,2, status,0
  6062 ;; Tracked objects:
  6063 ;;		On entry : 0/0
  6064 ;;		On exit  : 0/0
  6065 ;;		Unchanged: 0/0
  6066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6067 ;;      Params:         0       1       0       0       0
  6068 ;;      Locals:         0       2       0       0       0
  6069 ;;      Temps:          0       1       0       0       0
  6070 ;;      Totals:         0       4       0       0       0
  6071 ;;Total ram usage:        4 bytes
  6072 ;; Hardware stack levels used:    1
  6073 ;; Hardware stack levels required when called:    2
  6074 ;; This function calls:
  6075 ;;		Nothing
  6076 ;; This function is called by:
  6077 ;;		_ADC_Conf_Channel
  6078 ;;		_main
  6079 ;;		_Interrupt_ISR
  6080 ;;		_ADC_Disable
  6081 ;; This function uses a non-reentrant model
  6082 ;;
  6083                           
  6084                           
  6085                           ;psect for function ___bmul
  6086  0892                     ___bmul:	
  6087                           
  6088                           ;incstack = 0
  6089                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6090                           ;___bmul@multiplier stored from wreg
  6091  0892  1283               	bcf	3,5	;RP0=0, select bank0
  6092  0893  1303               	bcf	3,6	;RP1=0, select bank0
  6093  0894  00B0               	movwf	___bmul@multiplier
  6094  0895  01AF               	clrf	___bmul@product
  6095  0896                     l3297:	
  6096  0896  1C30               	btfss	___bmul@multiplier,0
  6097  0897  289C               	goto	l3301
  6098  0898  082D               	movf	___bmul@multiplicand,w
  6099  0899  00AE               	movwf	??___bmul
  6100  089A  082E               	movf	??___bmul,w
  6101  089B  07AF               	addwf	___bmul@product,f
  6102  089C                     l3301:	
  6103  089C  1003               	clrc
  6104  089D  0DAD               	rlf	___bmul@multiplicand,f
  6105  089E  1003               	clrc
  6106  089F  0CB0               	rrf	___bmul@multiplier,f
  6107  08A0  0830               	movf	___bmul@multiplier,w
  6108  08A1  1D03               	btfss	3,2
  6109  08A2  2896               	goto	l3297
  6110  08A3  082F               	movf	___bmul@product,w
  6111  08A4  0008               	return
  6112  08A5                     __end_of___bmul:	
  6113                           
  6114                           	psect	text13
  6115  0A3D                     __ptext13:	
  6116 ;; *************** function _Interrupt_ISR *****************
  6117 ;; Defined at:
  6118 ;;		line 37 in file "isr.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;		None
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;  adc_value_mo    2    6[COMMON] unsigned int 
  6123 ;;  adc_value_le    2    4[COMMON] unsigned int 
  6124 ;; Return value:  Size  Location     Type
  6125 ;;                  1    wreg      void 
  6126 ;; Registers used:
  6127 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6128 ;; Tracked objects:
  6129 ;;		On entry : 0/0
  6130 ;;		On exit  : 0/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6133 ;;      Params:         0       0       0       0       0
  6134 ;;      Locals:         4       0       0       0       0
  6135 ;;      Temps:          0      13       0       0       0
  6136 ;;      Totals:         4      13       0       0       0
  6137 ;;Total ram usage:       17 bytes
  6138 ;; Hardware stack levels used:    1
  6139 ;; Hardware stack levels required when called:    1
  6140 ;; This function calls:
  6141 ;;		_ADC_Conv_Over_Appl_Proc
  6142 ;;		_External_Interrupt_Occured_Appl_Proc
  6143 ;;		_Timer1_Req_Time_Expiry_Appl_Proc
  6144 ;;		_Timer1_Stop
  6145 ;;		i1___bmul
  6146 ;; This function is called by:
  6147 ;;		Interrupt level 1
  6148 ;; This function uses a non-reentrant model
  6149 ;;
  6150                           
  6151                           
  6152                           ;psect for function _Interrupt_ISR
  6153  0A3D                     _Interrupt_ISR:	
  6154                           
  6155                           ;isr.c: 39: unsigned int adc_value_least_byte, adc_value_most_byte;
  6156                           ;isr.c: 41: if(INTE == 1 && INTF == 1)
  6157  0A3D  1A0B               	btfsc	11,4	;volatile
  6158  0A3E  1C8B               	btfss	11,1	;volatile
  6159  0A3F  2A47               	goto	i1l3657
  6160                           
  6161                           ;isr.c: 42: {
  6162                           ;isr.c: 43: INTF = 0;
  6163  0A40  108B               	bcf	11,1	;volatile
  6164                           
  6165                           ;isr.c: 44: INTE = 0;
  6166  0A41  120B               	bcf	11,4	;volatile
  6167                           
  6168                           ;isr.c: 55: External_Interrupt_Occured_Appl_Proc();
  6169  0A42  120A  118A  2003  120A  158A  	fcall	_External_Interrupt_Occured_Appl_Proc
  6170  0A47                     i1l3657:	
  6171                           
  6172                           ;isr.c: 57: }
  6173                           ;isr.c: 58: if(ADIF == 1)
  6174  0A47  1283               	bcf	3,5	;RP0=0, select bank0
  6175  0A48  1303               	bcf	3,6	;RP1=0, select bank0
  6176  0A49  1F0C               	btfss	12,6	;volatile
  6177  0A4A  2B26               	goto	i1l3683
  6178                           
  6179                           ;isr.c: 59: {
  6180                           ;isr.c: 60: PIE1bits.ADIE = 0;
  6181  0A4B  1683               	bsf	3,5	;RP0=1, select bank1
  6182  0A4C  1303               	bcf	3,6	;RP1=0, select bank1
  6183  0A4D  130C               	bcf	12,6	;volatile
  6184                           
  6185                           ;isr.c: 62: adc_cur_parameters[adc_cur_channel].adc_cur_service_type = (0x02);
  6186  0A4E  3005               	movlw	5
  6187  0A4F  1283               	bcf	3,5	;RP0=0, select bank0
  6188  0A50  1303               	bcf	3,6	;RP1=0, select bank0
  6189  0A51  00A0               	movwf	??_Interrupt_ISR
  6190  0A52  0820               	movf	??_Interrupt_ISR,w
  6191  0A53  00F0               	movwf	i1___bmul@multiplicand
  6192  0A54  085F               	movf	_adc_cur_channel,w
  6193  0A55  120A  158A  2081  120A  158A  	fcall	i1___bmul
  6194  0A5A  3E04               	addlw	4
  6195  0A5B  3ED6               	addlw	(low (_adc_cur_parameters| (0+256)))& (0+255)
  6196  0A5C  0084               	movwf	4
  6197  0A5D  1783               	bsf	3,7	;select IRP bank3
  6198  0A5E  0800               	movf	0,w
  6199  0A5F  39FC               	andlw	-4
  6200  0A60  3802               	iorlw	2
  6201  0A61  0080               	movwf	0
  6202                           
  6203                           ;isr.c: 64: if(ADFM == 1)
  6204  0A62  1683               	bsf	3,5	;RP0=1, select bank1
  6205  0A63  1303               	bcf	3,6	;RP1=0, select bank1
  6206  0A64  1F9F               	btfss	31,7	;volatile
  6207  0A65  2AA2               	goto	i1l3671
  6208                           
  6209                           ;isr.c: 65: {
  6210                           ;isr.c: 66: adc_value_least_byte = ADRESL;
  6211  0A66  081E               	movf	30,w	;volatile
  6212  0A67  1283               	bcf	3,5	;RP0=0, select bank0
  6213  0A68  1303               	bcf	3,6	;RP1=0, select bank0
  6214  0A69  00A0               	movwf	??_Interrupt_ISR
  6215  0A6A  01A1               	clrf	??_Interrupt_ISR+1
  6216  0A6B  0820               	movf	??_Interrupt_ISR,w
  6217  0A6C  00F4               	movwf	Interrupt_ISR@adc_value_least_byte
  6218  0A6D  0821               	movf	??_Interrupt_ISR+1,w
  6219  0A6E  00F5               	movwf	Interrupt_ISR@adc_value_least_byte+1
  6220                           
  6221                           ;isr.c: 67: adc_value_most_byte = ADRESH & 0x03u;
  6222  0A6F  081E               	movf	30,w	;volatile
  6223  0A70  3903               	andlw	3
  6224  0A71  00A0               	movwf	??_Interrupt_ISR
  6225  0A72  01A1               	clrf	??_Interrupt_ISR+1
  6226  0A73  0820               	movf	??_Interrupt_ISR,w
  6227  0A74  00F6               	movwf	Interrupt_ISR@adc_value_most_byte
  6228  0A75  0821               	movf	??_Interrupt_ISR+1,w
  6229  0A76  00F7               	movwf	Interrupt_ISR@adc_value_most_byte+1
  6230                           
  6231                           ;isr.c: 68: adc_cur_parameters[adc_cur_channel].adc_value_channel = (adc_value_most_byte
      +                           << 8) + adc_value_least_byte;
  6232  0A77  0876               	movf	Interrupt_ISR@adc_value_most_byte,w
  6233  0A78  00A1               	movwf	??_Interrupt_ISR+1
  6234  0A79  01A0               	clrf	??_Interrupt_ISR
  6235  0A7A  0874               	movf	Interrupt_ISR@adc_value_least_byte,w
  6236  0A7B  0720               	addwf	??_Interrupt_ISR,w
  6237  0A7C  00A2               	movwf	??_Interrupt_ISR+2
  6238  0A7D  0875               	movf	Interrupt_ISR@adc_value_least_byte+1,w
  6239  0A7E  1803               	skipnc
  6240  0A7F  0A75               	incf	Interrupt_ISR@adc_value_least_byte+1,w
  6241  0A80  0721               	addwf	??_Interrupt_ISR+1,w
  6242  0A81  00A3               	movwf	??_Interrupt_ISR+3
  6243  0A82  0822               	movf	??_Interrupt_ISR+2,w
  6244  0A83  00A4               	movwf	??_Interrupt_ISR+4
  6245  0A84  0823               	movf	??_Interrupt_ISR+3,w
  6246  0A85  00A5               	movwf	??_Interrupt_ISR+5
  6247  0A86  01A6               	clrf	??_Interrupt_ISR+6
  6248  0A87  01A7               	clrf	??_Interrupt_ISR+7
  6249  0A88  3005               	movlw	5
  6250  0A89  00A8               	movwf	??_Interrupt_ISR+8
  6251  0A8A  0828               	movf	??_Interrupt_ISR+8,w
  6252  0A8B  00F0               	movwf	i1___bmul@multiplicand
  6253  0A8C  085F               	movf	_adc_cur_channel,w
  6254  0A8D  120A  158A  2081  120A  158A  	fcall	i1___bmul
  6255  0A92  3ED6               	addlw	(low (_adc_cur_parameters| (0+256)))& (0+255)
  6256  0A93  0084               	movwf	4
  6257  0A94  1283               	bcf	3,5	;RP0=0, select bank0
  6258  0A95  1303               	bcf	3,6	;RP1=0, select bank0
  6259  0A96  0824               	movf	??_Interrupt_ISR+4,w
  6260  0A97  1783               	bsf	3,7	;select IRP bank3
  6261  0A98  0080               	movwf	0
  6262  0A99  0A84               	incf	4,f
  6263  0A9A  0825               	movf	??_Interrupt_ISR+5,w
  6264  0A9B  0080               	movwf	0
  6265  0A9C  0A84               	incf	4,f
  6266  0A9D  0826               	movf	??_Interrupt_ISR+6,w
  6267  0A9E  0080               	movwf	0
  6268  0A9F  0A84               	incf	4,f
  6269  0AA0  0827               	movf	??_Interrupt_ISR+7,w
  6270  0AA1  2B1C               	goto	L1
  6271  0AA2                     i1l3671:	
  6272                           ;isr.c: 69: }
  6273                           
  6274                           
  6275                           ;isr.c: 70: else
  6276                           ;isr.c: 71: {
  6277                           ;isr.c: 72: adc_value_least_byte = ADRESL & 0xC0;
  6278  0AA2  1683               	bsf	3,5	;RP0=1, select bank1
  6279  0AA3  1303               	bcf	3,6	;RP1=0, select bank1
  6280  0AA4  081E               	movf	30,w	;volatile
  6281  0AA5  39C0               	andlw	192
  6282  0AA6  1283               	bcf	3,5	;RP0=0, select bank0
  6283  0AA7  1303               	bcf	3,6	;RP1=0, select bank0
  6284  0AA8  00A0               	movwf	??_Interrupt_ISR
  6285  0AA9  01A1               	clrf	??_Interrupt_ISR+1
  6286  0AAA  0820               	movf	??_Interrupt_ISR,w
  6287  0AAB  00F4               	movwf	Interrupt_ISR@adc_value_least_byte
  6288  0AAC  0821               	movf	??_Interrupt_ISR+1,w
  6289  0AAD  00F5               	movwf	Interrupt_ISR@adc_value_least_byte+1
  6290                           
  6291                           ;isr.c: 73: adc_value_most_byte = ADRESH ;
  6292  0AAE  081E               	movf	30,w	;volatile
  6293  0AAF  00A0               	movwf	??_Interrupt_ISR
  6294  0AB0  01A1               	clrf	??_Interrupt_ISR+1
  6295  0AB1  0820               	movf	??_Interrupt_ISR,w
  6296  0AB2  00F6               	movwf	Interrupt_ISR@adc_value_most_byte
  6297  0AB3  0821               	movf	??_Interrupt_ISR+1,w
  6298  0AB4  00F7               	movwf	Interrupt_ISR@adc_value_most_byte+1
  6299                           
  6300                           ;isr.c: 74: adc_cur_parameters[adc_cur_channel].adc_value_channel = (adc_value_most_byte
      +                           << 8) + adc_value_least_byte;
  6301  0AB5  0876               	movf	Interrupt_ISR@adc_value_most_byte,w
  6302  0AB6  00A1               	movwf	??_Interrupt_ISR+1
  6303  0AB7  01A0               	clrf	??_Interrupt_ISR
  6304  0AB8  0874               	movf	Interrupt_ISR@adc_value_least_byte,w
  6305  0AB9  0720               	addwf	??_Interrupt_ISR,w
  6306  0ABA  00A2               	movwf	??_Interrupt_ISR+2
  6307  0ABB  0875               	movf	Interrupt_ISR@adc_value_least_byte+1,w
  6308  0ABC  1803               	skipnc
  6309  0ABD  0A75               	incf	Interrupt_ISR@adc_value_least_byte+1,w
  6310  0ABE  0721               	addwf	??_Interrupt_ISR+1,w
  6311  0ABF  00A3               	movwf	??_Interrupt_ISR+3
  6312  0AC0  0822               	movf	??_Interrupt_ISR+2,w
  6313  0AC1  00A4               	movwf	??_Interrupt_ISR+4
  6314  0AC2  0823               	movf	??_Interrupt_ISR+3,w
  6315  0AC3  00A5               	movwf	??_Interrupt_ISR+5
  6316  0AC4  01A6               	clrf	??_Interrupt_ISR+6
  6317  0AC5  01A7               	clrf	??_Interrupt_ISR+7
  6318  0AC6  3005               	movlw	5
  6319  0AC7  00A8               	movwf	??_Interrupt_ISR+8
  6320  0AC8  0828               	movf	??_Interrupt_ISR+8,w
  6321  0AC9  00F0               	movwf	i1___bmul@multiplicand
  6322  0ACA  085F               	movf	_adc_cur_channel,w
  6323  0ACB  120A  158A  2081  120A  158A  	fcall	i1___bmul
  6324  0AD0  3ED6               	addlw	(low (_adc_cur_parameters| (0+256)))& (0+255)
  6325  0AD1  0084               	movwf	4
  6326  0AD2  1283               	bcf	3,5	;RP0=0, select bank0
  6327  0AD3  1303               	bcf	3,6	;RP1=0, select bank0
  6328  0AD4  0824               	movf	??_Interrupt_ISR+4,w
  6329  0AD5  1783               	bsf	3,7	;select IRP bank3
  6330  0AD6  0080               	movwf	0
  6331  0AD7  0A84               	incf	4,f
  6332  0AD8  0825               	movf	??_Interrupt_ISR+5,w
  6333  0AD9  0080               	movwf	0
  6334  0ADA  0A84               	incf	4,f
  6335  0ADB  0826               	movf	??_Interrupt_ISR+6,w
  6336  0ADC  0080               	movwf	0
  6337  0ADD  0A84               	incf	4,f
  6338  0ADE  0827               	movf	??_Interrupt_ISR+7,w
  6339  0ADF  0080               	movwf	0
  6340                           
  6341                           ;isr.c: 75: adc_cur_parameters[adc_cur_channel].adc_value_channel = adc_cur_parameters[a
      +                          dc_cur_channel].adc_value_channel >> 6;
  6342  0AE0  3005               	movlw	5
  6343  0AE1  00A0               	movwf	??_Interrupt_ISR
  6344  0AE2  0820               	movf	??_Interrupt_ISR,w
  6345  0AE3  00F0               	movwf	i1___bmul@multiplicand
  6346  0AE4  085F               	movf	_adc_cur_channel,w
  6347  0AE5  120A  158A  2081  120A  158A  	fcall	i1___bmul
  6348  0AEA  3ED6               	addlw	(low (_adc_cur_parameters| (0+256)))& (0+255)
  6349  0AEB  0084               	movwf	4
  6350  0AEC  1783               	bsf	3,7	;select IRP bank3
  6351  0AED  0800               	movf	0,w
  6352  0AEE  1283               	bcf	3,5	;RP0=0, select bank0
  6353  0AEF  1303               	bcf	3,6	;RP1=0, select bank0
  6354  0AF0  00A1               	movwf	??_Interrupt_ISR+1
  6355  0AF1  0A84               	incf	4,f
  6356  0AF2  0800               	movf	0,w
  6357  0AF3  00A2               	movwf	??_Interrupt_ISR+2
  6358  0AF4  0A84               	incf	4,f
  6359  0AF5  0800               	movf	0,w
  6360  0AF6  00A3               	movwf	??_Interrupt_ISR+3
  6361  0AF7  0A84               	incf	4,f
  6362  0AF8  0800               	movf	0,w
  6363  0AF9  00A4               	movwf	??_Interrupt_ISR+4
  6364  0AFA  3006               	movlw	6
  6365  0AFB                     u352_25:	
  6366  0AFB  1003               	clrc
  6367  0AFC  0CA4               	rrf	??_Interrupt_ISR+4,f
  6368  0AFD  0CA3               	rrf	??_Interrupt_ISR+3,f
  6369  0AFE  0CA2               	rrf	??_Interrupt_ISR+2,f
  6370  0AFF  0CA1               	rrf	??_Interrupt_ISR+1,f
  6371  0B00  3EFF               	addlw	-1
  6372  0B01  1D03               	skipz
  6373  0B02  2AFB               	goto	u352_25
  6374  0B03  3005               	movlw	5
  6375  0B04  00A5               	movwf	??_Interrupt_ISR+5
  6376  0B05  0825               	movf	??_Interrupt_ISR+5,w
  6377  0B06  00F0               	movwf	i1___bmul@multiplicand
  6378  0B07  085F               	movf	_adc_cur_channel,w
  6379  0B08  120A  158A  2081  120A  158A  	fcall	i1___bmul
  6380  0B0D  3ED6               	addlw	(low (_adc_cur_parameters| (0+256)))& (0+255)
  6381  0B0E  0084               	movwf	4
  6382  0B0F  1283               	bcf	3,5	;RP0=0, select bank0
  6383  0B10  1303               	bcf	3,6	;RP1=0, select bank0
  6384  0B11  0821               	movf	??_Interrupt_ISR+1,w
  6385  0B12  1783               	bsf	3,7	;select IRP bank3
  6386  0B13  0080               	movwf	0
  6387  0B14  0A84               	incf	4,f
  6388  0B15  0822               	movf	??_Interrupt_ISR+2,w
  6389  0B16  0080               	movwf	0
  6390  0B17  0A84               	incf	4,f
  6391  0B18  0823               	movf	??_Interrupt_ISR+3,w
  6392  0B19  0080               	movwf	0
  6393  0B1A  0A84               	incf	4,f
  6394  0B1B  0824               	movf	??_Interrupt_ISR+4,w
  6395  0B1C                     L1:	
  6396  0B1C  0080               	movwf	0
  6397                           
  6398                           ;isr.c: 76: }
  6399                           ;isr.c: 89: ADC_Conv_Over_Appl_Proc(adc_cur_channel);
  6400  0B1D  085F               	movf	_adc_cur_channel,w
  6401  0B1E  120A  158A  2044  120A  158A  	fcall	_ADC_Conv_Over_Appl_Proc
  6402                           
  6403                           ;isr.c: 90: ADIF = 0;
  6404  0B23  1283               	bcf	3,5	;RP0=0, select bank0
  6405  0B24  1303               	bcf	3,6	;RP1=0, select bank0
  6406  0B25  130C               	bcf	12,6	;volatile
  6407  0B26                     i1l3683:	
  6408                           
  6409                           ;isr.c: 91: }
  6410                           ;isr.c: 92: if(TMR1IF == 1)
  6411  0B26  1C0C               	btfss	12,0	;volatile
  6412  0B27  2BB0               	goto	i1l465
  6413                           
  6414                           ;isr.c: 93: {
  6415                           ;isr.c: 94: TMR1IF = 0;
  6416  0B28  100C               	bcf	12,0	;volatile
  6417                           
  6418                           ;isr.c: 95: TMR1H = timer1_init_val / 256UL;
  6419  0B29  0856               	movf	_timer1_init_val,w
  6420  0B2A  00A0               	movwf	??_Interrupt_ISR
  6421  0B2B  0857               	movf	_timer1_init_val+1,w
  6422  0B2C  00A1               	movwf	??_Interrupt_ISR+1
  6423  0B2D  0858               	movf	_timer1_init_val+2,w
  6424  0B2E  00A2               	movwf	??_Interrupt_ISR+2
  6425  0B2F  0859               	movf	_timer1_init_val+3,w
  6426  0B30  00A3               	movwf	??_Interrupt_ISR+3
  6427  0B31  3008               	movlw	8
  6428  0B32                     u354_25:	
  6429  0B32  1003               	clrc
  6430  0B33  0CA3               	rrf	??_Interrupt_ISR+3,f
  6431  0B34  0CA2               	rrf	??_Interrupt_ISR+2,f
  6432  0B35  0CA1               	rrf	??_Interrupt_ISR+1,f
  6433  0B36  0CA0               	rrf	??_Interrupt_ISR,f
  6434  0B37  3EFF               	addlw	-1
  6435  0B38  1D03               	skipz
  6436  0B39  2B32               	goto	u354_25
  6437  0B3A  0820               	movf	??_Interrupt_ISR,w
  6438  0B3B  008F               	movwf	15	;volatile
  6439                           
  6440                           ;isr.c: 96: TMR1L = timer1_init_val % 256UL;
  6441  0B3C  0856               	movf	_timer1_init_val,w
  6442  0B3D  008E               	movwf	14	;volatile
  6443                           
  6444                           ;isr.c: 98: if(++timer1_elapsed_num_overflow_1_update >= timer1_1_update)
  6445  0B3E  3001               	movlw	1
  6446  0B3F  1683               	bsf	3,5	;RP0=1, select bank3
  6447  0B40  1703               	bsf	3,6	;RP1=1, select bank3
  6448  0B41  07C0               	addwf	_timer1_elapsed_num_overflow_1_update^(0+384),f
  6449  0B42  3000               	movlw	0
  6450  0B43  1803               	skipnc
  6451  0B44  3001               	movlw	1
  6452  0B45  07C1               	addwf	(_timer1_elapsed_num_overflow_1_update+1)^(0+384),f
  6453  0B46  3000               	movlw	0
  6454  0B47  1803               	skipnc
  6455  0B48  3001               	movlw	1
  6456  0B49  07C2               	addwf	(_timer1_elapsed_num_overflow_1_update+2)^(0+384),f
  6457  0B4A  3000               	movlw	0
  6458  0B4B  1803               	skipnc
  6459  0B4C  3001               	movlw	1
  6460  0B4D  07C3               	addwf	(_timer1_elapsed_num_overflow_1_update+3)^(0+384),f
  6461  0B4E  083F               	movf	(_timer1_1_update+3)^(0+384),w
  6462  0B4F  0243               	subwf	(_timer1_elapsed_num_overflow_1_update+3)^(0+384),w
  6463  0B50  1D03               	skipz
  6464  0B51  2B5C               	goto	u355_25
  6465  0B52  083E               	movf	(_timer1_1_update+2)^(0+384),w
  6466  0B53  0242               	subwf	(_timer1_elapsed_num_overflow_1_update+2)^(0+384),w
  6467  0B54  1D03               	skipz
  6468  0B55  2B5C               	goto	u355_25
  6469  0B56  083D               	movf	(_timer1_1_update+1)^(0+384),w
  6470  0B57  0241               	subwf	(_timer1_elapsed_num_overflow_1_update+1)^(0+384),w
  6471  0B58  1D03               	skipz
  6472  0B59  2B5C               	goto	u355_25
  6473  0B5A  083C               	movf	_timer1_1_update^(0+384),w
  6474  0B5B  0240               	subwf	_timer1_elapsed_num_overflow_1_update^(0+384),w
  6475  0B5C                     u355_25:	
  6476  0B5C  1C03               	skipc
  6477  0B5D  2BB0               	goto	i1l465
  6478                           
  6479                           ;isr.c: 99: {
  6480                           ;isr.c: 100: if(++timer1_elapsed_num_update >= timer1_req_time_max_update)
  6481  0B5E  3001               	movlw	1
  6482  0B5F  07D2               	addwf	_timer1_elapsed_num_update^(0+384),f
  6483  0B60  1803               	skipnc
  6484  0B61  0AD3               	incf	(_timer1_elapsed_num_update+1)^(0+384),f
  6485  0B62  3000               	movlw	0
  6486  0B63  07D3               	addwf	(_timer1_elapsed_num_update+1)^(0+384),f
  6487  0B64  0852               	movf	_timer1_elapsed_num_update^(0+384),w
  6488  0B65  1283               	bcf	3,5	;RP0=0, select bank0
  6489  0B66  1303               	bcf	3,6	;RP1=0, select bank0
  6490  0B67  00A0               	movwf	??_Interrupt_ISR
  6491  0B68  1683               	bsf	3,5	;RP0=1, select bank3
  6492  0B69  1703               	bsf	3,6	;RP1=1, select bank3
  6493  0B6A  0853               	movf	(_timer1_elapsed_num_update+1)^(0+384),w
  6494  0B6B  1283               	bcf	3,5	;RP0=0, select bank0
  6495  0B6C  1303               	bcf	3,6	;RP1=0, select bank0
  6496  0B6D  00A1               	movwf	??_Interrupt_ISR+1
  6497  0B6E  01A2               	clrf	??_Interrupt_ISR+2
  6498  0B6F  01A3               	clrf	??_Interrupt_ISR+3
  6499  0B70  1683               	bsf	3,5	;RP0=1, select bank3
  6500  0B71  1703               	bsf	3,6	;RP1=1, select bank3
  6501  0B72  083B               	movf	(_timer1_req_time_max_update+3)^(0+384),w
  6502  0B73  1283               	bcf	3,5	;RP0=0, select bank0
  6503  0B74  1303               	bcf	3,6	;RP1=0, select bank0
  6504  0B75  0223               	subwf	??_Interrupt_ISR+3,w
  6505  0B76  1D03               	skipz
  6506  0B77  2B8E               	goto	u356_25
  6507  0B78  1683               	bsf	3,5	;RP0=1, select bank3
  6508  0B79  1703               	bsf	3,6	;RP1=1, select bank3
  6509  0B7A  083A               	movf	(_timer1_req_time_max_update+2)^(0+384),w
  6510  0B7B  1283               	bcf	3,5	;RP0=0, select bank0
  6511  0B7C  1303               	bcf	3,6	;RP1=0, select bank0
  6512  0B7D  0222               	subwf	??_Interrupt_ISR+2,w
  6513  0B7E  1D03               	skipz
  6514  0B7F  2B8E               	goto	u356_25
  6515  0B80  1683               	bsf	3,5	;RP0=1, select bank3
  6516  0B81  1703               	bsf	3,6	;RP1=1, select bank3
  6517  0B82  0839               	movf	(_timer1_req_time_max_update+1)^(0+384),w
  6518  0B83  1283               	bcf	3,5	;RP0=0, select bank0
  6519  0B84  1303               	bcf	3,6	;RP1=0, select bank0
  6520  0B85  0221               	subwf	??_Interrupt_ISR+1,w
  6521  0B86  1D03               	skipz
  6522  0B87  2B8E               	goto	u356_25
  6523  0B88  1683               	bsf	3,5	;RP0=1, select bank3
  6524  0B89  1703               	bsf	3,6	;RP1=1, select bank3
  6525  0B8A  0838               	movf	_timer1_req_time_max_update^(0+384),w
  6526  0B8B  1283               	bcf	3,5	;RP0=0, select bank0
  6527  0B8C  1303               	bcf	3,6	;RP1=0, select bank0
  6528  0B8D  0220               	subwf	??_Interrupt_ISR,w
  6529  0B8E                     u356_25:	
  6530  0B8E  1C03               	skipc
  6531  0B8F  2BA6               	goto	i1l3703
  6532                           
  6533                           ;isr.c: 101: {
  6534                           ;isr.c: 102: Timer1_Stop();
  6535  0B90  120A  158A  2072  120A  158A  	fcall	_Timer1_Stop
  6536                           
  6537                           ;isr.c: 107: timer1_elapsed_num_update = 0;
  6538  0B95  1683               	bsf	3,5	;RP0=1, select bank3
  6539  0B96  1703               	bsf	3,6	;RP1=1, select bank3
  6540  0B97  01D2               	clrf	_timer1_elapsed_num_update^(0+384)
  6541  0B98  01D3               	clrf	(_timer1_elapsed_num_update+1)^(0+384)
  6542                           
  6543                           ;isr.c: 108: timer1_elapsed_num_overflow_1_update = 0;
  6544  0B99  3000               	movlw	0
  6545  0B9A  00C3               	movwf	(_timer1_elapsed_num_overflow_1_update+3)^(0+384)
  6546  0B9B  3000               	movlw	0
  6547  0B9C  00C2               	movwf	(_timer1_elapsed_num_overflow_1_update+2)^(0+384)
  6548  0B9D  3000               	movlw	0
  6549  0B9E  00C1               	movwf	(_timer1_elapsed_num_overflow_1_update+1)^(0+384)
  6550  0B9F  3000               	movlw	0
  6551  0BA0  00C0               	movwf	_timer1_elapsed_num_overflow_1_update^(0+384)
  6552                           
  6553                           ;isr.c: 109: Timer1_Req_Time_Expiry_Appl_Proc();
  6554  0BA1  120A  118A  27FF  120A  158A  	fcall	_Timer1_Req_Time_Expiry_Appl_Proc
  6555  0BA6                     i1l3703:	
  6556                           
  6557                           ;isr.c: 110: }
  6558                           ;isr.c: 111: timer1_elapsed_num_overflow_1_update = 0;
  6559  0BA6  3000               	movlw	0
  6560  0BA7  1683               	bsf	3,5	;RP0=1, select bank3
  6561  0BA8  1703               	bsf	3,6	;RP1=1, select bank3
  6562  0BA9  00C3               	movwf	(_timer1_elapsed_num_overflow_1_update+3)^(0+384)
  6563  0BAA  3000               	movlw	0
  6564  0BAB  00C2               	movwf	(_timer1_elapsed_num_overflow_1_update+2)^(0+384)
  6565  0BAC  3000               	movlw	0
  6566  0BAD  00C1               	movwf	(_timer1_elapsed_num_overflow_1_update+1)^(0+384)
  6567  0BAE  3000               	movlw	0
  6568  0BAF  00C0               	movwf	_timer1_elapsed_num_overflow_1_update^(0+384)
  6569  0BB0                     i1l465:	
  6570  0BB0  1283               	bcf	3,5	;RP0=0, select bank0
  6571  0BB1  1303               	bcf	3,6	;RP1=0, select bank0
  6572  0BB2  082C               	movf	??_Interrupt_ISR+12,w
  6573  0BB3  00FF               	movwf	127
  6574  0BB4  082B               	movf	??_Interrupt_ISR+11,w
  6575  0BB5  008A               	movwf	10
  6576  0BB6  082A               	movf	??_Interrupt_ISR+10,w
  6577  0BB7  0084               	movwf	4
  6578  0BB8  0E29               	swapf	(??_Interrupt_ISR+9)^0,w
  6579  0BB9  0083               	movwf	3
  6580  0BBA  0EFE               	swapf	126,f
  6581  0BBB  0E7E               	swapf	126,w
  6582  0BBC  0009               	retfie
  6583  0BBD                     __end_of_Interrupt_ISR:	
  6584                           
  6585                           	psect	intentry
  6586  0004                     __pintentry:	
  6587                           ;incstack = 0
  6588                           ; Regs used in _Interrupt_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6589                           
  6590  0004                     interrupt_function:	
  6591  007E                     saved_w	set	btemp
  6592  0004  00FE               	movwf	btemp
  6593  0005  0E03               	swapf	3,w
  6594  0006  1283               	bcf	3,5	;RP0=0, select bank0
  6595  0007  1303               	bcf	3,6	;RP1=0, select bank0
  6596  0008  00A9               	movwf	??_Interrupt_ISR+9
  6597  0009  0804               	movf	4,w
  6598  000A  00AA               	movwf	??_Interrupt_ISR+10
  6599  000B  080A               	movf	10,w
  6600  000C  00AB               	movwf	??_Interrupt_ISR+11
  6601  000D  087F               	movf	btemp+1,w
  6602  000E  00AC               	movwf	??_Interrupt_ISR+12
  6603  000F  120A  158A  2A3D   	ljmp	_Interrupt_ISR
  6604                           
  6605                           	psect	text14
  6606  0881                     __ptext14:	
  6607 ;; *************** function i1___bmul *****************
  6608 ;; Defined at:
  6609 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\Umul8.c"
  6610 ;; Parameters:    Size  Location     Type
  6611 ;;  multiplier      1    wreg     unsigned char 
  6612 ;;  multiplicand    1    0[COMMON] unsigned char 
  6613 ;; Auto vars:     Size  Location     Type
  6614 ;;  multiplier      1    2[COMMON] unsigned char 
  6615 ;;  __bmul          1    3[COMMON] unsigned char 
  6616 ;; Return value:  Size  Location     Type
  6617 ;;                  1    wreg      unsigned char 
  6618 ;; Registers used:
  6619 ;;		wreg, status,2, status,0
  6620 ;; Tracked objects:
  6621 ;;		On entry : 0/0
  6622 ;;		On exit  : 0/0
  6623 ;;		Unchanged: 0/0
  6624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6625 ;;      Params:         1       0       0       0       0
  6626 ;;      Locals:         2       0       0       0       0
  6627 ;;      Temps:          1       0       0       0       0
  6628 ;;      Totals:         4       0       0       0       0
  6629 ;;Total ram usage:        4 bytes
  6630 ;; Hardware stack levels used:    1
  6631 ;; This function calls:
  6632 ;;		Nothing
  6633 ;; This function is called by:
  6634 ;;		_Interrupt_ISR
  6635 ;; This function uses a non-reentrant model
  6636 ;;
  6637                           
  6638                           
  6639                           ;psect for function i1___bmul
  6640  0881                     i1___bmul:	
  6641                           
  6642                           ;incstack = 0
  6643                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
  6644                           ;i1___bmul@multiplier stored from wreg
  6645  0881  00F2               	movwf	i1___bmul@multiplier
  6646  0882  01F3               	clrf	i1___bmul@product
  6647  0883                     i1l2581:	
  6648  0883  1C72               	btfss	i1___bmul@multiplier,0
  6649  0884  2889               	goto	i1l2585
  6650  0885  0870               	movf	i1___bmul@multiplicand,w
  6651  0886  00F1               	movwf	??i1___bmul
  6652  0887  0871               	movf	??i1___bmul,w
  6653  0888  07F3               	addwf	i1___bmul@product,f
  6654  0889                     i1l2585:	
  6655  0889  1003               	clrc
  6656  088A  0DF0               	rlf	i1___bmul@multiplicand,f
  6657  088B  1003               	clrc
  6658  088C  0CF2               	rrf	i1___bmul@multiplier,f
  6659  088D  0872               	movf	i1___bmul@multiplier,w
  6660  088E  1D03               	btfss	3,2
  6661  088F  2883               	goto	i1l2581
  6662  0890  0873               	movf	i1___bmul@product,w
  6663  0891  0008               	return
  6664  0892                     __end_ofi1___bmul:	
  6665                           
  6666                           	psect	text15
  6667  0872                     __ptext15:	
  6668 ;; *************** function _Timer1_Stop *****************
  6669 ;; Defined at:
  6670 ;;		line 169 in file "timer.c"
  6671 ;; Parameters:    Size  Location     Type
  6672 ;;		None
  6673 ;; Auto vars:     Size  Location     Type
  6674 ;;		None
  6675 ;; Return value:  Size  Location     Type
  6676 ;;                  1    wreg      void 
  6677 ;; Registers used:
  6678 ;;		wreg, status,2
  6679 ;; Tracked objects:
  6680 ;;		On entry : 0/0
  6681 ;;		On exit  : 0/0
  6682 ;;		Unchanged: 0/0
  6683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6684 ;;      Params:         0       0       0       0       0
  6685 ;;      Locals:         0       0       0       0       0
  6686 ;;      Temps:          1       0       0       0       0
  6687 ;;      Totals:         1       0       0       0       0
  6688 ;;Total ram usage:        1 bytes
  6689 ;; Hardware stack levels used:    1
  6690 ;; This function calls:
  6691 ;;		Nothing
  6692 ;; This function is called by:
  6693 ;;		_Interrupt_ISR
  6694 ;;		_Timer1_Run
  6695 ;; This function uses a non-reentrant model
  6696 ;;
  6697                           
  6698                           
  6699                           ;psect for function _Timer1_Stop
  6700  0872                     _Timer1_Stop:	
  6701                           
  6702                           ;timer.c: 172: {
  6703                           ;timer.c: 173: T1CONbits.TMR1ON = 0 ;
  6704                           
  6705                           ;incstack = 0
  6706                           ; Regs used in _Timer1_Stop: [wreg+status,2]
  6707  0872  1283               	bcf	3,5	;RP0=0, select bank0
  6708  0873  1303               	bcf	3,6	;RP1=0, select bank0
  6709  0874  1010               	bcf	16,0	;volatile
  6710                           
  6711                           ;timer.c: 174: PIE1bits.TMR1IE = 0;
  6712  0875  1683               	bsf	3,5	;RP0=1, select bank1
  6713  0876  1303               	bcf	3,6	;RP1=0, select bank1
  6714  0877  100C               	bcf	12,0	;volatile
  6715                           
  6716                           ;timer.c: 175: TMR1IF = 0;
  6717  0878  1283               	bcf	3,5	;RP0=0, select bank0
  6718  0879  1303               	bcf	3,6	;RP1=0, select bank0
  6719  087A  100C               	bcf	12,0	;volatile
  6720                           
  6721                           ;timer.c: 176: timer1_cur_run_state = TMR1_STOP_STATE;
  6722  087B  01DE               	clrf	_timer1_cur_run_state
  6723                           
  6724                           ;timer.c: 177: timer1_cur_service_type = TMR1_INVALID_SERVICE;
  6725  087C  3004               	movlw	4
  6726  087D  00F0               	movwf	??_Timer1_Stop
  6727  087E  0870               	movf	??_Timer1_Stop,w
  6728  087F  00DC               	movwf	_timer1_cur_service_type
  6729  0880  0008               	return
  6730  0881                     __end_of_Timer1_Stop:	
  6731                           
  6732                           	psect	text16
  6733  07FF                     __ptext16:	
  6734 ;; *************** function _Timer1_Req_Time_Expiry_Appl_Proc *****************
  6735 ;; Defined at:
  6736 ;;		line 56 in file "intp_event_handle.c"
  6737 ;; Parameters:    Size  Location     Type
  6738 ;;		None
  6739 ;; Auto vars:     Size  Location     Type
  6740 ;;		None
  6741 ;; Return value:  Size  Location     Type
  6742 ;;                  1    wreg      void 
  6743 ;; Registers used:
  6744 ;;		None
  6745 ;; Tracked objects:
  6746 ;;		On entry : 0/0
  6747 ;;		On exit  : 0/0
  6748 ;;		Unchanged: 0/0
  6749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6750 ;;      Params:         0       0       0       0       0
  6751 ;;      Locals:         0       0       0       0       0
  6752 ;;      Temps:          0       0       0       0       0
  6753 ;;      Totals:         0       0       0       0       0
  6754 ;;Total ram usage:        0 bytes
  6755 ;; Hardware stack levels used:    1
  6756 ;; This function calls:
  6757 ;;		Nothing
  6758 ;; This function is called by:
  6759 ;;		_Interrupt_ISR
  6760 ;; This function uses a non-reentrant model
  6761 ;;
  6762                           
  6763                           
  6764                           ;psect for function _Timer1_Req_Time_Expiry_Appl_Proc
  6765  07FF                     _Timer1_Req_Time_Expiry_Appl_Proc:	
  6766                           
  6767                           ;incstack = 0
  6768                           ; Regs used in _Timer1_Req_Time_Expiry_Appl_Proc: []
  6769  07FF  0008               	return
  6770  0800                     __end_of_Timer1_Req_Time_Expiry_Appl_Proc:	
  6771                           
  6772                           	psect	text17
  6773  0003                     __ptext17:	
  6774 ;; *************** function _External_Interrupt_Occured_Appl_Proc *****************
  6775 ;; Defined at:
  6776 ;;		line 38 in file "intp_event_handle.c"
  6777 ;; Parameters:    Size  Location     Type
  6778 ;;		None
  6779 ;; Auto vars:     Size  Location     Type
  6780 ;;		None
  6781 ;; Return value:  Size  Location     Type
  6782 ;;                  1    wreg      void 
  6783 ;; Registers used:
  6784 ;;		None
  6785 ;; Tracked objects:
  6786 ;;		On entry : 0/0
  6787 ;;		On exit  : 0/0
  6788 ;;		Unchanged: 0/0
  6789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6790 ;;      Params:         0       0       0       0       0
  6791 ;;      Locals:         0       0       0       0       0
  6792 ;;      Temps:          0       0       0       0       0
  6793 ;;      Totals:         0       0       0       0       0
  6794 ;;Total ram usage:        0 bytes
  6795 ;; Hardware stack levels used:    1
  6796 ;; This function calls:
  6797 ;;		Nothing
  6798 ;; This function is called by:
  6799 ;;		_Interrupt_ISR
  6800 ;; This function uses a non-reentrant model
  6801 ;;
  6802                           
  6803                           
  6804                           ;psect for function _External_Interrupt_Occured_Appl_Proc
  6805  0003                     _External_Interrupt_Occured_Appl_Proc:	
  6806                           
  6807                           ;incstack = 0
  6808                           ; Regs used in _External_Interrupt_Occured_Appl_Proc: []
  6809  0003  0008               	return
  6810  0004                     __end_of_External_Interrupt_Occured_Appl_Proc:	
  6811                           
  6812                           	psect	text18
  6813  0844                     __ptext18:	
  6814 ;; *************** function _ADC_Conv_Over_Appl_Proc *****************
  6815 ;; Defined at:
  6816 ;;		line 74 in file "intp_event_handle.c"
  6817 ;; Parameters:    Size  Location     Type
  6818 ;;  adc_cur_chan    1    wreg     enum E1834
  6819 ;; Auto vars:     Size  Location     Type
  6820 ;;  adc_cur_chan    1    0[COMMON] enum E1834
  6821 ;; Return value:  Size  Location     Type
  6822 ;;                  1    wreg      void 
  6823 ;; Registers used:
  6824 ;;		wreg
  6825 ;; Tracked objects:
  6826 ;;		On entry : 0/0
  6827 ;;		On exit  : 0/0
  6828 ;;		Unchanged: 0/0
  6829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6830 ;;      Params:         0       0       0       0       0
  6831 ;;      Locals:         0       0       0       0       0
  6832 ;;      Temps:          0       0       0       0       0
  6833 ;;      Totals:         0       0       0       0       0
  6834 ;;Total ram usage:        0 bytes
  6835 ;; Hardware stack levels used:    1
  6836 ;; This function calls:
  6837 ;;		Nothing
  6838 ;; This function is called by:
  6839 ;;		_Interrupt_ISR
  6840 ;; This function uses a non-reentrant model
  6841 ;;
  6842                           
  6843                           
  6844                           ;psect for function _ADC_Conv_Over_Appl_Proc
  6845  0844                     _ADC_Conv_Over_Appl_Proc:	
  6846                           
  6847                           ;incstack = 0
  6848                           ; Regs used in _ADC_Conv_Over_Appl_Proc: [wreg]
  6849  0844  0008               	return
  6850  0845                     __end_of_ADC_Conv_Over_Appl_Proc:	
  6851  007E                     btemp	set	126	;btemp
  6852  007E                     wtemp0	set	126


Data Sizes:
    Strings     379
    Constant    10
    Data        61
    BSS         92
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     48      64
    BANK1            80     61      61
    BANK3            96      0      89
    BANK2            96     35      77

Pointer List with Targets:

    UART_Transmit_Str@transmit_str	PTR const unsigned char  size(2) Largest target is 54
		 -> STR_14(CODE[54]), STR_13(CODE[46]), STR_12(CODE[52]), STR_11(CODE[13]), 
		 -> STR_10(CODE[13]), STR_9(CODE[21]), STR_8(CODE[25]), STR_7(CODE[25]), 
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[47]), 
		 -> STR_2(CODE[45]), STR_1(CODE[35]), 

    Encoded_To_Actual_Analog_Val_Calc@analog_val_in_digital_frac	const PTR unsigned long  size(1) Largest target is 4
		 -> main@r_at_ch_peak_volt_frac(BANK2[4]), 

    Encoded_To_Actual_Analog_Val_Calc@analog_val_in_digital_int	const PTR unsigned long  size(1) Largest target is 4
		 -> main@r_at_ch_peak_volt_int(BANK2[4]), 

    ADC_Start_Conv@set_adc_parameters	PTR struct . size(1) Largest target is 5
		 -> adc_cur_parameters(BANK3[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Interrupt_ISR in COMMON

    _Interrupt_ISR->i1___bmul

Critical Paths under _main in BANK0

    _main->_UART_Transmit_Num
    _Encoded_To_Actual_Analog_Val_Calc->___lldiv
    _ADC_Start_Conv->_UART_Transmit_Num
    _UART_Transmit_Str->_UART_Transmit_Char
    _UART_Transmit_Num->___lldiv
    ___llmod->___lmul
    ___lldiv->___lmul
    _ADC_Conf_Channel->___bmul

Critical Paths under _Interrupt_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_ADC_Start_Conv
    _ADC_Start_Conv->_UART_Transmit_Num

Critical Paths under _Interrupt_ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt_ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                41    41      0   35455
                                             57 BANK1      4     4      0
                                              0 BANK2     35    35      0
                   _ADC_Conf_Channel
                     _ADC_Start_Conv
  _Encoded_To_Actual_Analog_Val_Calc
                          _UART_Init
                 _UART_Transmit_Char
                  _UART_Transmit_Num
                  _UART_Transmit_Str
                             ___bmul
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Encoded_To_Actual_Analog_Val_Calc                   50    36     14    9205
                                             40 BANK0      4     4      0
                                              0 BANK1     34    20     14
                            ___lldiv
                            ___llmod
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8    2292
                                             13 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _ADC_Start_Conv                                      12    12      0    9518
                                             45 BANK1     12    12      0
                  _Is_ADC_Converting
                 _UART_Transmit_Char
                  _UART_Transmit_Num
                  _UART_Transmit_Str
 ---------------------------------------------------------------------------------
 (1) _UART_Transmit_Str                                    2     0      2    1174
                                             14 BANK0      2     0      2
                 _UART_Transmit_Char
 ---------------------------------------------------------------------------------
 (1) _UART_Transmit_Num                                   53    49      4    7763
                                             40 BANK0      8     4      4
                                              0 BANK1     45    45      0
                 _UART_Transmit_Char
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8    2234
                                             26 BANK0     10     2      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8    3783
                                             26 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _UART_Transmit_Char                                   1     1      0      31
                                             13 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Is_ADC_Converting                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Conf_Channel                                     2     2      0     483
                                             17 BANK0      2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     421
                                             13 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Interrupt_ISR                                       17    17      0     299
                                              4 COMMON     4     4      0
                                              0 BANK0     13    13      0
            _ADC_Conv_Over_Appl_Proc
_External_Interrupt_Occured_Appl_Pro
   _Timer1_Req_Time_Expiry_Appl_Proc
                        _Timer1_Stop
                           i1___bmul
 ---------------------------------------------------------------------------------
 (5) i1___bmul                                             4     3      1     163
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (5) _Timer1_Stop                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Timer1_Req_Time_Expiry_Appl_Proc                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _External_Interrupt_Occured_Appl_Proc                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADC_Conv_Over_Appl_Proc                              1     1      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Conf_Channel
     ___bmul
   _ADC_Start_Conv
     _Is_ADC_Converting
     _UART_Transmit_Char
     _UART_Transmit_Num
       _UART_Transmit_Char
       ___lldiv
         ___lmul (ARG)
       ___llmod
         ___lmul (ARG)
     _UART_Transmit_Str
       _UART_Transmit_Char
   _Encoded_To_Actual_Analog_Val_Calc
     ___lldiv
       ___lmul (ARG)
     ___llmod
       ___lmul (ARG)
     ___lmul
   _UART_Init
   _UART_Transmit_Char
   _UART_Transmit_Num
     _UART_Transmit_Char
     ___lldiv
       ___lmul (ARG)
     ___llmod
       ___lmul (ARG)
   _UART_Transmit_Str
     _UART_Transmit_Char
   ___bmul
   ___lldiv
     ___lmul (ARG)
   ___lmul

 _Interrupt_ISR (ROOT)
   _ADC_Conv_Over_Appl_Proc
   _External_Interrupt_Occured_Appl_Proc
   _Timer1_Req_Time_Expiry_Appl_Proc
   _Timer1_Stop
   i1___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      59       9       92.7%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60     23      4D      11       80.2%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     3D      3D       7       76.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     30      40       5       80.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     131      12        0.0%
ABS                  0      0     131       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Fri Mar 16 11:39:10 2018

                                                          pc 0002  
                                             ___bmul@product 002F  
                                                __CFG_CP$OFF 0000  
                                                         l50 0C2A  
                                                         l52 0C2E  
                                                         l55 0C49  
                                                         l65 0D4C  
                                                         _GO 00F9  
                                  ??_ADC_Conv_Over_Appl_Proc 0070  
                                                         fsr 0004  
                                           ??_ADC_Start_Conv 00CD  
                                                        l300 0443  
                                                        l400 0743  
                                                        l402 07C3  
                                                        l354 085F  
                                                        l296 00E7  
                                                        l385 04CF  
                                                        _RB1 0031  
                                                        _RB2 0032  
                                                        _RB3 0033  
                                                        _RE0 0048  
                                                        _RE1 0049  
                                                        _RE2 004A  
                                               __CFG_CPD$OFF 0000  
                                                        _RX9 00C6  
                                                        _TX9 04C6  
                                                        fsr0 0004  
                                                        indf 0000  
                                               __CFG_IESO$ON 0000  
                                               __CFG_LVP$OFF 0000  
                                                       l3203 0850  
                                                       l3301 089C  
                                                       l3213 08C8  
                                                       l3231 04D8  
                                                       l3161 099E  
                                                       l3225 04B1  
                                                       l3243 0599  
                                                       l3173 09D3  
                                                       l3237 051D  
                                                       l3229 04B7  
                                                       l3325 0BCB  
                                                       l3159 098E  
                                                       l3183 0938  
                                                       l3263 0702  
                                                       l3255 0691  
                                                       l3351 0C86  
                                                       l3169 09C6  
                                                       l3185 0948  
                                                       l3193 0973  
                                                       l3273 0784  
                                                       l3249 0615  
                                                       l3337 0C30  
                                                       l3259 06CD  
                                                       l3363 0CCC  
                                                       l3339 0C3E  
                                                       l3283 08F7  
                                                       l3189 0966  
                                                       l3365 0CD9  
                                                       l3373 0D17  
                                                       l3279 0795  
                                                       l3375 0D3C  
                                                       l3287 090D  
                                                       l3297 0896  
                                                       l3377 0D45  
                                                       l3609 0422  
                                                       l3547 00A5  
                                                       l3539 0083  
                                                       l3397 0FEA  
                                                       l3559 0105  
                                                       l3589 031E  
                                                       _ADIF 0066  
                                                       _ADFM 04FF  
                                                       STR_1 1110  
                                                       STR_2 10E3  
                                                       STR_3 1086  
                                                       STR_4 1194  
                                                       STR_5 1194  
                                                       STR_6 1194  
                                                       STR_7 1133  
                                                       STR_8 114C  
                                                       STR_9 1165  
                                                       _BRGH 04C2  
                                                       _CREN 00C4  
                                                       _FERR 00C2  
                                                       u3005 0727  
                                                       u3015 0768  
                                                       u3205 0C9A  
                                                       u3125 0BDA  
                                                       u3045 090F  
                                                       u3215 0CBD  
                                                       u3135 0BE9  
                                                       u3055 0917  
                                                       u3225 0D21  
                                                       u3145 0BFE  
                                                       u3250 0FCC  
                                                       u3235 0D2F  
                                                       u3155 0C0D  
                                                       u3251 0FCD  
                                                       u3243 0D5C  
                                                       u3252 0FD2  
                                                       u3420 031A  
                                                       u3165 0C1B  
                                                       u3253 0FD3  
                                                       u3405 0254  
                                                       u3425 0303  
                                                       u3426 0306  
                                                       u3195 0C65  
                                                       u3427 030D  
                                                       u3363 00A3  
                                                       u3428 0310  
                                                       u3429 0317  
                                                       u2815 0992  
                                                       u3383 0103  
                                                       u3375 00DD  
                                                       u2905 0956  
                                                       u2835 09A0  
                                                       u2915 0967  
                                                       u3395 01F6  
                                                       u2845 09B5  
                                                       _INTE 005C  
                                                       u2950 045F  
                                                       _INTF 0059  
                                                       u2855 09C7  
                                                       u2960 0475  
                                                       u3747 0C42  
                                                       _RCIE 0465  
                                                       _RCIF 0065  
                                                       u2885 093C  
                                                       u2995 06E6  
                                                       _OERR 00C1  
                                                       _TMR1 000E  
                                                       _TMR2 0011  
                                                       _SPEN 00C7  
                                                       _SREN 00C5  
                                                       _TRMT 04C1  
                                                       _TXIE 0464  
                                                       _TXEN 04C5  
                                                       _SYNC 04C4  
                                               __CFG_WRT$OFF 0000  
                                              __CFG_FCMEN$ON 0000  
                                                       _main 0062  
                                                       btemp 007E  
                                                       start 0012  
                          _timer1_last_run_state_before_stop 005D  
                                          ___bmul@multiplier 0030  
                                              __CFG_MCLRE$ON 0000  
                                 __end_of_UART_Transmit_Char 0864  
                                    _timer1_max_num_overflow 01B4  
                                                      ?_main 0070  
                                                      STR_10 1187  
                                                      STR_11 117A  
                                                      STR_12 1052  
                                                      STR_13 10B5  
                                                      STR_14 101C  
                                                      _BRG16 0C3B  
                                              __CFG_WDTE$OFF 0000  
                                                      _ANSEL 0188  
                                            __end_of___lldiv 09DC  
                                      _timer1_prescale_shift 01D0  
                                                      _T1CON 0010  
                                            __end_of___llmod 097C  
                                                      _T2CON 0012  
                                                      i1l465 0BB0  
                                                      _RCREG 001A  
                                   _analog_val_in_digital_ch 01C4  
                                                      _TMR1H 000F  
                                                      _TMR1L 000E  
                                                      _SPBRG 0099  
                                                      _PORTD 0008  
                                                      _TRISD 0088  
                                                      _TXREG 0019  
                                            _timer1_init_val 0056  
                                        ___lmul@multiplicand 0031  
                                              __CFG_PWRTE$ON 0000  
                                         __size_of_UART_Init 0023  
                                            _timer2_init_val 01A4  
                                               main@temp_int 0149  
                                                      main@i 0143  
                                            _timer1_prescale 0078  
                                           __end_ofi1___bmul 0892  
                                             __CFG_BOREN$OFF 0000  
                                                      pclath 000A  
                                            _timer2_prescale 01E5  
                                                      status 0003  
                                                      wtemp0 007E  
                                            __initialization 0015  
                                           _cur_disp_lcd_loc 007A  
                                               __end_of_main 0452  
                                                     ??_main 00D9  
                                         _adc_cur_parameters 01D6  
                                     main@fault_occured_flag 013A  
                          ADC_Start_Conv@adc_value_most_byte 00D6  
 Encoded_To_Actual_Analog_Val_Calc@analog_val_in_digital_int 00AC  
                  UART_Transmit_Num@uart_datanum_disp_format 00BC  
                                                     _ADCON0 001F  
                                                     _ADCON1 009F  
                                           ___llmod@dividend 003E  
                                                     _ADRESH 001E  
                                                     _ADRESL 009E  
                                                     _ANSELH 0189  
                                   __end_of_ADC_Conf_Channel 0A3D  
                                                     i1l2581 0883  
                                                     i1l3703 0BA6  
                                                     i1l2585 0889  
                                                     i1l3671 0AA2  
                                                     i1l3657 0A47  
                                                     i1l3683 0B26  
                                                     u352_25 0AFB  
                                                     u354_25 0B32  
                                                     u355_25 0B5C  
                                                     u356_25 0B8E  
                                                     _TMR1IF 0060  
                                                     _TMR2IF 0061  
                         _timer2_req_time_delay_in_milli_sec 0190  
                            UART_Transmit_Num@hundreds_digit 00BF  
                           Interrupt_ISR@adc_value_most_byte 0076  
                                              ??_Timer1_Stop 0070  
                                       _timer2_cur_run_state 005B  
                                          __end_of_UART_Init 08C8  
                                 main@r_at_ch_peak_volt_frac 0159  
                                                     ___bmul 0892  
                                                     ___lmul 08ED  
                                                  ??___lldiv 0042  
                                                  ??___llmod 0042  
                                  ADC_Start_Conv@rcvd_status 00D3  
                                     __size_of_Interrupt_ISR 0180  
                                              main@temp_frac 014D  
                                               __pdataCOMMON 0078  
                                                     saved_w 007E  
                         ADC_Start_Conv@adc_value_least_byte 00D4  
                                    _timer2_max_num_overflow 0198  
                       UART_Transmit_Num@tens_thousand_digit 00BA  
                       _timer2_elapsed_num_overflow_1_update 01A0  
                                    __end_of__initialization 005E  
            Encoded_To_Actual_Analog_Val_Calc@min_analog_val 00A8  
                                        ___bmul@multiplicand 002D  
                                    _timer1_cur_service_type 005C  
                                             __pcstackCOMMON 0070  
                                               __pidataBANK2 07C4  
                                               __pidataBANK3 0864  
                                        __end_of_Timer1_Stop 0881  
                                                  ?i1___bmul 0070  
                                UART_Transmit_Num@tens_digit 00C1  
                                           i1___bmul@product 0073  
                                  main@r_at_ch_peak_volt_int 0155  
                                              _Interrupt_ISR 0A3D  
                                                 __pbssBANK0 0050  
                                                 __pbssBANK3 0190  
                                 _timer2_req_time_max_update 0194  
     Encoded_To_Actual_Analog_Val_Calc@full_scale_analog_val 00A4  
Encoded_To_Actual_Analog_Val_Calc@analog_val_in_digital_frac 00AD  
                                                 __pmaintext 0062  
                                                    ?___bmul 002D  
                                                    ?___lmul 002D  
                                UART_Transmit_Num@unit_digit 00C3  
                                                 __pintentry 0004  
                                             ___lmul@product 0036  
                                                 ??i1___bmul 0071  
                                                    _T1CKPS0 0084  
                                                    _T1CKPS1 0085  
                                                    _T2CKPS0 0090  
                                                    _T2CKPS1 0091  
                                         _UART_Transmit_Char 085A  
             Encoded_To_Actual_Analog_Val_Calc@remainder_val 00BE  
                                             ?_Interrupt_ISR 0070  
                                        ?_UART_Transmit_Char 0070  
                                                 __stringtab 1000  
                   __end_of_Timer1_Req_Time_Expiry_Appl_Proc 0800  
                  __size_of_Timer1_Req_Time_Expiry_Appl_Proc 0001  
                         ??_Timer1_Req_Time_Expiry_Appl_Proc 0070  
                          ?_Timer1_Req_Time_Expiry_Appl_Proc 0070  
                           _Timer1_Req_Time_Expiry_Appl_Proc 07FF  
                 Encoded_To_Actual_Analog_Val_Calc@adc_value 00A0  
                       _timer1_elapsed_num_overflow_1_update 01C0  
                                                _Timer1_Stop 0872  
                                   ?_ADC_Conv_Over_Appl_Proc 0070  
                                            __size_of___bmul 0013  
                                            __size_of___lmul 0041  
                                                    ___lldiv 097C  
                                       ??_UART_Transmit_Char 002D  
                                                    ___llmod 092E  
                                                    __ptext1 08A5  
                                                    __ptext2 0D4D  
                                                    __ptext3 08ED  
                                                    __ptext4 0BBD  
                                                    __ptext5 08C8  
                                                    __ptext6 0452  
                                                    __ptext7 092E  
                                                    __ptext8 097C  
                                                    __ptext9 085A  
                                                  _T1CONbits 0010  
                                                  _T2CONbits 0012  
                                        i1___bmul@multiplier 0072  
                                    _timer2_cur_service_type 007D  
                                                    _to_disp 01C8  
                                                    clrloop0 0853  
                                       end_of_initialization 005E  
                                           _lcd_read_command 01D4  
                                    __size_of_ADC_Start_Conv 0190  
                                          ?_ADC_Conf_Channel 0070  
                                         ??_ADC_Conf_Channel 0031  
                                            ___lldiv@divisor 003A  
                                            ___lldiv@counter 0047  
                              UART_Transmit_Str@transmit_str 002E  
           Encoded_To_Actual_Analog_Val_Calc@remainder_val_1 00B6  
                                       UART_Transmit_Num@num 00C5  
                                               __pstringtext 1000  
                                                  _UART_Init 08A5  
                        UART_Transmit_Num@uart_disp_data_int 0048  
                                          LCD_Disp_Num@F1881 0120  
                                          LCD_Disp_Num@F1879 01DB  
                                                  _TRISBbits 0086  
                                                  _TRISDbits 0088  
                                                  _TRISEbits 0089  
                                            ??_Interrupt_ISR 0020  
                            __end_of_ADC_Conv_Over_Appl_Proc 0845  
                           UART_Transmit_Num@thousands_digit 00BD  
                                             __end_of___bmul 08A5  
                                             __end_of___lmul 092E  
                                                 ?_UART_Init 0070  
                                              __pidataCOMMON 0845  
            __end_ofUART_Receive_Char@overrun_error_msg_disp 1017  
                    UART_Receive_Char@overrun_error_msg_disp 1012  
                                          __size_ofi1___bmul 0011  
                                        start_initialization 0015  
                                  _timer2_elapsed_num_update 01CC  
                                            ___llmod@divisor 003A  
                                            ___llmod@counter 0043  
                                   __CFG_FOSC$INTRC_NOCLKOUT 0000  
                                                   ??___bmul 002E  
                                                   ??___lmul 0035  
                                                 init_fetch0 07EE  
                                                __pdataBANK2 0110  
                                                __pdataBANK3 01DB  
                                                __pbssCOMMON 007D  
                                      _timer2_prescale_shift 01CE  
                                                  ___latbits 0002  
                                              __pcstackBANK0 0020  
                                              __pcstackBANK1 00A0  
                                              __pcstackBANK2 013A  
                              main@max_r_at_ch_encoded_value 0151  
                                             _ADC_Start_Conv 0BBD  
                                  _measure_pulse_lower_count 01AC  
                                  UART_Transmit_Num@disp_num 00C9  
                                  UART_Transmit_Num@hex_data 00A0  
                                               ?_Timer1_Stop 0070  
                                 main@calc_r_source_rms_volt 0147  
                                                   ?___lldiv 003A  
                  __end_of_Encoded_To_Actual_Analog_Val_Calc 1000  
                 __size_of_Encoded_To_Actual_Analog_Val_Calc 02B3  
                        ??_Encoded_To_Actual_Analog_Val_Calc 0048  
                         ?_Encoded_To_Actual_Analog_Val_Calc 00A0  
                          _Encoded_To_Actual_Analog_Val_Calc 0D4D  
                                                   ?___llmod 003A  
                                  UART_Transmit_Num@num_data 00B0  
                                                ??_UART_Init 002D  
                                          _UART_Transmit_Num 0452  
                                          _UART_Transmit_Str 08C8  
                                         ?_UART_Transmit_Num 0048  
                                         ?_UART_Transmit_Str 002E  
                           __size_of_ADC_Conv_Over_Appl_Proc 0001  
                                     __end_of_ADC_Start_Conv 0D4D  
                                        ??_UART_Transmit_Num 004C  
                                        ??_UART_Transmit_Str 0030  
        Encoded_To_Actual_Analog_Val_Calc@temp_remainder_val 00B2  
                                          interrupt_function 0004  
                         _timer1_req_time_delay_in_milli_sec 01B0  
                                                  clear_ram0 0852  
                                                   _PIE1bits 008C  
                                      i1___bmul@multiplicand 0070  
                                          _Is_ADC_Converting 084A  
                                  __end_of_UART_Transmit_Num 07C4  
                                  __end_of_UART_Transmit_Str 08ED  
                                  __size_of_ADC_Conf_Channel 0061  
                                __size_of_UART_Transmit_Char 000A  
                                         ?_Is_ADC_Converting 0070  
                                                   i1___bmul 0881  
                                                 _ADCON0bits 001F  
                                                __stringbase 1012  
                                            _adc_cur_channel 005F  
                                        ??_Is_ADC_Converting 002D  
                                            ?_ADC_Start_Conv 0070  
                                          ___lmul@multiplier 002D  
                                  _measure_pulse_upper_count 01A8  
                     ADC_Conv_Over_Appl_Proc@adc_cur_channel 0070  
                          _timer2_last_run_state_before_stop 005A  
                                  __end_of_Is_ADC_Converting 0852  
                                           __size_of___lldiv 0060  
                                           __size_of___llmod 004E  
                                         __end_of__stringtab 1012  
                                    main@r_at_ch_encoded_val 013F  
                                                   __ptext10 084A  
                                                   __ptext11 09DC  
                                                   __ptext12 0892  
                                                   __ptext13 0A3D  
                                                   __ptext14 0881  
                                                   __ptext15 0872  
                                                   __ptext16 07FF  
                                                   __ptext17 0003  
                                                   __ptext18 0844  
                                          __CFG_BOR4V$BOR40V 0000  
                                      __end_of_Interrupt_ISR 0BBD  
                                          _cur_input_lcd_loc 01E7  
                                                   _lcd_unit 0050  
                           ADC_Start_Conv@set_adc_parameters 00D8  
               __end_of_External_Interrupt_Occured_Appl_Proc 0004  
              __size_of_External_Interrupt_Occured_Appl_Proc 0001  
                     ??_External_Interrupt_Occured_Appl_Proc 0070  
                      ?_External_Interrupt_Occured_Appl_Proc 0070  
                       _External_Interrupt_Occured_Appl_Proc 0003  
                                              __size_of_main 03F0  
                                     UART_Transmit_Num@F1843 0130  
                                     UART_Transmit_Num@F1845 0110  
                                 _lcd_avail_loc_within_limit 007C  
                                 __size_of_UART_Transmit_Num 0372  
                                 __size_of_UART_Transmit_Str 0025  
                                       __size_of_Timer1_Stop 000F  
                                                   main@temp 013B  
                                    _ADC_Conv_Over_Appl_Proc 0844  
                                                 _INTCONbits 000B  
                          Interrupt_ISR@adc_value_least_byte 0074  
                                                   init_ram0 07F2  
                                  _timer1_elapsed_num_update 01D2  
                                                   intlevel1 0000  
                                           ___lldiv@dividend 003E  
                        ADC_Conf_Channel@set_adc_cur_channel 0032  
                                       _timer1_cur_run_state 005E  
                                                  stringcode 100A  
                                 __size_of_Is_ADC_Converting 0008  
          Encoded_To_Actual_Analog_Val_Calc@remainder_val_10 00BA  
                                           _ADC_Conf_Channel 09DC  
                            UART_Transmit_Char@transmit_char 002D  
                                           ___lldiv@quotient 0043  
                                                   stringtab 1000  
                                            _timer1_1_update 01BC  
                                            _timer2_1_update 019C  
                Encoded_To_Actual_Analog_Val_Calc@temp_val_1 00AE  
                                 _timer1_req_time_max_update 01B8  
            __end_ofUART_Receive_Char@framing_error_msg_disp 101C  
                    UART_Receive_Char@framing_error_msg_disp 1017  
